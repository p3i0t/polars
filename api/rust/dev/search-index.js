var searchIndex = new Map(JSON.parse('[\
["polars",{"t":"SQCCQCHCCCEECCCEHIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFFFIFKFFKFFFKFFINNNNNNNNNNMMNNNNNNNNNNNNNNNNNMNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNCNNNNNNNNNNNMMMMHNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFMNMONNNHNGPPPNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFFKFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNCCPTTTTTTPTTTFKFFGFPTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNMNNNNNNNNNNNNNNNNNNNCNNNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPKKPFFPNNNMMMMMMNMCNNNNNNNMMNNNNNNNNNNNNNNOONNNNNNMMNNNNNNNMCMMCNNNNNNNNCMMCMMMMNNNNNNNNNNNMMOONNNNNOONNNMMMOOMNNNMNMMCMMMMMCMMNNMMMNNNNNNNNNNNNMNNNNNNNNNNNNNNNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHKFFOOOOOOOOMMCHHHHHHHHHHPGPPRIKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPPIFPPIFPPPPIFPPPPIFPPPFFIPPFPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIKKKKRGFPIKPPPIPFPPPFPPPPPIFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNMNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNHHNNNHNNNNNNNNNNNNNNNNNNNNNNNONNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNFFFKGPFPPPGHMHHCCGPPPPGFNNNNNHNNHNNNNNNNHNCCPPPPPPFPPPPPPGIGPPPPPPPPNNNNNNNCNNNNNNNNNNNNQNNNNNNNNNNNNNNNHNNNNNNHQQQQHHNNNNNNNNNNNNNNOOOOJJJPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHPPGPPPPPPIPGPPKFFPPPPPGFKPPKPPPRIKPKKFIGFFGKKPFKKPKKGPPJPPPPPFFPPPPIIPPKPIFPFKPPPPPPIFGFIPPFFPFPPPPFPPPFFGKFGFPPPFFKKKKKKKKKKKKKKFIKKKKKKKKKKKKFKKKKPGGPPPPPPPGPPPPPPPPPPPKGFFFFFPPPPPPJJFKKPPPGPPPPPPIKPFPPPFIPKFPPPPPPIFPKPPPPPPGPPPFPPPPPFIKFIFPPPPPPPPGPPGKFPPPPPPJJFFPIFIFIPIGPPPPPPPPPFPPPPPPPIFPPPPIFPPPPPPPKKKPRPGKPPPKPIPFFPGPFGGFFIPPPPFPPRRRPPPPSJPPPPIIIIIPPFPKGKKKPIPPIFPPPPIFPPPPIFPPPPIFPPPPIFPPGPKKKKKPGFFFFFFFFPPKPPPKPPPRPPPPRPPFFGKFPGGPGFPFFFPPPGPIPIIPPPPPFKFFFPPPPPPIPPPPKPPPPPPFFKIPKFKKFFFKPGPFPPKPPPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPPPSPPPPKKPPPPPRPPPPPGPKPFGPPPPPPPPPPPFPPPPPPPGIFKKKPPIPFPPPPGFPPPRPRPFFRJGGFFFFFIPRIIIIIPKKGKKKKKIKKKRKPGFPPKGPGPPPPPPPGFKPKPPPPPGPPPPPPPPFPPFFFFKFPPPKIPPPPFRPFFFFPPIGPPPPKKFFPKKKKKKKKPPPPPPPPPPPPKFIPPPPPPFFFPPPFPGPKFPPPPPPPFPIIPGKKPFPPPPPPFPPPFFPPFPPPPPPPKPGKPFPPPPPPPIKPFGIPPPKPPPPPPPPPPRRPFPPPPPPIFPPPPIFPPPPIFPPPPIFKPPPFPGPPGPPFPPPPRRPPKKPPPFPFPPGGPPPPPRRPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNHNNNNNNNNNHNMNNNMNNNCNHNHNNONNNNONNNHNMMNNMMMNNHNMMNNHMMHNMNNNMNNNMNNHNMNNHNOCNMNNMCNMMNNNNNMNNNNNMNNNNMMNNMHNNNHNNNHONNNNNNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOOMNHMMNNHMNNNNNMMMNCNNNNNONNHHHMNMMOCMMHNHNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCNOOOONNHNNOHHNHNNNNNNNNNNNHNOONONNOONHNHNNHHHHNNNNNNNNHHNNNNHHNNNONNNHNHHNHNHNHHNNONNOCOHCHOHHHHHNNNOMNONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNHOQOHNNNOOMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHCNMNOHHOHOONNNONNHHNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNMCNNNNNNNNNOONNNNNNNNNOOONNCNNNMMMNNNNNNMMMMNNNNNNNNNNNNNNNMNNNNHNNNCNOCNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOOHNOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNMNNNNMNNONNNMMNNNNMNNCMNNNNMMOCNCNNNMNNNNNMNMNNNNNNMNNNMMNNNNNNNNNMNNNNNNNHMHMNNNNONMNNHHNMNNMNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHMNNOMONOONOHHNHNOONONNHOOMNNHHNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNONHHOCHNCHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNMNNNHNHHNNNNNNNHNNNNHNNHNNNNNNNHMNHMNNNOHNNNNNNNNNNNMNNNNNNNNNNNNNNNNNONNNOOHNNNNMNNONNNMMMHMNNNNNNNNONHMNNNNNOONNOOONNNNNNNNNNNNNNNNNNNNNNMNNMNOOOOOOHHNNNNHNNNNNNNNNNHNNHNNNNNNNHHHNNNNNNNOOHNNNNNHNNNNNNMNNOONNHNOOOOMONMOHNNNNNNOOONNOOMNNOMOOCNNNNONNMNNMOONMNNOOOOONONNNNNMNOOOONNCMNNMNONNNNHHNMNNNMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNHNNNNNOONNNNNNNNNNNNNNNHNMMHCNNOMNNOOOOONOOOOMNNONNNNNNNONNOOONMMNOONNMNNOMNNOONNNQQQQNOOONNHONNNOOONNHNNNMNNNNNOOOONNNNNNNNNMMNNOOOOHNNMNMNMNNNHHNHNNNNNNHNNHOMMNNNNONMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNOOOOMNNOOOOOONNNNOMNNNNNMMMNNNNNNNNOOOOCONCMNNOMONNNOOOCMNNNNNNNNNNNNMMNNNNMNNNNNNMNNOONNNNOOOOCMNNNNNOOOMNMNNNNNCMNNNNNNMNNNMNNNNHNHNNONNONNNNNNMNNNNHNNNNNOOOONONCHNHNHNHNHNNNMNMNNNONHNNNNNNNNNNNNNMMMMMMMMNHNNOHOOONNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNOONNNNNNNNNNNMMMMNNNNNONNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMCMNNNNNNNNNNNNNNMMNOOCNONNNNNOMONMNNNNNNNMNONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOHNNOOONNNNNNMMNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMMMMMMMMMMMMMMMMMMNNNNNNNOCMOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOKKHHHHHHHHMMMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHKKNNNNNNNNNNNNNNNNMFNNNNNNNNNNNNNNNFKKKFKKKNNNNNONNMOMNMNNNNMMOMNMNNMNMNNMMNNNNNNNNNNNNNNNNNMNMCNNNNONNKPPPPPGKNNNNNMNNNNNNNNNNNNNNNCNNNNNNNNFRKKNNNNNNNNNHNNONMNNONNMNNNNNPPFGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNNNNNNNNNPPFGPPPOPGPPRIKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPPIFPPIFPPPPIFPPPPIFPPPFFIPPFPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIKKKKRGFPIKPPPIPFPPPFPPPPPIFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRMNNMMNHNMCNNNNHMOMNNNMNNNMMNMNHHHOMMMNNMNNNNNMMMMMFFFKGPFPPPGHMHHCCGPPPPGFHHHHHHKKKMMMFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMMFNNNNNNNNNNNNNNNNNNOHHPPPPPPPPPPPPPPGPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNHHHGPPHHHHHHHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNHNNNNNNNNNPPPGHHKKMNNNNNNNNNNNNNNNNNNNKMMKHCCCMMHHHHHHHHKFFOOOOOOOOMMKFKMNNNNNNNNNNNNNNNNNHNNNNNNNHNHNNHNNNNNHNHNHNHNHNNNNNFOOOOOKKNNPKPKGRPFFIKNNNNNNNNCNNNNNCNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNNNMNNNMNNNNNNNCNNNNNNNNNMNNNNNNMMNNNNNMNNNNMNNNMNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNMNNNNMCNNNMNNNMNNNMNNNNNNMNNNNMNNNMNNNNNNNNNNNNNNNMNNMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNKKKRHMMNCMMNMMNMMNMMNKKMNMNPPGNNNNNNNNNNNNNNNNNNNNNNN","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add","add","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter","amortized_iter_with_name","amortized_iter_with_name","any","any_kleene","append","apply","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_amortized_generic","apply_amortized_same_type","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values_generic","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arg_unique","arithmetic","as_array","as_binary","as_binary","as_list","as_ref","as_ref_dtype","as_string","as_string","binary_zip_and_apply_amortized","bitand","bitand","bitand","bitor","bitor","bitor","bitxor","bitxor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","collect","collect_cheap_metadata","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","drop_nulls","dtype","effective_metadata","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","explode_and_offsets","explode_and_offsets","extend","fill_null_with_values","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","filter","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iterator_par","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_like","full_null_with_dtype","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples_perfect","gt","gt","gt","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","head","init","init","init_rand","inner_dtype","inner_dtype","into","into","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_no_null_iter","into_series","into_series","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","max","max","max_reduce","max_reduce","max_reduce","max_reduce","mean","mean","median","median","median","median_reduce","median_reduce","median_reduce","merge_metadata","metadata","metadata","metadata_arc","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","min_reduce","min_reduce","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_chunks","n_unique","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_compute_len","new_with_dims","none_to_nan","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","object","offsets","offsets","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","rem","rem","rem","rem","remainder","rename","reverse","reverse","reverse","reverse","reverse","reverse","reverse","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","scatter","scatter","scatter_single","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","scatter_with","set","set","set","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shrink_to_fit","slice","slice","sort","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","sort_with","split_at","split_at","std","std_reduce","std_reduce","std_reduce","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_amortized_generic","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unique","unique","unique","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_option","append_option","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_value","append_value","append_value","append_value","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","fixed_size_list","from","from","from","from","from","from","from","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","init","init","init","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","into","into","into","into","list","new","new","new","new","new","new","new","new","new","new","new","new_with_values_type","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","StructIter","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","init","init","init","init","into","into","into","into","into_iter","into_iter","into_iter","into_iter","new","new","next","next","next","next","next_back","next_back","next_back","par","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","list","string","Conflict","DEFAULT","DISTINCT_COUNT","ENABLED","EXTENSIVE_USE","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","Keep","LOG","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","New","SORTED","SORTED_ASC","SORTED_DSC","__clone_box","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","collect_cheap_metadata","complement","complement","contains","contains","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","disabled","distinct_count","distinct_count_opt","drop","drop","drop","drop","drop","empty","empty","enabled","eq","eq","extend","extend","extensive_use","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_max_value","get_min_value","get_sorted_flag","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_sorted","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","log","logfile","max_value","max_value_opt","merge","min_value","min_value_opt","not","not","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sorted","sorted_opt","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","vzip","vzip","vzip","vzip","vzip","with_cheap_metadata","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","__clone_box","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","descending","descending","drop","drop","drop","eq","eq","eq","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","fmt","fmt","from","from","from","from","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","hash","hash","init","init","init","into","into","into","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","maintain_order","max","mean","median","min","min_max","multithreaded","multithreaded","n_unique","new","new","new_from_index","not_equal","not_equal_missing","nulls_last","nulls_last","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique","var","vzip","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_nulls_last_multi","with_order_descending","with_order_descending","with_order_descending_multi","with_order_reversed","with_order_reversed","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","validate_time_zone","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_apply_fields","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","append","append","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any_value","as_borrowed","as_date_iter","as_datetime_iter","as_ref","as_ref","as_ref_dtype","as_slice","as_time_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","build_local","call_categorical_merge_operation","cast","cast","cast_leaf","cast_time_unit","cast_time_unit","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","chunks","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","days","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","drain_iter_and_finish","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","field_by_name","fields","fields_mut","find","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_owned","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","full_null","full_null","get","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_categories","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_optional","get_rev_map","get_shape","get_str","get_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","hour","hours","implode","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_empty","is_empty","is_enum","is_enum","is_float","is_float","is_global","is_integer","is_integer","is_known","is_list","is_local","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter","iter_str","last","leaf_dtype","len","len","len","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","name","name","name","name","nanosecond","nanoseconds","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_logical","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","null_count","parse_from_str_slice","parse_from_str_slice","partial_cmp","partial_cmp","physical","precision","rechunk","ref_field","register_value","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","rename","round","round","rows_encode","same_src","scale","second","seconds","set_name","set_time_unit","set_time_unit","set_time_unit_and_time_zone","set_time_zone","size_hint","sort","sort_with","strftime","strftime","strftime","strict_cast","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","time_unit","time_unit","time_zone","to_arrow","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","tot_eq","total_null_count","truncate","truncate","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unnest","update","uses_lexical_ordering","value","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_validity_typed","zero","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","constants","context","context_trace","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","feature_gated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_warning_function","init","init","init","into","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks","iter_chunks_physical","lazy","len","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","n_chunks","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice","slice_par","sort","sort_in_place","split_at","split_at","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Date","Datetime","Duration","Float32","Float32","Float64","Float64","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Null","Null","Row","String","String","Struct","Time","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","Abs","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","Any","Any","Any","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","Backward","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","Binary","Binary","Binary","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","BinaryExpr","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","Boolean","Boolean","Boolean","Boolean","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","Both","Bounds","BoundsIter","Brotli","BrotliLevel","C","Cache","Cast","CastTimeUnit","CatIter","Categorical","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","ColumnNotFound","Columns","Columns","Combine","CommentPrefix","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","Count","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","DataPoint","DataType","Date","Date","Date","Date","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","Datetime","Datetime","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeType","Day","Decimal","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","Duration","Duration","Duration","Duration","Duration","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","Earliest","EndsWith","Enum","Enum","Eq","EqValidity","Err","Exclude","Excluded","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","Field","FieldRef","FieldsMapper","FieldsNameMapper","FileMetaData","FileMetaDataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","Filter","Find","First","First","First","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float","Float16","Float32","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","Forward","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","HashMap","Head","HexEncode","Higher","Hour","IDX_DTYPE","INTEGER_RE","IO","IR","Idx","Idx","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","Implode","InProcessQuery","IndexColumn","IndexOfSchema","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8","Int8Chunked","Int8Type","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLastDistinct","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsoYear","Item","Join","Join","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","Last","Last","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","Left","Left","Left","Left","Left","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","Linear","List","List","List","List","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","Literal","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","Max","Max","Max","MaxBound","MaxHorizontal","Mean","Mean","Mean","MeanHorizontal","Median","Median","MeltArgs","Microsecond","Microsecond","Microseconds","Midpoint","Millennium","Millisecond","Millisecond","Milliseconds","Min","Min","Min","Min","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","Multiply","NULL","NUnique","NUnique","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","Nanosecond","Nanoseconds","Native","Nearest","Nearest","Nearest","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","None","None","None","None","None","Not","NotEq","NotEqValidity","Nth","Null","Null","Null","Null","Null","Null","Null","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","Operator","OptState","Or","Ordinal","OrdinalDay","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","PathIterator","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","Plus","PolarsArray","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","PrimitiveChunkedBuilder","Quantile","Quantile","QuantileAggSeries","QuantileInterpolOptions","Quarter","QuoteStyle","Raise","Raise","Random","Random","Range","Range","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Replace","ReplaceTimeZone","Reshape","RevMapping","Reverse","Reverse","Right","Right","Right","Right","Right","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Round","Round","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SQLInterface","SQLSyntax","Saturday","Scalar","Scalar","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaFieldNotFound","SchemaMismatch","SchemaRef","SearchSortedSide","Second","Second","Select","Selector","SerReader","SerWriter","SerializeOptions","Series","Series","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","Slice","Slice","Slice","Slice","SlicedArray","SlicedGroups","SmartString","Snappy","Some","Some","Sort","Sort","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","Std","Str","StrCat","String","String","String","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","Struct","Struct","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructNameSpace","StructOwned","SubPlan","Sum","Sum","SumHorizontal","Sunday","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","Time","Time","Time","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","UdfSchema","Uncompressed","Union","Union","UnionArgs","Unique","UniqueKeepStrategy","Unknown","Unknown","UnknownKind","UpperBound","Uppercase","UserDefinedFunction","Utf8","Utf8","Utf8View","ValueCounts","ValueIterT","ValueT","Var","Var","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","Window","WindowBound","WindowMapping","WindowType","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_finish_left_join","_full_join_from_series","_join_suffix_name","_left_join_from_series","_split_at_unchecked","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","abs","add","add","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","all","all_horizontal","allocator","allow_parallel","allow_parallel","allows_predicate_pushdown","allows_projection_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","append_null","append_opt_series","append_option","append_series","append_value","apply","apply","apply","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_min","arg_sort","arg_sort","arg_sort","arg_sort_by","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_where","args","args","arity","arr","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array","arrow_schema","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","as_ref","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","assume_init","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","batched","batched","batched","batched","batched_borrowed","binary","binary","binary_expr","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","boxed","builder","cache","cache","cache","cache","call","call","call_categorical_merge_operation","call_udf","call_udf","call_unchecked","cancel","cast","cast","cast","cast","cast","cast","cast_all","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cat","cat","cause","cbrt","ceil","ceil","center","century","check_bound","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","clip","clip_max","clip_max","clip_min","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_inner","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","closed_window","cloud","cloud_options","cloud_options","cloud_options","cluster_with_columns","cluster_with_columns","cmp","cmp","coalesce","coalesce","coalesce","coalesce","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","compare","compression","compression","compute_schema","concat","concat","concat_expr","concat_impl","concat_impl","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","contains","contains","contains","contains","contains_chunked","contains_chunked","contains_literal","convert_inner_type","convert_to_unsigned_index","count","count","count_matches","count_matches_many","count_rows","create_enum_data_type","create_left_df_chunked","create_writer","create_writer","created_by","cross_join","cross_join","cross_join_dfs","cum_count","cum_count","cum_fold_exprs","cum_max","cum_max","cum_min","cum_min","cum_prod","cum_prod","cum_reduce_exprs","cum_sum","cum_sum","cumulative_eval","data_pagesize_limit","data_type","data_type","data_type","datatypes","date_format","date_ranges","datetime","datetime","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","day","day","day","days","days","days","days_only","ddof","ddof","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_arrays","default_join_ids","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","descending","descending","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","df","diagonal","diff","diff","diff","display","distinct_count","distinct_count","div","div","divide","dot","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","drop_nulls","dst_offset","dt","dt","dtype","dtype","dtype","dtype_col","dtype_cols","dtype_overwrite","duration","eager","eager","empty","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_data_type","ensure_is_constant_duration","ensure_sorted_arg","eol_char","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","every","exact","exclude","exclude_dtype","execute","explain","explode","explode","explode","explode_and_offsets","expr","extend_constant","extension","extension","extract","extract","extract_all","extract_all_many","extract_groups","fast_explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","field","field","field_by_index","field_by_name","field_by_names","fields","fields","file_caching","file_caching","fill_nan","fill_nan","fill_null","fill_null","fill_null","fill_null_with_strategy","fill_null_with_values","filter","filter","filter","filter","filter","find","find_chunked","find_literal","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","finish_with_scan_ops","finishes_this_batch","first","first","first","first","fixed_size_list","flatten","float_precision","float_sorted_arg_max","float_type","floor","floor","floor_div","floor_div_series","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","fmt_str","fn_params","fn_params","fold_exprs","force_parallel","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","from_iter_trusted_length","from_iter_utf8_trusted_len","from_iter_values","from_par_iter","from_par_iter","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_type","from_vec","from_vec","from_zeroable_vec","full","full","full","full","full_join","full_join","full_null","full_null","fun","function_expr","function_with_options","gather","gather","gather_every","ge","get","get","get","get","get","get","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_at_index","get_at_index_mut","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","get_field","get_field","get_fields","get_fields_lens","get_full","get_metadata","get_metadata_max_value","get_metadata_min_value","get_mut","get_mut_unchecked","get_names","get_names","get_names","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_sequential_row_statistics","get_unchecked","get_unchecked","get_unchecked","glob","glob","glob","group_by","group_by_dynamic","group_by_dynamic","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","gt","gt","gt_eq","gt_eq","has_header","has_validity","has_validity","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_join_inner","hash_join_outer","head","head","head","hex_decode","hex_encode","hive_options","hor_str_concat","hour","hour","hour","hour","hours","hours","how","how","id_vars","idx","ignore_errors","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","include_bom","include_boundaries","include_header","include_header","increment_strong_count","increment_strong_count_in","index_cols","index_column","index_column","index_of","index_of","index_of","indexes_to_usizes","infer_file_schema","infer_schema_len","infer_schema_len","infer_schema_length","infer_schema_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_array","inner_join","inner_join","inner_mut","input_fields","insert_at_index","int_range","int_ranges","interpol","interpolate","interpolate","interpolate","interpolate_by","interpolate_by","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_data","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_list_name_space","into_list_name_space","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_series","into_series","into_thrift","into_vec","into_vec","into_vec","is_asof","is_between","is_between","is_cloud_url","is_compressed","is_constant_duration","is_empty","is_empty","is_empty","is_empty","is_finished","is_finite","is_first_distinct","is_first_distinct","is_first_distinct","is_full","is_full_days","is_in","is_in","is_infinite","is_last_distinct","is_last_distinct","is_last_distinct","is_leap_year","is_leap_year","is_leap_year","is_nan","is_not_nan","is_not_null","is_not_null","is_not_null","is_null","is_null","is_null","is_null","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","iso_year","iso_year","iter","iter","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","iter_paths","join","join","join","join","join_asof","join_asof_by","join_builder","join_literal","join_many","join_nulls","join_nulls","json_encode","keep","key_value_metadata","key_value_metadata","label","last","last","last","last","last","lazy","lazy","le","left_by","left_join","left_join","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","len","len","len","len","len","len","limit","limit","limit_reached","line_terminator","list","lit","lit","lit","lit","lit","logical_and","logical_or","logical_plan","logical_plan","low_memory","low_memory","low_memory","low_memory","low_memory","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","lt","lt","lt_eq","lt_eq","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","max","max","max","max","max","max_reduce","max_reduce","max_value","max_value","mean","mean","mean","mean","mean","mean","median","median","median","median","median","median","median","median_reduce","median_reduce","melt","memory_map","memory_map","memory_mapped","merge","merge_dtypes","merge_from_ref","metadata","metadata","method","microsecond","microseconds","microseconds","millennium","milliseconds","milliseconds","min","min","min","min","min","min","min_max","min_periods","min_periods","min_periods","min_reduce","min_reduce","min_value","min_value","minute","minute","minute","minute","minutes","minutes","missing_is_null","mode","mode","month","month","month","month","months","months_only","mul","mul","mul","multiply","multithreaded","multithreaded","n_chunks","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_threads","n_threads","n_unique","n_unique","n_unique","n_unique","n_unique","name","name","name","name","name","name","nan_max","nan_min","nan_propagating_aggregate","nanosecond","nanosecond","nanosecond","nanoseconds","nanoseconds","nanoseconds","ne","needs_checks","neg","neg","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_cyclic","new_empty","new_from_index","new_from_index","new_from_str","new_in","new_inserting_at_index","new_int_range","new_multi","new_null","new_paths","new_paths","new_single","new_streaming","new_streaming","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next","next_batches","next_batches","next_batches","nodes","nodes_owned","not","not","not_equal","not_equal_missing","nth","null","null","null","null","null_count","null_count","null_count","null_count","null_count","null_values","nulls_last","nulls_last","num_rows","num_rows","offset","offset","offset","offsets","on","optimize","options","or","ordinal","ordinal","ordinal_day","ordinal_year","otherwise","otherwise","output_schema","over","over_with_options","parallel","parallel","parallel","parse","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","parse_options","parsed_int","partial_cmp","partial_cmp","path","path","path","path","paths","paths","paths","period","period","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","predicate_pushdown","predicate_pushdown","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","projection_pushdown","projection_pushdown","provide","ptr_eq","quantile","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quarter","quarter","quarter","queue","quote_char","quote_char","quote_style","raise_if_empty","rank","rank","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","rem","remainder","remove","rename","rename","rename","rename_fields","repeat","repeat_by","repeat_by","replace","replace","replace","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_time_zone","reserve","reshape","resolve_homedir","return_type","reverse","reverse","reverse","reverse","reverse","reverse","right_by","right_on","rolling","rolling","rolling","rolling_map","rolling_map","rolling_map","rolling_map_float","rolling_max","rolling_max","rolling_max_by","rolling_max_by","rolling_mean","rolling_mean","rolling_mean_by","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min","rolling_min_by","rolling_min_by","rolling_quantile","rolling_quantile","rolling_quantile_by","rolling_quantile_by","rolling_std","rolling_std","rolling_std_by","rolling_std_by","rolling_sum","rolling_sum","rolling_sum_by","rolling_sum_by","rolling_var","rolling_var","rolling_var_by","rolling_var_by","round","round","round","round_ms","round_ns","round_sig_figs","round_sig_figs","round_us","row_estimate","row_estimate","row_group_size","row_groups","row_index","row_index","row_index","row_index","row_index","row_index","row_index","rows_left","rows_right","same_type","same_type","sample_frac","sample_n","sample_size","scan","scan","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","scatter","scatter_single","scatter_with","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema_descr","schema_inference","schema_overwrite","schema_with_arenas","search_sorted","second","second","second","second","seconds","seconds","seek","select","select_seq","separator","separator","serialize_options","series","set","set_cached_arena","set_dtype","set_dtype_at_index","set_low_memory","set_parallel","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_sorted_flag","set_validity","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_remove","shift_remove_index","should_coalesce","shrink_dtype","shrink_to_fit","shrink_to_fit","shuffle","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_json","sink_parquet","skip_rows","skip_rows","skip_rows","skip_rows_after_header","slice","slice","slice","slice","slice","slice","slice","slice","slice_pushdown","slice_pushdown","slice_typed","slice_typed","slice_typed_unchecked","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","sort","sort","sort","sort","sort","sort","sort_by","sort_by_exprs","sort_with","sort_with","source","split","split_at","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","std","std","std","std","std","std_reduce","std_reduce","store","str","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","streamable","streaming","streaming","strftime","strict","strict_cast","strings","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","strong_count","struct_","sub","sub","subtract","suffix","suffix","suffix","suffix","suffix_fields","sum","sum","sum","sum","sum","sum","sum_reduce","sum_reduce","super_type","sync_update","tail","tail","tail","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked","take_validity","ternary_expr","then","then","time_format","time_ranges","time_unit","time_unit","time_zone","timestamp","to_alp","to_alp","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","to_dummies","to_field","to_integer","to_list","to_lowercase","to_lowercase","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_supertype","to_supertypes","to_titlecase","to_uppercase","to_uppercase","tolerance","tolerance_str","top_k","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ge_kernel_broadcast","tot_gt_kernel_broadcast","tot_le_kernel","tot_le_kernel_broadcast","tot_lt_kernel","tot_lt_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","truncate_ms","truncate_ns","truncate_ns","truncate_ragged_lines","truncate_us","truncate_us","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_thrift","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","try_new","try_new","try_new","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_serialize","try_unwrap","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","udf","unique","unique","unique","unique","unique","unique","unique_stable","unique_stable","unique_stable","unique_stable","unnest","unwrap","unwrap_or_clone","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","use_statistics","use_statistics","utf8","validate","validation","validity","validity","value","value_counts","value_counts","value_name","value_unchecked","value_vars","values","values_iter","values_iter","var","var","var","var","var","var","var_reduce","var_reduce","variable_name","vec_hash","vec_hash_combine","version","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","week","week","week","weekday","weekday","weekday","weekday","weeks","weeks","weeks_only","weights","when","when","when","window_size","window_size","window_size","with","with_ambiguous","with_batch_size","with_batch_size","with_batch_size","with_cache","with_capacity","with_capacity","with_capacity","with_chunk_size","with_chunk_size","with_cloud_options","with_cluster_with_columns","with_coalesce","with_column","with_column","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns_seq","with_comment_prefix","with_comment_prefix","with_compression","with_compression","with_compression","with_compression","with_compression","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","with_decimal_comma","with_dtype","with_dtype_overwrite","with_dtype_overwrite","with_encoding","with_encoding","with_eol_char","with_eol_char","with_extension","with_extension","with_fields","with_float_precision","with_fractional_seconds","with_glob","with_has_header","with_has_header","with_hive_partition_columns","with_hms","with_hms","with_hour","with_hours","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_infer_schema_length","with_json_format","with_json_format","with_line_terminator","with_low_memory","with_low_memory","with_metadata","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","with_missing_is_null","with_month","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_threads","with_n_threads","with_nanoseconds","with_new_streaming","with_null_value","with_null_values","with_null_values","with_optimizations","with_parse_options","with_path","with_path","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_pl_flavor","with_pl_flavor","with_predicate","with_predicate_pushdown","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection_pushdown","with_quote_char","with_quote_char","with_quote_char","with_quote_style","with_raise_if_empty","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_group_size","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_same_dtype","with_sample_size","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_schema_overwrite","with_schema_overwrite","with_second","with_seconds","with_separator","with_separator","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows","with_skip_rows_after_header","with_skip_rows_after_header","with_slice_pushdown","with_statistics","with_streaming","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","with_truncate_ragged_lines","with_try_parse_dates","with_try_parse_dates","with_type_coercion","with_validity","with_validity","with_validity_typed","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_varint","write_vectored","xor","year","year","year","year","zip","zip_with","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","filter","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","right_on","scan_type","schema","slice","sort_options","version","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","options","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","limit","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","include_nulls","groups","rolling","data_type","high","low","error","error","msg","msg","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","day","days","fn_params","hour","hour","hours","is_leap_year","is_leap_year","iso_year","iso_year","microseconds","milliseconds","min_periods","minute","minute","minutes","month","month","nanosecond","nanosecond","nanoseconds","ordinal","ordinal","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","quarter","quarter","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","second","seconds","string","week","week","weekday","weekday","window_size","year","year","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","parse_bytes","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_from_with_unit","try_from_with_unit","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","from_str","from_untyped_config","hash","init","init","into","into","max_retries","options","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","max_retries","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_data_type","dtype","dtype","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","get_unchecked","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","new","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","ExtendConstant","Extract","ExtractAll","ExtractGroups","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","Quarter","Random","Range","Rank","RepeatBy","Replace","Replace","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","ignore_nulls","decimals","digits","has_max","has_min","limit","limit","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","slice_typed","slice_typed_unchecked","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","Ascending","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","amortized_iter","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","as_ref","as_series","as_series","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","cast_with_options","categorical","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","date","datetime","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop_nulls","dtype","duration","eq","eq","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata_max_value","get_metadata_min_value","get_object","get_object_chunked_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_sorted_flag","iter","iter_chunks","len","len","limit","list","lit","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape_array","reshape_list","reverse","reverse","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","slice","sort","sort_with","split_at","split_at","std","std_reduce","str","str_value","strict_cast","struct_","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","time","to_arrow","to_dummies","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_add_owned","try_div","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_mul","try_mul_owned","try_rem","try_set_metadata","try_sub","try_sub_owned","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique_stable","unpack","var","var_reduce","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","add_to","checked","div","divide","divide","mul","multiply","multiply","rem","remainder","remainder","sub","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"polars"],[17,"polars::chunked_array"],[824,"polars::chunked_array::arithmetic"],[852,"polars::chunked_array::builder"],[1109,"polars::chunked_array::builder::list"],[1126,"polars::chunked_array::cast"],[1154,"polars::chunked_array::collect"],[1168,"polars::chunked_array::float"],[1170,"polars::chunked_array::from_iterator_par"],[1174,"polars::chunked_array::iterator"],[1244,"polars::chunked_array::iterator::par"],[1246,"polars::chunked_array::metadata"],[1477,"polars::chunked_array::object"],[1552,"polars::chunked_array::object::builder"],[1575,"polars::chunked_array::object::registry"],[1603,"polars::chunked_array::ops"],[1805,"polars::chunked_array::ops::arity"],[1840,"polars::chunked_array::ops::float_sorted_arg_max"],[1842,"polars::chunked_array::ops::gather"],[1845,"polars::chunked_array::ops::search_sorted"],[1874,"polars::chunked_array::ops::sort"],[1881,"polars::chunked_array::ops::sort::arg_bottom_k"],[1882,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1889,"polars::chunked_array::ops::sort::options"],[1902,"polars::chunked_array::temporal"],[1910,"polars::chunked_array::temporal::conversion"],[1913,"polars::datatypes"],[3292,"polars::datatypes::categorical"],[3309,"polars::datatypes::categorical::revmap"],[3315,"polars::datatypes::categorical::string_cache"],[3334,"polars::docs"],[3336,"polars::error"],[3424,"polars::error::PolarsError"],[3428,"polars::error::constants"],[3431,"polars::frame"],[3691,"polars::frame::explode"],[3720,"polars::frame::group_by"],[3955,"polars::frame::group_by::GroupByMethod"],[3956,"polars::frame::group_by::GroupsProxy"],[3958,"polars::frame::group_by::aggregations"],[3971,"polars::frame::group_by::expr"],[3974,"polars::frame::row"],[4081,"polars::functions"],[4083,"polars::prelude"],[9121,"polars::prelude::AggExpr"],[9128,"polars::prelude::BooleanFunction"],[9131,"polars::prelude::DslPlan"],[9184,"polars::prelude::Expr"],[9219,"polars::prelude::FunctionExpr"],[9241,"polars::prelude::GroupByMethod"],[9242,"polars::prelude::GroupsProxy"],[9244,"polars::prelude::LiteralValue"],[9247,"polars::prelude::PolarsError"],[9251,"polars::prelude::StringFunction"],[9265,"polars::prelude::TemporalFunction"],[9267,"polars::prelude::aggregations"],[9280,"polars::prelude::arity"],[9315,"polars::prelude::array"],[9334,"polars::prelude::binary"],[9350,"polars::prelude::cat"],[9351,"polars::prelude::chunkedarray"],[9418,"polars::prelude::chunkedarray::string"],[9456,"polars::prelude::chunkedarray::string::infer"],[9486,"polars::prelude::cloud"],[9533,"polars::prelude::cloud::options"],[9541,"polars::prelude::datatypes"],[9809,"polars::prelude::datatypes::categorical"],[9826,"polars::prelude::datatypes::categorical::revmap"],[9832,"polars::prelude::datatypes::categorical::string_cache"],[9836,"polars::prelude::datetime"],[9839,"polars::prelude::default_arrays"],[9845,"polars::prelude::dt"],[9897,"polars::prelude::expr"],[9900,"polars::prelude::fixed_size_list"],[9920,"polars::prelude::float_sorted_arg_max"],[9922,"polars::prelude::function_expr"],[10085,"polars::prelude::function_expr::BooleanFunction"],[10088,"polars::prelude::function_expr::FunctionExpr"],[10110,"polars::prelude::function_expr::StringFunction"],[10124,"polars::prelude::function_expr::TemporalFunction"],[10126,"polars::prelude::function_expr::cat"],[10128,"polars::prelude::function_expr::pow"],[10132,"polars::prelude::function_expr::rolling"],[10161,"polars::prelude::function_expr::rolling_by"],[10190,"polars::prelude::gather"],[10193,"polars::prelude::interpolate"],[10197,"polars::prelude::interpolate_by"],[10198,"polars::prelude::mode"],[10199,"polars::prelude::nan_propagating_aggregate"],[10203,"polars::prelude::null"],[10233,"polars::prelude::schema_inference"],[10257,"polars::prelude::search_sorted"],[10263,"polars::prelude::series"],[10285,"polars::prelude::slice"],[10288,"polars::prelude::sort"],[10295,"polars::prelude::sort::arg_bottom_k"],[10296,"polars::prelude::sort::arg_sort_multiple"],[10303,"polars::prelude::sort::options"],[10316,"polars::prelude::strings"],[10370,"polars::prelude::udf"],[10376,"polars::prelude::utf8"],[10380,"polars::series"],[10799,"polars::series::amortized_iter"],[10822,"polars::series::arithmetic"],[10843,"polars::series::arithmetic::checked"],[10849,"polars::series::ops"],[10875,"dyn_clone::sealed"],[10876,"polars_core::datatypes"],[10877,"polars_core::chunked_array"],[10878,"num_traits"],[10879,"num_traits::cast"],[10880,"polars_core::series"],[10881,"polars_error"],[10882,"core::result"],[10883,"polars_core::series::arithmetic::borrowed"],[10884,"polars_core::frame::group_by::proxy"],[10885,"polars_core::chunked_array::object"],[10886,"core::option"],[10887,"polars_arrow::array"],[10888,"alloc::boxed"],[10889,"core::iter::traits::iterator"],[10890,"polars_core::chunked_array::list::iterator"],[10891,"core::ops::function"],[10892,"core::marker"],[10893,"alloc::borrow"],[10894,"polars_core::series::amortized_iter"],[10895,"polars_core::datatypes::dtype"],[10896,"alloc::string"],[10897,"polars_core::chunked_array::ops::sort::options"],[10898,"polars_core::chunked_array::cast"],[10899,"polars_core::series::arithmetic::borrowed::checked"],[10900,"core::slice::iter"],[10901,"core::iter::adapters::map"],[10902,"alloc::vec"],[10903,"polars_core::chunked_array::metadata"],[10904,"core::iter::traits::double_ended"],[10905,"polars_arrow::offset"],[10906,"core::fmt"],[10907,"core::iter::traits::collect"],[10908,"polars_utils::iter::fallible"],[10909,"core::convert"],[10910,"polars_arrow::bitmap::immutable"],[10911,"polars_core::chunked_array::from_iterator"],[10912,"core::borrow"],[10913,"rayon::iter"],[10914,"polars_arrow::pushable"],[10915,"polars_arrow::trusted_len"],[10916,"polars_core::datatypes::any_value"],[10917,"polars_core::chunked_array::logical"],[10918,"polars_core::datatypes::time_unit"],[10919,"core::iter::traits::exact_size"],[10920,"polars_core::series::series_trait"],[10921,"polars_core::chunked_array::iterator"],[10922,"alloc::sync"],[10923,"core::ops::range"],[10924,"polars_core::datatypes::field"],[10925,"polars_arrow::legacy::kernels::rolling::no_nulls"],[10926,"polars_core::chunked_array::ops::rolling_window"],[10927,"polars_ops::chunked_array::scatter"],[10928,"polars_utils::index"],[10929,"ahash::random_state"],[10930,"polars_utils::hashing"],[10931,"ndarray::data_repr"],[10932,"ndarray::dimension::dim"],[10933,"ndarray"],[10934,"either"],[10935,"core::any"],[10936,"polars_core::chunked_array::arithmetic::numeric"],[10937,"polars_core::chunked_array::builder::list::anonymous"],[10938,"polars_core::chunked_array::builder::list::boolean"],[10939,"polars_core::chunked_array::builder::list::primitive"],[10940,"polars_core::chunked_array::builder::list"],[10941,"polars_core::chunked_array::builder"],[10942,"polars_core::chunked_array::builder::list::binary"],[10943,"polars_core::chunked_array::builder::list::null"],[10944,"polars_core::chunked_array::builder::string"],[10945,"polars_arrow::array::binview"],[10946,"polars_core::chunked_array::builder::boolean"],[10947,"polars_core::chunked_array::builder::null"],[10948,"polars_core::chunked_array::builder::primitive"],[10949,"core::clone"],[10950,"polars_core::series::implementations::null"],[10951,"core::hash"],[10952,"polars_core::chunked_array::collect"],[10953,"polars_core::chunked_array::float"],[10954,"polars_core::chunked_array::from_iterator_par"],[10955,"polars_arrow::array::boolean"],[10956,"polars_arrow::array::fixed_size_list"],[10957,"polars_core::chunked_array::metadata::env"],[10958,"bitflags::iter"],[10959,"std::fs"],[10960,"std::sync::mutex"],[10961,"polars_arrow::datatypes"],[10962,"polars_arrow::bitmap::utils::iterator"],[10963,"polars_arrow::bitmap::utils::zip_validity"],[10964,"polars_core::chunked_array::object::builder"],[10965,"polars_core::chunked_array::object::registry"],[10966,"polars_core::chunked_array::ops"],[10967,"polars_arrow::legacy::array::slice"],[10968,"polars_core::chunked_array::ops::arity"],[10969,"polars_arrow::array::static_array"],[10970,"core::error"],[10971,"polars_arrow::array::primitive"],[10972,"polars_core::chunked_array::ops::search_sorted"],[10973,"polars_core::utils"],[10974,"polars_row::row"],[10975,"chrono::naive::datetime"],[10976,"chrono_tz::timezones"],[10977,"chrono::naive::time"],[10978,"polars_core::chunked_array::logical::struct_"],[10979,"polars_core::chunked_array::logical::categorical"],[10980,"polars_core::chunked_array::logical::categorical::builder"],[10981,"polars_arrow::array::static_array_collect"],[10982,"bytemuck::zeroable"],[10983,"polars_core::chunked_array::logical::categorical::revmap"],[10984,"polars_core::chunked_array::logical::categorical::merge"],[10985,"polars_arrow::types"],[10986,"polars_arrow::datatypes::physical_type"],[10987,"chrono::time_delta"],[10988,"chrono::naive::date"],[10989,"smartstring::config"],[10990,"smartstring"],[10991,"core::cmp"],[10992,"polars_core::frame"],[10993,"polars_core::chunked_array::logical::categorical::string_cache"],[10994,"polars_error::warning"],[10995,"simdutf8::basic"],[10996,"planus::errors"],[10997,"alloc::collections"],[10998,"std::io::error"],[10999,"regex::error"],[11000,"polars_parquet::parquet::error"],[11001,"polars_core::schema"],[11002,"polars_core::series::from"],[11003,"hashbrown::set"],[11004,"polars_arrow::datatypes::schema"],[11005,"polars_core::frame::row"],[11006,"polars_core::frame::group_by"],[11007,"polars_time::group_by::dynamic"],[11008,"polars_lazy::frame"],[11009,"polars_core::frame::explode"],[11010,"polars_core::chunked_array::ndarray"],[11011,"polars_arrow::array::struct_"],[11012,"polars_arrow::record_batch"],[11013,"polars_time::windows::duration"],[11014,"polars_utils::idx_vec"],[11015,"rayon::iter::plumbing"],[11016,"polars_plan::logical_plan::aexpr"],[11017,"polars_core::frame::group_by::into_groups"],[11018,"core::iter::adapters::copied"],[11019,"core::iter::adapters::zip"],[11020,"polars_utils::float"],[11021,"polars_arrow::types::native"],[11022,"polars_core::frame::group_by::aggregations::agg_list"],[11023,"polars_core::frame::group_by::aggregations"],[11024,"polars_core::frame::group_by::expr"],[11025,"polars_core::frame::row::av_buffer"],[11026,"polars_utils::arena"],[11027,"polars_plan::logical_plan::ir"],[11028,"polars_ops::frame::join::hash_join"],[11029,"polars_ops::frame::join::args"],[11030,"polars_ops::chunked_array::gather::chunked"],[11031,"polars_ops::frame"],[11032,"polars_io::csv::read::reader"],[11033,"polars_io::predicates"],[11034,"polars_io::mmap"],[11035,"polars_plan::dsl::expr"],[11036,"core::alloc"],[11037,"polars_plan::logical_plan::anonymous_scan"],[11038,"polars_lazy::scan::ndjson"],[11039,"polars_lazy::scan::anonymous_scan"],[11040,"polars_plan::dsl::expr_dyn_fn"],[11041,"polars_plan::logical_plan::visitor"],[11042,"polars_plan::dsl::function_expr"],[11043,"polars_ops::series::ops::arg_min_max"],[11044,"polars_plan::dsl::array"],[11045,"polars_plan::dsl::list"],[11046,"polars_plan::dsl::function_expr::schema"],[11047,"polars_io::ipc::ipc_stream"],[11048,"std::io"],[11049,"polars_ops::chunked_array::binary"],[11050,"polars_time::chunkedarray::string"],[11051,"std::os::fd::owned"],[11052,"polars_ops::chunked_array::list"],[11053,"std::os::fd::raw"],[11054,"polars_ops::series::ops"],[11055,"polars_ops::chunked_array::strings"],[11056,"core::mem::maybe_uninit"],[11057,"polars_ops::chunked_array::strings::namespace"],[11058,"polars_io::csv::read::read_impl::batched"],[11059,"polars_io::csv::write::writer"],[11060,"polars_io::ipc::write"],[11061,"polars_io::parquet::read::reader"],[11062,"polars_io::parquet::read::read_impl"],[11063,"polars_io::parquet::write::writer"],[11064,"polars_io::parquet::write::batched_writer"],[11065,"polars_plan::dsl::binary"],[11066,"polars_plan::dsl::udf"],[11067,"polars_lazy::frame::exitable"],[11068,"hashbrown::map"],[11069,"polars_plan::dsl::cat"],[11070,"polars_ops::series::ops::round"],[11071,"polars_time::series"],[11072,"polars_time::chunkedarray::rolling_window"],[11073,"polars_time::windows::bounds"],[11074,"polars_time::windows::group_by"],[11075,"polars_lazy::scan::csv"],[11076,"polars_lazy::scan::ipc"],[11077,"polars_time::windows::window"],[11078,"polars_lazy::scan::parquet"],[11079,"polars_io::csv::read::options"],[11080,"polars_io::csv::write::options"],[11081,"polars_io::ipc::ipc_file"],[11082,"polars_io::json"],[11083,"polars_io::parquet::read::options"],[11084,"polars_ops::frame::join::asof"],[11085,"polars_io::parquet::write::options"],[11086,"polars_ops::series::ops::interpolation::interpolate"],[11087,"polars_ops::series::ops::is_between"],[11088,"polars_ops::series::ops::rank"],[11089,"polars_plan::logical_plan"],[11090,"polars_plan::dsl::arity"],[11091,"polars_plan::dsl::function_expr::boolean"],[11092,"polars_plan::dsl::function_expr::cat"],[11093,"polars_plan::dsl::function_expr::datetime"],[11094,"polars_plan::dsl::function_expr::pow"],[11095,"polars_plan::dsl::function_expr::strings"],[11096,"polars_plan::dsl::functions::temporal"],[11097,"polars_plan::dsl::options"],[11098,"polars_plan::frame::opt_state"],[11099,"polars_plan::logical_plan::lit"],[11100,"polars_plan::logical_plan::options"],[11101,"polars_parquet::arrow::write"],[11102,"polars_parquet::parquet::metadata::file_metadata"],[11103,"polars_arrow::legacy::kernels::rolling"],[11104,"polars_arrow::legacy::kernels::time"],[11105,"polars_lazy::scan::file_list_reader"],[11106,"polars_io::cloud::options"],[11107,"polars_parquet::parquet::metadata::column_order"],[11108,"polars_ops::chunked_array::binary::namespace"],[11109,"std::path"],[11110,"polars_io::shared"],[11111,"polars_ops::frame::join::cross_join"],[11112,"polars_lazy::dsl::eval"],[11113,"polars_time::chunkedarray::date"],[11114,"polars_time::chunkedarray::datetime"],[11115,"polars_time::chunkedarray::duration"],[11116,"core::default"],[11117,"core::ffi::c_str"],[11118,"polars_parquet::parquet::metadata::row_metadata"],[11119,"polars_core::series::ops"],[11120,"polars_plan::dsl::dt"],[11121,"polars_ops::series::ops::various"],[11122,"polars_arrow::scalar"],[11123,"polars_lazy::dsl::list"],[11124,"crossterm::command"],[11125,"polars_plan::dsl::struct_"],[11126,"polars_io::ndjson::core"],[11127,"polars_plan::logical_plan::apply"],[11128,"polars_plan::dsl::function_expr::range"],[11129,"polars_plan::dsl::function_expr::binary"],[11130,"polars_plan::dsl::function_expr::array"],[11131,"polars_plan::dsl::function_expr::list"],[11132,"polars_plan::dsl::function_expr::struct_"],[11133,"polars_parquet::arrow::read::statistics"],[11134,"std::ffi::os_str"],[11135,"alloc::ffi::c_str"],[11136,"polars_arrow::array::struct_::mutable"],[11137,"polars_arrow::array::growable::structure"],[11138,"polars_arrow::legacy::array::default_arrays"],[11139,"polars_arrow::buffer::immutable"],[11140,"polars_arrow::array::list"],[11141,"polars_core::named_from"],[11142,"polars_ops::frame::join"],[11143,"polars_arrow::legacy::array"],[11144,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[11145,"polars_time::chunkedarray::time"],[11146,"core::num::nonzero"],[11147,"parquet_format_safe::parquet_format"],[11148,"polars_arrow::array::struct_::iterator"],[11149,"polars_ops::frame::join::asof::groups"],[11150,"polars_ops::chunked_array::list::namespace"],[11151,"polars_plan::dsl::name"],[11152,"polars_io::options"],[11153,"polars_core::chunked_array::ops::aggregate"],[11154,"polars_core::chunked_array::ops::aggregate::quantile"],[11155,"polars_arrow::legacy::index"],[11156,"polars_ops::chunked_array::strings::split"],[11157,"core::pin"],[11158,"core::io::borrowed_buf"],[11159,"parquet_format_safe::thrift::varint::decode"],[11160,"polars_time::chunkedarray::rolling_window::dispatch"],[11161,"polars_time::round"],[11162,"polars_parquet::parquet::metadata::schema_descriptor"],[11163,"polars_core::chunked_array::ops::aggregate::var"],[11164,"polars_plan::dsl::string"],[11165,"polars_ops::series::ops::to_dummies"],[11166,"polars_time::truncate"],[11167,"std::sync::rwlock"],[11168,"polars_io::csv::read::schema_inference"],[11169,"polars_time::upsample"],[11170,"polars_core::hashing::vector_hasher"],[11171,"alloc::collections::btree::map"],[11172,"polars_ops::chunked_array::array::namespace"],[11173,"polars_ops::chunked_array::array"],[11174,"polars_time::chunkedarray::string::patterns"],[11175,"polars_time::chunkedarray::string::infer"],[11176,"polars_arrow::legacy::array::fixed_size_list"],[11177,"polars_plan::dsl::function_expr::rolling"],[11178,"polars_plan::dsl::function_expr::rolling_by"],[11179,"polars_arrow::legacy::array::null"],[11180,"polars_arrow::bitmap::mutable"],[11181,"polars_arrow::array::utf8"],[11182,"polars_arrow::array::binary"],[11183,"polars_core::series::iterator"],[11184,"alloc::rc"],[11185,"polars_core"],[11186,"polars_core::chunked_array::iterator::par"],[11187,"polars_core::chunked_array::ops::float_sorted_arg_max"],[11188,"polars_core::chunked_array::ops::gather"],[11189,"polars_core::chunked_array::ops::sort"],[11190,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[11191,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[11192,"polars_core::chunked_array::temporal"],[11193,"polars_core::chunked_array::temporal::conversion"],[11194,"polars_core::chunked_array::temporal::time"],[11195,"polars_core::chunked_array::logical::date"],[11196,"polars_core::chunked_array::logical::datetime"],[11197,"polars_core::chunked_array::logical::decimal"],[11198,"polars_core::chunked_array::logical::duration"],[11199,"polars_core::datatypes::aliases"],[11200,"polars_utils::aliases"],[11201,"polars_core::chunked_array::logical::time"],[11202,"polars_error::constants"],[11203,"polars_core::functions"],[11204,"polars_io::utils"],[11205,"polars_io::parquet::metadata"],[11206,"polars_arrow::legacy::prelude"],[11207,"polars_ops::series::ops::rolling"],[11208,"polars_parquet::parquet::write"],[11209,"polars_ops::frame::join::general"],[11210,"polars_ops::series::ops::abs"],[11211,"polars_plan::dsl::functions::selectors"],[11212,"polars_plan::dsl::functions::horizontal"],[11213,"polars_plan::dsl::functions::arity"],[11214,"polars_plan::dsl"],[11215,"polars_plan::dsl::functions::range"],[11216,"polars_plan::dsl::functions::index"],[11217,"polars_ops::chunked_array"],[11218,"polars_plan::dsl::functions::coerce"],[11219,"polars_plan::dsl::functions::syntactic_sugar"],[11220,"polars_time::base_utc_offset"],[11221,"polars_time"],[11222,"polars_ops::series::ops::clip"],[11223,"polars_io"],[11224,"polars_ops::series::ops::horizontal"],[11225,"polars_lazy::dsl::functions"],[11226,"polars_plan::dsl::functions::concat"],[11227,"polars_ops::series::ops::index"],[11228,"polars_io::csv::read::parser"],[11229,"polars_ops::series::ops::cum_agg"],[11230,"polars_ops::series::ops::diff"],[11231,"polars_time::dst_offset"],[11232,"polars_ops::series::ops::floor_divide"],[11233,"polars_ops::chunked_array::strings::concat"],[11234,"polars_ops::chunked_array::datetime::replace_time_zone"],[11235,"polars_time::date_range"],[11236,"polars_ops::series::ops::interpolation"],[11237,"polars_ops::series::ops::interpolation::interpolate_by"],[11238,"polars_io::csv::read::utils"],[11239,"polars_ops::series::ops::is_first_distinct"],[11240,"polars_ops::series::ops::is_in"],[11241,"polars_ops::series::ops::is_last_distinct"],[11242,"polars_io::parquet::read::utils"],[11243,"polars_ops::series::ops::negate"],[11244,"polars_ops::series::ops::not"],[11245,"polars_ops::series::ops::int_range"],[11246,"polars_plan::dsl::functions::repeat"],[11247,"polars_ops::chunked_array::repeat_by"],[11248,"polars_ops::series::ops::replace"],[11249,"polars_io::csv::read"],[11250,"polars_ops::chunked_array::strings::strip"],[11251,"polars_time::chunkedarray"],[11252,"polars_io::cloud"],[11253,"polars_ops::chunked_array::mode"],[11254,"polars_ops::chunked_array::nan_propagating_aggregate"],[11255,"polars_arrow::legacy::array::utf8"]],"if":"``````{{}b}`````````{{}d}```````{{{f{c}}h}b{}}{{{f{{l{j}}}}}d}{{{l{n}}{l{n}}}}{{{f{{l{A`}}}}{f{Ab}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ad}{{{f{{l{c}}}}e}{}Ad{AfAh}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}}{{{l{c}}e}{}Ad{AfAh}}{{{l{c}}{l{c}}}{}Ad}{{{f{{l{n}}}}{f{{An{Al}}}}}}{{{l{Aj}}{l{Aj}}}}{{{l{A`}}{l{A`}}}}{{{f{{l{n}}}}{f{{l{n}}}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{{Bh{c}}}}}}{f{Bj}}}B`Bl}{{{f{{l{A`}}}}{f{Bj}}}B`}{{{f{{l{Bn}}}}{f{Bj}}}B`}{{{f{{l{n}}}}{f{Bj}}}B`}{{{f{{l{Aj}}}}{f{Bj}}}B`}{{{f{{l{j}}}}{f{Bj}}}B`}{{{f{{l{c}}}}{f{Bj}}}B`Ad}{{{f{{l{Aj}}}}}d}{{{f{{l{Aj}}}}}{{C`{d}}}}{{{f{{l{j}}}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{Bn}}}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{Bn}}}}{f{Ab}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{j}}}}{f{Ab}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}54{{{f{Cl{l{c}}}}{f{{l{c}}}}}b{{Db{}{{Cn{D`}}}}}}{{{f{{l{{Bh{c}}}}}}e}{{l{{Bh{c}}}}}Bl{{Df{{C`{{f{c}}}}}{{Dd{{C`{c}}}}}}Dh}}{{{f{{l{j}}}}c}{{l{j}}}{{Df{{C`{B`}}}{{Dd{{C`{B`}}}}}}Dh}}{{{f{{l{c}}}}e}{{l{c}}}Ad{{Df{C`}{{Dd{C`}}}}Dh}}{{{f{{l{n}}}}c}{{l{n}}}{{Df{{C`{{f{{An{Al}}}}}}}{{Dd{{C`{{Dj{{An{Al}}}}}}}}}}Dh}}{{{f{{l{A`}}}}c}{{l{A`}}}{{Df{{C`{{f{Ab}}}}}{{Dd{{C`{{Dj{Ab}}}}}}}}Dh}}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{Df{{C`{d}}}{{Dd{{C`{d}}}}}}Dh}}{{{f{{l{j}}}}c}{{l{j}}}{{Dn{Dl}{{Dd{B`}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Dn{{C`{Dl}}}{{Dd{{C`{c}}}}}}Dh}Db}{{{f{{l{Bn}}}}e}{{l{g}}}{}{{Dn{{C`{Dl}}}{{Dd{{C`{c}}}}}}Dh}Db}{{{f{{l{Bn}}}}c}{{l{Bn}}}{{Dn{Dl}{{Dd{B`}}}}}}{{{f{{l{E`}}}}c}B`{{Df{{f{B`}}}{{Dd{B`}}}}}}{{{f{{l{Eb}}}}c}B`{{Df{{f{B`}}}{{Dd{B`}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{}{{Dn{C`}{{Dd{{C`{e}}}}}}}Db}{{{l{c}}e}{{l{c}}}Ad{{Df{}{{Dd{}}}}Dh}}{{{f{{l{A`}}}}{f{Df}}}{{l{A`}}}}{{{f{{l{n}}}}{f{Df}}}{{l{n}}}}{{{f{{l{Aj}}}}{f{Df}}}{{l{Aj}}}}{{{f{{l{c}}}}{f{Df}}}{{l{c}}}Ad}{{{f{{l{n}}}}{f{Df}}}{{l{c}}}Db}{{{f{{l{A`}}}}{f{Df}}}{{l{c}}}Db}{{{f{{l{Aj}}}}{f{Df}}}{{l{c}}}Db}{{{f{{l{c}}}}{f{Df}}}{{l{e}}}AdDb}{{{f{Cl{l{c}}}}e}bAd{{Df{}{{Dd{}}}}Dh}}{{{f{{l{n}}}}c}{{l{n}}}{{Dn{{f{{An{Al}}}}}{{Dd{{f{{An{Al}}}}}}}}}}{{{f{{l{A`}}}}c}{{l{A`}}}{{Dn{{f{Ab}}}{{Dd{{f{Ab}}}}}}}}{{{f{{l{c}}}}Edg}{{l{i}}}Db{}{{Dn{}{{Dd{e}}}}}Db}{{{f{{l{A`}}}}c}{{l{A`}}}{{Dn{{f{Ab}}{f{ClEf}}}}}}{{{f{{l{j}}}}{f{Df}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{Bn}}}}{f{Df}}}{{Bd{{l{Bn}}Bb}}}}{{{f{{l{A`}}}}e{f{Cl{An{c}}}}}b{}{{Df{{C`{{f{Ab}}}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{{Bh{c}}}}}}g{f{Cl{An{e}}}}}bBl{}{{Df{{C`{{f{c}}}}{f{e}}}{{Dd{e}}}}}}{{{f{{l{c}}}}g{f{Cl{An{e}}}}}bAd{}{{Df{C`{f{e}}}{{Dd{e}}}}}}{{{f{{l{n}}}}e{f{Cl{An{c}}}}}b{}{{Df{{C`{{f{{An{Al}}}}}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{Aj}}}}e{f{Cl{An{c}}}}}b{}{{Df{{C`{d}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{j}}}}e{f{Cl{An{c}}}}}b{}{{Df{{C`{B`}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{Df{d}{{Dd{d}}}}Dh}}{{{f{{l{A`}}}}c}{{l{A`}}}{{Df{{f{Ab}}}{{Dd{{Dj{Ab}}}}}}Dh}}{{{f{{l{j}}}}c}{{l{j}}}{{Df{B`}{{Dd{B`}}}}Dh}}{{{f{{l{n}}}}c}{{l{n}}}{{Df{{f{{An{Al}}}}}{{Dd{{Dj{{An{Al}}}}}}}}Dh}}{{{f{{l{c}}}}e}{{l{c}}}Ad{{Df{}{{Dd{}}}}Dh}}{{{f{{l{{Bh{c}}}}}}e}{{l{{Bh{c}}}}}Bl{{Df{{f{c}}}{{Dd{c}}}}Dh}}{{{f{{l{c}}}}g}{{l{i}}}Db{}{{Dn{}{{Dd{e}}}}}Db}{{{f{{l{A`}}}}Eh}{{l{Ej}}}}{{{f{{l{c}}}}Eh}{{l{Ej}}}Ad}{{{f{{l{Aj}}}}Eh}{{l{Ej}}}}{{{f{{l{El}}}}Eh}{{l{Ej}}}}{{{f{{l{n}}}}Eh}{{l{Ej}}}}{{{f{{l{Aj}}}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{c}}}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}Ad}{{{f{{l{n}}}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{El}}}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{A`}}}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{n}}}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{Ej}}Bb}}}Ad}{{{f{{l{Aj}}}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{A`}}}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{{Bh{c}}}}}}}{{Bd{{l{Ej}}Bb}}}Bl}`{{{f{{l{Bn}}}}}{{f{{l{Bn}}}}}}{{{f{{l{A`}}}}}{{l{n}}}}{{{f{{l{n}}}}}{{f{{l{n}}}}}}{{{f{{l{j}}}}}{{f{{l{j}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Db}{{{f{{l{c}}}}}{{f{Ed}}}Db}{{{f{{l{A`}}}}}{{f{{l{A`}}}}}}0{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}DbDb{{Dn{{C`{Dl}}C`C`}{{Dd{{C`{B`}}}}}}}}{{{l{Aj}}{l{Aj}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}F`}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}}102021{{{f{c}}}{{f{e}}}{}{}}0{{{f{Clc}}}{{f{Cle}}}{}{}}0``{{{f{{l{c}}}}e}{{l{g}}}Ad{{Df{}{{Dd{}}}}Dh}Ad}{{{f{{l{El}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{j}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{A`}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{Aj}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{n}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{Ed}}}{{Bd{B`Bb}}}Ad}{{{f{{l{Bn}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{Bn}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{j}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{Aj}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{n}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{El}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{A`}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}Ad}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Fd}{{{f{{l{c}}}}e}{{Bd{B`Bb}}}FdAh}{{{f{{l{c}}}}}{{`{{Ch{}{{Cb{Ff}}}}}}}Db}{{{f{{l{c}}}}}{{Fl{{Fh{{Cf{Cd}}}}{Fj{{f{{Cf{Cd}}}}}{{Dd{Ff}}}}}}}Db}{{{f{{l{c}}}}}{{f{{Fn{{Cf{Cd}}}}}}}Db}{{{f{Cl{l{c}}}}}{{f{Cl{Fn{{Cf{Cd}}}}}}}Db}{{{f{{l{c}}}}}{{l{c}}}Db}0{{{f{c}}{f{Cle}}}b{}{}}`{{{f{Cl{l{c}}}}}b{DbAd}}`{{{f{{l{c}}}}}{{Bd{{f{An}}Bb}}}Ad}{{{f{Cl{l{c}}}}{f{{l{c}}}}G`}bDb}{{{f{Cl{l{c}}}}{f{{l{e}}}}G`}bDbDb}{{{f{{l{c}}}}}{{`{Gb}}}Ad}{{}{{l{c}}}Db}{Ff{{f{c}}}{}}0{Ff{{f{Clc}}}{}}0{{{f{{l{c}}}}e}{}Ad{AfAh}}{{{l{c}}{l{c}}}{}Ad}{{{l{c}}e}{}Ad{AfAh}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ad}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{Cl{l{c}}}}}bDb}{Ffb}0{{{f{{l{c}}}}}{{l{c}}}Db}{{{f{{l{c}}}}}{{f{Ed}}}Db}{{{f{{l{c}}}}}{{f{{Gd{c}}}}}Db}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Aj}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{Aj}}}}{{{f{{l{n}}}}{f{{An{Al}}}}}{{l{Aj}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Aj}}}Ad}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{Aj}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Aj}}}}{{{f{{l{Bn}}}}{f{{l{Bn}}}}}{{l{Aj}}}}{{{f{{l{A`}}}}{f{Ab}}}{{l{Aj}}}}{{{f{{l{c}}}}e}{{l{Aj}}}AdAh}542370186{{{f{{l{Bn}}}}}{{Bd{{Gj{B`{Gh{Gf}}}}Bb}}}}{{{f{{l{j}}}}}{{Bd{{Gj{B`{Gh{Gf}}}}Bb}}}}{{{f{Cl{l{c}}}}{f{{l{c}}}}}bAd}{{{f{{l{Aj}}}}d}{{Bd{{l{Aj}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Ad}{{{f{{l{n}}}}{f{{An{Al}}}}}{{Bd{{l{n}}Bb}}}}{{{f{{l{j}}}}{f{{l{Aj}}}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{n}}}}{f{{l{Aj}}}}}{{Bd{{l{n}}Bb}}}}{{{f{{l{Bn}}}}{f{{l{Aj}}}}}{{Bd{{l{Bn}}Bb}}}}{{{f{{l{A`}}}}{f{{l{Aj}}}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{El}}}}{f{{l{Aj}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{{Bh{c}}}}}}{f{{l{Aj}}}}}{{Bd{{l{{Bh{c}}}}Bb}}}Bl}{{{f{{l{c}}}}{f{{l{Aj}}}}}{{Bd{{l{c}}Bb}}}Ad}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{Bd{{l{Aj}}Bb}}}}{{{f{{l{c}}}}}{{C`{Ff}}}Db}`{{{f{{l{c}}}}{f{ClGl}}}{{Bd{bGn}}}Ad}{{{f{{l{j}}}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{l{n}}}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{l{Aj}}}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{l{A`}}}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{l{Bn}}}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{l{{Bh{c}}}}}}{f{ClGl}}}{{Bd{bGn}}}Bl}{{{f{{l{c}}}}e}bDb{{Dn{C`}}}}{{{f{{l{Bn}}}}c}b{{Dn{{C`{Dl}}}}}}{{{f{{l{j}}}}c}b{{Dn{{C`{Dl}}}}}}{c{{l{e}}}Cd{{Db{}{{H`{c}}}}}}{cc{}}0{{{f{Ab}}c}{{l{e}}}Hb{{Db{}{{H`{}}}}Db}}{{{f{{l{c}}}}e}{{l{c}}}{{Db{}{{H`{}}}}Db}Hb}{{{f{Ab}}{Fn{{Cf{Cd}}}}}{{l{c}}}Db}{{{f{Ab}}{Fn{{Cf{Cd}}}}Ed}{{l{c}}}Db}{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}{c{{l{Aj}}}{{Hb{}{{Cb{d}}}}}}{e{{l{{Bh{c}}}}}Bl{{Hb{}{{Cb{{C`{c}}}}}}}}{c{{l{j}}}{{Hb{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}{c{{l{Aj}}}{{Hb{}{{Cb{{C`{d}}}}}}}}{e{{l{A`}}}{{Hf{Ab}}}{{Hb{}{{Cb{{C`{c}}}}}}}}{c{{l{e}}}{{Hb{}{{Cb{{Gj{Fn{C`{Hh}}}}}}}}}Ad}{c{{l{j}}}{{Hb{}{{Cb{{C`{B`}}}}}}}}{e{{l{n}}}{{Hf{{An{Al}}}}}{{Hb{}{{Cb{{C`{c}}}}}}}}{e{{l{n}}}{{Hj{{An{Al}}}}}{{Hb{}{{Cb{c}}}}}}{e{{l{j}}}{{Hl{B`}}}{{Hb{}{{Cb{c}}}}}}{e{{l{A`}}}{{Hj{Ab}}}{{Hb{}{{Cb{c}}}}}}{c{{l{e}}}{{Hb{}{{Cb{C`}}}}}Ad}{{{f{Ab}}e}{{l{A`}}}{{Hf{Ab}}}{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{Ab}}e}{{l{{Bh{c}}}}}Bl{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{Ab}}e}{{l{n}}}{{Hf{{An{Al}}}}}{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{Ab}}c}{{l{e}}}{{Ch{}{{Cb{C`}}}}}Ad}{{{f{Ab}}c}{{l{Aj}}}{{Ch{}{{Cb{{C`{d}}}}}}}}=5<9{e{{l{El}}}{{Hf{{An{Al}}}}}{{Hb{}{{Cb{{C`{c}}}}}}}};{e{{l{{Bh{c}}}}}Bl{{Hb{}{{Cb{{C`{c}}}}}}}}8:{c{{l{Aj}}}{{Hb{}{{Cb{d}}}}}}{e{{l{El}}}{{Hj{{An{Al}}}}}{{Hb{}{{Cb{c}}}}}};{{{f{Ab}}e}{{l{{Bh{c}}}}}Bl{{Ch{}{{Cb{c}}}}}}{{{f{Ab}}c}{{l{Aj}}}{{Ch{}{{Cb{d}}}}}}{{{f{Ab}}c}{{l{e}}}{{Ch{}{{Cb{}}}}}Ad}{{{f{Ab}}e}{{l{A`}}}{{Hf{Ab}}}{{Ch{}{{Cb{c}}}}}}{{{f{Ab}}e}{{l{n}}}{{Hf{{An{Al}}}}}{{Ch{}{{Cb{c}}}}}}`{c{{l{e}}}{{Hn{}{{Cb{C`}}}}}Ad}{c{{l{j}}}{{Hn{}{{Cb{{C`{B`}}}}}}}}{e{{l{n}}}{{Hj{{An{Al}}}}I`IbId}{{Hn{}{{Cb{c}}}}}}{c{{l{Aj}}}{{Hn{}{{Cb{d}}}}}}{c{{l{Aj}}}{{Hn{}{{Cb{{C`{d}}}}}}}}{e{{l{A`}}}{{Hj{Ab}}I`IbId}{{Hn{}{{Cb{c}}}}}}{e{{l{n}}}{{Hf{{An{Al}}}}I`Ib}{{Hn{}{{Cb{{C`{c}}}}}}}}{e{{l{A`}}}{{Hf{Ab}}I`Ib}{{Hn{}{{Cb{{C`{c}}}}}}}}{{c{f{Ab}}Ed}{{l{j}}}{{Hn{}{{Cb{{C`{B`}}}}}}}}{{{f{Ab}}{f{{An{c}}}}}{{l{A`}}}{{Hf{Ab}}}}{{{f{Ab}}{f{{An{c}}}}}{{l{{Bh{c}}}}}Bl}{{{f{Ab}}{f{{An{d}}}}}{{l{Aj}}}}{{{f{Ab}}{f{{An{c}}}}}{{l{n}}}{{Hf{{An{Al}}}}}}{{{f{Ab}}{f{An}}}{{l{c}}}Ad}{{{f{Ab}}{f{{An{{C`{c}}}}}}}{{l{A`}}}{{Hf{Ab}}}}{{{f{Ab}}{f{{An{{C`{c}}}}}}}{{l{{Bh{c}}}}}Bl}{{{f{Ab}}{f{{An{{C`{c}}}}}}}{{l{n}}}{{Hf{{An{Al}}}}}}{{{f{Ab}}{f{{An{C`}}}}}{{l{c}}}Ad}{{{f{Ab}}{f{{An{{C`{d}}}}}}}{{l{Aj}}}}{c{{l{e}}}{{If{}{{Cb{C`}}}}}Ad}{c{{l{Aj}}}{{If{}{{Cb{{C`{d}}}}}}}}{{{f{Ab}}Fn}{{l{c}}}Ad}{{{f{Ab}}Fn{C`{Hh}}}{{l{c}}}Ad}{{{f{Ab}}cFf}{{l{{Bh{c}}}}}Bl}{{{f{Ab}}{f{{An{Al}}}}Ff}{{l{El}}}}{{{f{Ab}}Ff}{{l{c}}}Ad}{{{f{Ab}}{f{B`}}Ff}{{l{Bn}}}}{{{f{Ab}}{f{Ab}}Ff}{{l{A`}}}}{{{f{Ab}}dFf}{{l{Aj}}}}{{{f{Ab}}{f{B`}}Ff}{{l{j}}}}{{{f{Ab}}{f{{An{Al}}}}Ff}{{l{n}}}}{{{f{Ab}}Ff}{{l{A`}}}}{{{f{Ab}}Ff}{{l{n}}}}{{{f{Ab}}Ff}{{l{j}}}}8{{{f{Ab}}Ff}{{l{Bn}}}}{{{f{Ab}}Ff}{{l{Aj}}}}{{{f{Ab}}Ff}{{l{El}}}}{{{f{Ab}}Ff}{{l{{Bh{c}}}}}Bl}{{{f{{l{c}}}}Ff}{{l{c}}}Db}{{{f{Ab}}Ff{f{Ed}}Ff}{{l{Bn}}}}{{{f{Ab}}Ff{f{Ed}}}{{l{j}}}}{{{f{{l{c}}}}Ff}C`Db}{{{f{{l{Aj}}}}Ff}{{Bd{IhBb}}}}{{{f{{l{Bn}}}}Ff}{{Bd{IhBb}}}}{{{f{{l{A`}}}}Ff}{{Bd{IhBb}}}}{{{f{{l{El}}}}Ff}{{Bd{IhBb}}}}{{{f{{l{j}}}}Ff}{{Bd{IhBb}}}}{{{f{{l{n}}}}Ff}{{Bd{IhBb}}}}{{{f{{l{c}}}}Ff}{{Bd{IhBb}}}Ad}{{{f{{l{{Bh{c}}}}}}Ff}{{Bd{IhBb}}}Bl}{{{f{{l{c}}}}Ff}IhAd}{{{f{{l{j}}}}Ff}Ih}{{{f{{l{{Bh{c}}}}}}Ff}IhBl}{{{f{{l{El}}}}Ff}Ih}{{{f{{l{Bn}}}}Ff}Ih}{{{f{{l{Aj}}}}Ff}Ih}{{{f{{l{A`}}}}Ff}Ih}{{{f{{l{n}}}}Ff}Ih}{{{f{{l{j}}}}Ff}{{C`{B`}}}}{{{f{{l{Bn}}}}Ff}{{C`{B`}}}}{{{f{{l{c}}}}}{{C`{Ij}}}Db}{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}}IlDb}{{{f{{l{Bn}}}}}B`}{{{f{{l{j}}}}}B`}{{{f{{l{c}}}}}{{C`{f}}}Db}0{{{f{{l{{Bh{c}}}}}}Ff}{{C`{{f{In}}}}}Bl}0{{{f{{l{c}}}}Ff}C`Db}{{{f{{l{j}}}}}Ff}{{{f{{l{A`}}}}}Ff}{{{f{{l{El}}}}}Ff}{{{f{{l{Bn}}}}}Ff}{{{f{{l{El}}}}dd}{{Bd{BjBb}}}}{{{f{{l{Aj}}}}dd}{{Bd{BjBb}}}}{{{f{{l{Bn}}}}dd}{{Bd{BjBb}}}}{{{f{{l{c}}}}dd}{{Bd{BjBb}}}Ad}{{{f{{l{n}}}}dd}{{Bd{BjBb}}}}{{{f{{l{j}}}}dd}{{Bd{BjBb}}}}{{{f{{l{{Bh{c}}}}}}dd}{{Bd{BjBb}}}Bl}{{{f{{l{A`}}}}dd}{{Bd{BjBb}}}}{{{f{{l{c}}}}FfdFf}BjF`}{{{f{{l{A`}}}}{f{Ab}}}{{l{Aj}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Aj}}}}{{{f{{l{n}}}}{f{{An{Al}}}}}{{l{Aj}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{Aj}}}}{{{f{{l{Bn}}}}{f{{l{Bn}}}}}{{l{Aj}}}}{{{f{{l{c}}}}e}{{l{Aj}}}AdAh}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Aj}}}Ad}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Aj}}}}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{Aj}}}}705263148{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}{C`{Ff}}}{{l{c}}}Db}{{}Ff}0{{FfJ`{C`{Jb}}}{{l{c}}}Ad}{{{f{{l{j}}}}}{{f{Ed}}}}{{{f{{l{Bn}}}}}{{f{Ed}}}}{ce{}{}}0{{{l{Jd}}}{{Jh{JfJd}}}}{{{l{Jj}}Jl{C`{Ef}}}{{Jh{JnJj}}}}{{{l{K`}}{C`{Ff}}Ff}{{Bd{{Jh{KbK`}}Bb}}}}{{{l{K`}}{C`{Ff}}Ff}{{Jh{KbK`}}}}{{{l{Jj}}Jl}{{Jh{KdJj}}}}{{{f{{l{{Bh{c}}}}}}}{}Bl}{{{f{{l{El}}}}}}{{{f{{l{c}}}}}{}Ad}{{{f{{l{j}}}}}}{{{f{{l{Bn}}}}}}{{{f{{l{n}}}}}}{{{f{{l{A`}}}}}}{{{f{{l{Aj}}}}}}{{{f{{l{c}}}}}{{`{I`IbKfGbIf}}}Ad}{{{l{K`}}}B`}{{{l{c}}}B`Db}{{{l{Jj}}}{{Jh{KhJj}}}}{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}}{{l{Aj}}}Kj}000{{{f{{l{c}}}}}{{l{Aj}}}Db}02{{{f{{l{c}}}}}KlDb}{{{f{{l{c}}}}}{{`{Kn}}}Db}{{{f{{l{c}}}}}{{`{{Ch{}{{Cb{{l{c}}}}}}}}}Db}{{{f{{l{j}}}}}{{`{{Ch{}{{Cb{Gf}}}}}}}}{{{f{{l{c}}}}}{{Fl{{Fh{{Cf{Cd}}}}{Fj{{f{{Cf{Cd}}}}}{{Dd{{C`{{f{Hh}}}}}}}}}}}Db}`{{{f{{l{c}}}}}C`Db}{{{f{{l{c}}}}}{{C`{Ff}}}Db}{{{f{{l{c}}}}}{{L`{c}}}Db}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ad}{{{l{c}}{l{c}}}{}Ad}{{{f{{l{c}}}}}{}Ad}{{{l{c}}}{}Ad}10{{{f{{l{c}}}}}FfDb}0{{{f{{l{c}}}}e}{{l{c}}}Ad{AfLb}}00{{{f{{l{c}}}}Ff}{{l{c}}}Db}{{{f{{l{Bn}}}}{f{{l{Bn}}}}}{{l{Aj}}}}{{{f{{l{c}}}}e}{{l{Aj}}}AdAh}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Aj}}}}{{{f{{l{A`}}}}{f{Ab}}}{{l{Aj}}}}{{{f{{l{n}}}}{f{{An{Al}}}}}{{l{Aj}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Aj}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{Aj}}}}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{Aj}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Aj}}}Ad}168745230{{{f{{l{Aj}}}}}{{C`{d}}}}{{{f{{l{c}}}}}C`Ad}{{{f{{l{A`}}}}}Ld}{{{f{{l{c}}}}}LdAd}{{{f{{l{Aj}}}}}Ld}{{{f{{l{n}}}}}Ld}{{{f{{l{Aj}}}}}{{C`{Lf}}}}{{{f{{l{c}}}}}{{C`{Lf}}}Ad}{{{f{{l{Eb}}}}}{{C`{J`}}}}{{{f{{l{E`}}}}}{{C`{Lf}}}}{{{f{{l{c}}}}}{{C`{Lf}}}F`}{{{f{{l{Eb}}}}}Ld}{{{f{{l{E`}}}}}Ld}{{{f{{l{c}}}}}LdF`}{{{f{Cl{l{c}}}}{Gd{c}}}bDb}`{{{f{{l{c}}}}}{{C`{{f{{Gd{c}}}}}}}Db}{{{f{{l{c}}}}}{{C`{{f{{Lh{{Gd{c}}}}}}}}}Db}{{{f{Cl{l{c}}}}}{{f{Cl{Lh{{Gd{c}}}}}}}Db}{{{f{{l{c}}}}}{{Lh{{Gd{c}}}}}Db}{{{f{{l{Aj}}}}}{{C`{d}}}}{{{f{{l{c}}}}}C`Ad}{{{f{{l{c}}}}}{{C`{Gj}}}Ad}{{{f{{l{A`}}}}}Ld}{{{f{{l{n}}}}}Ld}{{{f{{l{Aj}}}}}Ld}{{{f{{l{c}}}}}LdAd}{{{f{Ab}}{f{An}}}{{l{c}}}Ad}{{{f{Ab}}{f{{An{Al}}}}FfFf}{{l{Aj}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ad}{{{f{{l{c}}}}e}{}Ad{AfAh}}{{{l{c}}{l{c}}}{}Ad}{{{l{c}}e}{}Ad{AfAh}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{c}}}}}FfDb}{{{f{{l{n}}}}}{{Bd{FfBb}}}}{{{f{{l{c}}}}}{{Bd{FfBb}}}Ad}{{{f{{l{A`}}}}}{{Bd{FfBb}}}}{{{f{{l{c}}}}}{{f{Ab}}}Db}{{{f{Ab}}e}{{l{{Bh{c}}}}}Bl{{Hf{{An{{C`{c}}}}}}}}{{{f{Ab}}{Lj{Gf}}}{{l{Jj}}}}{{{f{Ab}}c}{{l{Ll}}}{{Hf{{An{Ln}}}}}}{{{f{Ab}}c}{{l{M`}}}{{Hf{{An{Al}}}}}}{{{f{Ab}}c}{{l{A`}}}{{Hf{{An{{C`{{Dj{Ab}}}}}}}}}}{{{f{Ab}}c}{{l{Jd}}}{{Hf{{An{{C`{Mb}}}}}}}}{{{f{Ab}}c}{{l{M`}}}{{Hf{{An{{C`{Al}}}}}}}}{{{f{Ab}}c}{{l{Md}}}{{Hf{{An{Jb}}}}}}{{{f{Ab}}c}{{l{Mf}}}{{Hf{{An{Mh}}}}}}{{{f{Ab}}c}{{l{A`}}}{{Hf{{An{Ef}}}}}}{{{f{Ab}}c}{{l{Ll}}}{{Hf{{An{{C`{Ln}}}}}}}}{{{f{Ab}}c}{{l{Mf}}}{{Hf{{An{{C`{Mh}}}}}}}}{{{f{Ab}}c}{{l{n}}}{{Hf{{An{{Fn{Al}}}}}}}}{{{f{Ab}}{f{{An{c}}}}}{{l{{Bh{c}}}}}Bl}{{{f{Ab}}c}{{l{Eb}}}{{Hf{{An{J`}}}}}}{{{f{Ab}}c}{{l{Eb}}}{{Hf{{An{{C`{J`}}}}}}}}{{{f{Ab}}c}{{l{Jd}}}{{Hf{{An{Mb}}}}}}{{{f{Ab}}c}{{l{A`}}}{{Hf{{An{{C`{Ef}}}}}}}}{{{f{Ab}}{Lj{Ij}}}{{l{Ej}}}}{{{f{Ab}}c}{{l{n}}}{{Hf{{An{{C`{{Dj{{An{Al}}}}}}}}}}}}{{{f{Ab}}c}{{l{A`}}}{{Hf{{An{{C`{{f{Ab}}}}}}}}}}{{{f{Ab}}c}{{l{Mj}}}{{Hf{{An{{C`{Ml}}}}}}}}{{{f{Ab}}c}{{l{n}}}{{Hf{{An{{Dj{{An{Al}}}}}}}}}}{{{f{Ab}}c}{{l{E`}}}{{Hf{{An{{C`{Lf}}}}}}}}{{{f{Ab}}c}{{l{n}}}{{Hf{{An{{C`{{f{{An{Al}}}}}}}}}}}}{{{f{Ab}}c}{{l{A`}}}{{Hf{{An{{Dj{Ab}}}}}}}}{{{f{Ab}}c}{{l{A`}}}{{Hf{{An{{f{Ab}}}}}}}}{{{f{Ab}}c}{{l{Jj}}}{{Hf{{An{{C`{Gf}}}}}}}}{{{f{Ab}}c}{{l{Md}}}{{Hf{{An{{C`{Jb}}}}}}}}{{{f{Ab}}c}{{l{Jj}}}{{Hf{{An{Gf}}}}}}{{{f{Ab}}c}{{l{Aj}}}{{Hf{{An{{C`{d}}}}}}}}{{{f{Ab}}{Lj{Jb}}}{{l{Md}}}}{{{f{Ab}}c}{{l{Aj}}}{{Hf{{An{d}}}}}}{{{f{Ab}}{Lj{Mb}}}{{l{Jd}}}}{{{f{Ab}}c}{{l{Ej}}}{{Hf{{An{{C`{Ij}}}}}}}}{{{f{Ab}}c}{{l{n}}}{{Hf{{An{{f{{An{Al}}}}}}}}}}{{{f{Ab}}c}{{l{n}}}{{Hf{{An{{C`{{Fn{Al}}}}}}}}}}{{{f{Ab}}c}{{l{E`}}}{{Hf{{An{Lf}}}}}}{{{f{Ab}}c}{{l{Mj}}}{{Hf{{An{Ml}}}}}}{{{f{Ab}}c}{{l{Ej}}}{{Hf{{An{Ij}}}}}}{{{f{Ab}}}{{l{{Bh{c}}}}}Bl}{{{f{{l{{Bh{c}}}}}}FfFf}{{l{{Bh{c}}}}}Bl}{{{f{{l{A`}}}}FfFf}{{l{A`}}}}{{{f{{l{c}}}}FfFf}{{l{c}}}Ad}{{{f{{l{Bn}}}}FfFf}{{l{Bn}}}}{{{f{{l{j}}}}FfFf}{{l{j}}}}{{{f{{l{Aj}}}}FfFf}{{l{Aj}}}}{{{f{{l{El}}}}FfFf}{{l{El}}}}{{{f{{l{n}}}}FfFf}{{l{n}}}}{{{f{Ab}}{Fn{c}}}{{l{{Bh{c}}}}}Bl}{{{f{Ab}}{Fn{c}}Hh}{{l{{Bh{c}}}}}Bl}{{{f{Ab}}Fn}{{l{c}}}Ad}{{{Lh{Mn}}{Fn{{Cf{Cd}}}}}{{l{c}}}Db}{{{Lh{Mn}}{Fn{{Cf{Cd}}}}IjIj}{{l{c}}}Db}{{{f{{l{c}}}}}{{l{c}}}Kj}{{{f{{l{Aj}}}}}}{{{l{Aj}}}}{{{f{{l{Bn}}}}{f{{l{Bn}}}}}{{l{Aj}}}}{{{f{{l{A`}}}}{f{Ab}}}{{l{Aj}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{Aj}}}}{{{f{{l{c}}}}e}{{l{Aj}}}AdAh}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Aj}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Aj}}}Ad}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Aj}}}}{{{f{{l{n}}}}{f{{An{Al}}}}}{{l{Aj}}}}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{Aj}}}}6{{{f{{l{Bn}}}}{f{{l{Bn}}}}}}6541328{{{f{{l{c}}}}}FfDb}`{{{f{{l{j}}}}}{{Bd{{Gh{Gf}}Bb}}}}{{{f{{l{Bn}}}}}{{Bd{{Gh{Gf}}Bb}}}}`{{{f{{l{A`}}}}}{{`{{N`{}{{Cb{{C`{{f{Ab}}}}}}}}}}}}{{{f{{l{j}}}}}{{`{{N`{}{{Cb{{C`{B`}}}}}}}}}}{{{f{{l{A`}}}}}{{`{Nb}}}}{{{f{Cl{l{j}}}}}{{`{Nb}}}}{{{f{{l{c}}}}}LdAd}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{E`}}}}LfNd}{{Bd{{C`{Lf}}Bb}}}}{{{f{{l{Eb}}}}LfNd}{{Bd{{C`{J`}}Bb}}}}{{{f{{l{c}}}}LfNd}{{Bd{{C`{Lf}}Bb}}}F`}{{{f{{l{c}}}}LfNd}{{Bd{LdBb}}}F`}{{{f{{l{E`}}}}LfNd}{{Bd{LdBb}}}}{{{f{{l{Eb}}}}LfNd}{{Bd{LdBb}}}}{{{f{Ab}}FfLf}{{Bd{{l{Aj}}Bb}}}}{{{f{Ab}}FfLfLf}{{Bd{{l{c}}Bb}}}Ad}{{{f{Ab}}Ff}{{l{c}}}Ad}{{{f{Ab}}FfLfLf}{{l{c}}}Ad}{{{f{{l{c}}}}}{{l{c}}}Db}{{{f{{l{c}}}}}{{f{Mn}}}Db}{{{f{{l{M`}}}}}B`}{{{f{{l{Ej}}}}}B`}{{{f{{l{Md}}}}}B`}{{{f{{l{Mf}}}}}B`}{{{f{{l{j}}}}}B`}{{{f{{l{Jd}}}}}B`}{{{f{{l{Eb}}}}}B`}{{{f{{l{Ll}}}}}B`}{{{f{{l{E`}}}}}B`}{{{f{{l{Jj}}}}}B`}{{{f{{l{Mj}}}}}B`}:1604239587{{{f{{l{c}}}}{f{{l{c}}}}}{}Ad}{{{f{{l{c}}}}e}{}Ad{AfAh}}{{{l{c}}e}{}Ad{AfAh}}{{{l{c}}{l{c}}}{}Ad}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{Cl{l{c}}}}{f{Ab}}}bDb}{{{f{{l{{Bh{c}}}}}}}{{l{{Bh{c}}}}}Bl}{{{f{{l{j}}}}}{{l{j}}}}{{{f{{l{El}}}}}{{l{El}}}}{{{f{{l{Aj}}}}}{{l{Aj}}}}{{{f{{l{c}}}}}{{l{c}}}Ad}{{{f{{l{A`}}}}}{{l{A`}}}}{{{f{{l{Bn}}}}}{{l{Bn}}}}{{{f{{l{n}}}}}{{l{n}}}}{{{f{{l{c}}}}{f{Df}}Nf}{{Bd{B`Bb}}}Ad}{{{f{{l{c}}}}Ffe}{{Bd{{l{c}}Bb}}}Kj{{Dn{{f{Cl{l{c}}}}}{{Dd{C`}}}}}}{{{f{{l{c}}}}Lfdd{C`{Jb}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{c}}}}Ffdd{C`{Jb}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{A`}}}}{f{{An{Ij}}}}c}{{Bd{B`Bb}}}{{Hb{}{{Cb{{C`{{f{Ab}}}}}}}}}}{{{f{Cl{l{c}}}}{f{{An{Ij}}}}e}{{Bd{B`Bb}}}Nh{{Hb{}{{Cb{C`}}}}}}{{{f{{l{Aj}}}}{f{{An{Ij}}}}c}{{Bd{B`Bb}}}{{Hb{}{{Cb{{C`{d}}}}}}}}{{{f{{l{c}}}}eC`}{{Bd{{l{c}}Bb}}}Ad{{Hb{}{{Cb{Ij}}}}}}{{{f{{l{n}}}}c{C`{{f{{An{Al}}}}}}}{{Bd{{l{n}}Bb}}}{{Hb{}{{Cb{Ij}}}}}}{{{f{{l{A`}}}}c{C`{{f{Ab}}}}}{{Bd{{l{A`}}Bb}}}{{Hb{}{{Cb{Ij}}}}}}{{{f{{l{Aj}}}}c{C`{d}}}{{Bd{{l{Aj}}Bb}}}{{Hb{}{{Cb{Ij}}}}}}{{{f{{l{n}}}}ce}{{Bd{{l{n}}Bb}}}{{Hb{}{{Cb{Ij}}}}}{{Df{{C`{{f{{An{Al}}}}}}}{{Dd{{C`{{Fn{Al}}}}}}}}}}{{{f{{l{A`}}}}ce}{{Bd{{l{A`}}Bb}}}{{Hb{}{{Cb{Ij}}}}}{{Df{{C`{{f{Ab}}}}}{{Dd{{C`{Ef}}}}}}}}{{{f{{l{Aj}}}}ce}{{Bd{{l{Aj}}Bb}}}{{Hb{}{{Cb{Ij}}}}}{{Df{{C`{d}}}{{Dd{{C`{d}}}}}}}}{{{f{{l{c}}}}eg}{{Bd{{l{c}}Bb}}}Ad{{Hb{}{{Cb{Ij}}}}}{{Df{C`}{{Dd{C`}}}}}}{{{f{{l{A`}}}}{f{{l{Aj}}}}{C`{{f{Ab}}}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{n}}}}{f{{l{Aj}}}}{C`{{f{{An{Al}}}}}}}{{Bd{{l{n}}Bb}}}}{{{f{{l{c}}}}{f{{l{Aj}}}}C`}{{Bd{{l{c}}Bb}}}Ad}{{{f{{l{Aj}}}}{f{{l{Aj}}}}{C`{d}}}{{Bd{{l{Aj}}Bb}}}}{{{f{Cl{l{j}}}}}b}{{{f{Cl{l{c}}}}d}bDb}{{{f{Cl{l{j}}}}Ed}b}{{{f{Cl{l{c}}}}Ij}bDb}{{{f{Cl{l{c}}}}Kl}bDb}{{{f{{l{El}}}}Gf}{{l{El}}}}{{{f{{l{n}}}}Gf}{{l{n}}}}{{{f{{l{A`}}}}Gf}{{l{A`}}}}{{{f{{l{{Bh{c}}}}}}Gf}{{l{{Bh{c}}}}}Bl}{{{f{{l{Bn}}}}Gf}{{l{Bn}}}}{{{f{{l{j}}}}Gf}{{l{j}}}}{{{f{{l{c}}}}Gf}{{l{c}}}Ad}{{{f{{l{Aj}}}}Gf}{{l{Aj}}}}{{{f{{l{c}}}}GfC`}{{l{c}}}Ad}{{{f{{l{j}}}}Gf{C`{{f{B`}}}}}{{l{j}}}}{{{f{{l{A`}}}}Gf{C`{{f{Ab}}}}}{{l{A`}}}}{{{f{{l{El}}}}Gf{C`{{f{{An{Al}}}}}}}{{l{El}}}}{{{f{{l{{Bh{c}}}}}}Gf{C`{{Bh{c}}}}}{{l{{Bh{c}}}}}Bl}{{{f{{l{Bn}}}}Gf{C`{{f{B`}}}}}{{l{Bn}}}}{{{f{{l{n}}}}Gf{C`{{f{{An{Al}}}}}}}{{l{n}}}}{{{f{{l{Aj}}}}Gf{C`{d}}}{{l{Aj}}}}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{c}}}}GfFf}{{l{c}}}Db}0{{{f{{l{El}}}}d}{{l{El}}}}{{{f{{l{Aj}}}}d}{{l{Aj}}}}{{{f{{l{A`}}}}d}{{l{A`}}}}{{{f{{l{n}}}}d}{{l{n}}}}{{{f{{l{c}}}}d}{{l{c}}}Ad}{{{f{{l{A`}}}}Eh}{{l{A`}}}}{{{f{{l{El}}}}Eh}{{l{El}}}}{{{f{{l{Aj}}}}Eh}{{l{Aj}}}}{{{f{{l{c}}}}Eh}{{l{c}}}Ad}{{{f{{l{n}}}}Eh}{{l{n}}}}{{{f{{l{c}}}}Gf}{{Gj{{l{c}}{l{c}}}}}Db}0{{{f{{l{c}}}}Al}{{C`{Lf}}}Ad}{{{f{{l{c}}}}Al}LdF`}{{{f{{l{Eb}}}}Al}Ld}{{{f{{l{E`}}}}Al}Ld}{{{f{{l{c}}}}e}{}Ad{AfAh}}{{{l{c}}e}{}Ad{AfAh}}{{{l{c}}{l{c}}}{}Ad}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ad}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{Aj}}}}}{{C`{Ij}}}}{{{f{{l{c}}}}}C`Ad}{{{f{{l{n}}}}}Ld}{{{f{{l{Aj}}}}}Ld}{{{f{{l{c}}}}}LdAd}{{{f{{l{c}}}}{C`{Ff}}}{{l{c}}}Db}{{{f{{l{c}}}}{f{e}}}{{Bd{{l{c}}Bb}}}Db{{Hf{{An{Ij}}}}Nj}}{{{f{{l{c}}}}{f{{l{Ej}}}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{c}}}}{f{{An{Nl}}}}Kl}{{l{c}}}Db}{{{f{{l{c}}}}{f{{An{Nl}}}}}{{l{c}}}Db}{{{f{{l{n}}}}{f{c}}}{{l{n}}}{{Hf{{An{Ij}}}}Nj}}{{{f{{l{A`}}}}{f{c}}}{{l{A`}}}{{Hf{{An{Ij}}}}Nj}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Db{}{{Nn{D`}}}}Db}{{Hf{{An{Ij}}}}Nj}}{{{f{{l{n}}}}{f{{l{Ej}}}}}{{l{n}}}}{{{f{{l{c}}}}{f{{l{Ej}}}}}{{l{c}}}{{Db{}{{Nn{D`}}}}Db}}{{{f{{l{A`}}}}{f{{l{Ej}}}}}{{l{A`}}}}`{{{f{{l{c}}}}dO`}{{Fn{{Fn{Ob}}}}}Db}{{{f{{l{c}}}}}{{l{c}}}Kj}{{{f{{l{A`}}}}Ff}{{Bd{B`Bb}}}}{{{f{Cl{l{j}}}}Ed}b}{{{f{Cl{l{Bn}}}}Ed}b}{{{f{{l{j}}}}}{{Bd{{Oj{Od{Oh{{Of{Ff}}}}}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{Oj{{Ol{f}}{Oh{{Of{Ff}}}}}}Bb}}}Ad}{{{f{c}}}e{}{}}{{{f{{l{n}}}}}{{l{A`}}}}{{{f{{l{c}}}}}{{Fn{C`}}}Ad}{{{f{{l{c}}}}}{{On{Fn{Fn{C`}}}}}Ad}{{{l{c}}{l{c}}}{}Ad}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ad}{{{l{c}}}{}Ad}{{{f{{l{c}}}}}{}Ad}10{{{f{{l{j}}}}c}{{Bd{{l{j}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{Bn}}}}e}{{Bd{{l{g}}Bb}}}{}{{Dn{{C`{Dl}}}{{Dd{{Bd{{C`{c}}Bb}}}}}}Dh}Db}{{{f{{l{j}}}}e}{{Bd{{l{g}}Bb}}}{}{{Dn{{C`{Dl}}}{{Dd{{Bd{{C`{c}}Bb}}}}}}Dh}Db}{{{f{{l{Bn}}}}c}{{Bd{{l{Bn}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{Bn}}}}c}{{Bd{{l{j}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}Dh}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{c{{Bd{e}}}{}{}}0{{{f{Ab}}g}{{Bd{{l{i}}e}}}Cd{}{{Hb{}{{Cb{{Bd{ce}}}}}}}{{Db{}{{H`{c}}}}Db}}11{{{f{{l{j}}}}{f{{l{c}}}}e}{{Bd{{l{j}}Bb}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}}}{{{f{c}}}A@`{}}0{{{f{{l{{Bh{c}}}}}}}{{Bd{{l{{Bh{c}}}}Bb}}}Bl}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Ad}{{{f{{l{Aj}}}}}{{Bd{{l{Aj}}Bb}}}}{{{f{{l{n}}}}}{{Bd{{l{n}}Bb}}}}{{{f{{l{A`}}}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{{f{{l{c}}}}Bb}}}Db}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{c}}}}Ff}{}Db}{{{f{{l{c}}}}Al}{{C`{Lf}}}Ad}{{{f{{l{E`}}}}Al}Ld}{{{f{{l{c}}}}Al}LdF`}{{{f{{l{Eb}}}}Al}Ld}{{{f{{l{Aj}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Ej}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{A`}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Jd}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Mf}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Ll}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Md}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{n}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Jj}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Mj}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Eb}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{{Bh{c}}}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}Bl}{{{f{{l{El}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{M`}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{K`}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{E`}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{A`}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{{Bh{c}}}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}Bl}{{{f{{l{Ll}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{E`}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Mf}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{K`}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Jd}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{n}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Eb}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Md}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{M`}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Ej}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Jj}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Aj}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{El}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Mj}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{ce{}{}}0{{{f{{l{Bn}}}}}Ff}{{{f{Ab}}c}{{l{e}}}Cd{{Db{}{{H`{c}}}}Db}}{{{f{{l{e}}}}c}{{l{e}}}Cd{{Db{}{{H`{c}}}}Db}}{{{f{{l{c}}}}{Fn{{Cf{Cd}}}}}{{l{c}}}Db}{{{l{c}}{f{Ab}}}{{l{c}}}Db}{{{f{{An{A@b}}}}e}c{}{{A@d{{f{{l{Ej}}}}}{{Dd{c}}}}}}{{{f{{l{c}}}}Kl}{{l{c}}}Db}{{{f{{l{c}}}}}{}Ad}{{{l{c}}}{}Ad}{{{l{c}}{l{c}}}{}Ad}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ad}32103232103232013232102323102323{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{C`{B`}}}}}}}}{{{f{{l{Bn}}}}{f{{l{c}}}}e}{{l{Bn}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{C`{B`}}}}}}}}{{{f{{l{c}}}}{f{{l{Aj}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}````{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}c}e{}{}{}}{{c{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}g{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}c}g{}{}{}}{{c{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}g{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}65654654650654654````````````````{{{f{c}}h}b{}}000{{{f{ClA@n}}{f{Cd}}}b}{{{f{ClA@n}}}b}{{{f{ClAA`}}}b}{{{f{ClAAb}}c}b{{Ch{}{{Cb{{C`{d}}}}}}If}}{{{f{Cl{AAd{c}}}}e}bAd{{Ch{}{{Cb{C`}}}}If}}{{{f{Cl{AAd{c}}}}e}bAd{{Ch{}{{Cb{}}}}If}}{{{f{ClAAf}}}b}{{{f{ClAAh}}}b}65{{{f{ClAAj}}}b}{{{f{ClAAl}}}b}{{{f{ClAAb}}}b}{{{f{ClAAn}}}b}{{{f{Cl{AAd{c}}}}}bAd}{{{f{Cl{AB`{c}}}}}b{ABbNj}}{{{f{ClABd}}}b}{{{f{ClABf}}}b}{{{f{Cl{ABh{c}}}}}bAd}{{{f{ClA@n}}{C`{{f{Cd}}}}}b}{{{f{ClA@n}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClAAf}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{Cl{AAd{c}}}}{C`{{f{An}}}}}bAd}{{{f{Cl{AB`{c}}}}{C`{e}}}b{ABbNj}{{Hf{c}}}}{{{f{ClAAh}}{C`{c}}}b{}}{{{f{ClAAf}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClA@n}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAA`}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAj}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAl}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAb}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAn}}{f{B`}}}{{Bd{bBb}}}}{{{f{Cl{AAd{c}}}}{f{B`}}}{{Bd{bBb}}}Ad}{{{f{Cl{AAd{c}}}}{f{An}}}bAd}{{{f{ClAAj}}c}b{{Ch{}{{Cb{{C`{{f{Ab}}}}}}}}If}}{{{f{ClAAl}}c}b{{Ch{}{{Cb{{C`{{f{{An{Al}}}}}}}}}}If}}{{{f{ClAAh}}c}b{}}{{{f{Cl{AB`{c}}}}e}b{ABbNj}{{Hf{c}}}}{{{f{ClABd}}d}b}{{{f{Cl{ABh{c}}}}}bAd}{{{f{ClAAj}}c}b{{Ch{}{{Cb{{f{Ab}}}}}}}}{{{f{ClAAl}}c}b{{Ch{}{{Cb{{f{{An{Al}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}0000000000{{{f{Clc}}}{{f{Cle}}}{}{}}0000000000`{{{f{{AB`{c}}}}}{{AB`{c}}}{ABbNj}}{{{f{ABd}}}ABd}{{{f{ABf}}}ABf}{{{f{{ABh{c}}}}}{{ABh{c}}}{ABjAd}}{{{f{c}}{f{Cle}}}b{}{}}000{{}A@n}{{}AA`}{Ff{{f{c}}}{}}0000000000{Ff{{f{Clc}}}{}}0000000000{Ffb}0000000000{{{f{AAj}}}d}{{{f{AAl}}}d}{{{f{AAb}}}d}{{{f{{AAd{c}}}}}dAd}{{{f{AAf}}}d}{{{f{AAj}}}{{f{Mn}}}}{{{f{AAl}}}{{f{Mn}}}}{{{f{AAb}}}{{f{Mn}}}}{{{f{{AAd{c}}}}}{{f{Mn}}}Ad}{{{f{AAf}}}{{f{Mn}}}}{AAh{{l{c}}}Db}{{{f{ClA@n}}}{{l{j}}}}{{{f{ClAA`}}}{{l{j}}}}{{{f{ClAAn}}}{{l{j}}}}{{{f{ClAAf}}}{{l{j}}}}{{{AB`{{An{Al}}}}}{{l{n}}}}{{{AB`{Ab}}}{{l{A`}}}}{ABd{{l{Aj}}}}{ABfABl}{{{ABh{c}}}{{l{c}}}Ad}`{cc{}}0000000000{{{f{Ab}}e}ABn{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{Ab}}e}ABn{}{{Ch{}{{Cb{c}}}}}}{{{f{Ab}}{f{{An{c}}}}}ABn{}}{{{f{Ab}}{f{{An{{C`{c}}}}}}}ABn{}}{{{f{Ed}}FfFf{f{Ab}}}{{Bd{{Cf{AAf}}Bb}}}}{{}Ff}0000000000{{{f{ClAAj}}}{{Cf{Cd}}}}{{{f{ClAAl}}}{{Cf{Cd}}}}{{{f{ClAAb}}}{{Cf{Cd}}}}{{{f{Cl{AAd{c}}}}}{{Cf{Cd}}}Ad}{{{f{ClAAf}}}{{Cf{Cd}}}}{ce{}{}}0000000000`{{{f{Ab}}Ff{C`{Ed}}}A@n}{{{f{Ab}}Ff{C`{Ed}}}AA`}{{{f{Ab}}FfFf}AAj}{{{f{Ab}}FfFf}AAl}{{{f{Ab}}FfFf}AAb}{{{f{Ab}}Ff}AAn}{{{f{Ab}}FfFfEd}{{AAd{c}}}Ad}{{{f{Ab}}Ff}{{AB`{c}}}{ABbNj}}{{{f{Ab}}Ff}ABd}{{{f{Ab}}Ff}ABf}{{{f{Ab}}Ff}{{ABh{c}}}Ad}{{{f{Ab}}FfFfEdEd}{{AAd{c}}}Ad}{{{f{ClAAh}}}b}{{{f{ClABd}}}b}{{{f{ClABf}}}b}{{{f{Cl{ABh{c}}}}}bAd}{{{f{c}}}e{}{}}000{c{{Bd{e}}}{}{}}000000000000000000000{{{f{c}}}A@`{}}0000000000{ce{}{}}0000000000````````{{{f{ClAAf}}}b}{{{f{ClAAf}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClAAf}}{f{B`}}}{{Bd{bBb}}}}`{{{f{AAf}}}d}{{{f{AAf}}}{{f{Mn}}}}{{{f{ClAAf}}}{{l{j}}}}{{{f{Ed}}FfFf{f{Ab}}}{{Bd{{Cf{AAf}}Bb}}}}{{{f{ClAAf}}}{{Cf{Cd}}}}````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{Fb}}}Fb}{{{f{c}}{f{Cle}}}b{}{}}{{}Fb}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{Fb}}{f{Fb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{Fb}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{Fb}}{f{Clc}}}bAC`}{{}Ff}{ce{}{}}{{{f{Fb}}}d}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4``{{ACb{f{Ab}}}{{l{c}}}Db}{{ACd{f{{l{c}}}}}{{l{c}}}Db}10{{ACd{f{Ab}}Ed}{{l{c}}}Db}0{{ACb{f{Ab}}}{{Bd{{l{c}}e}}}Db{}}{{ACd{f{{l{c}}}}}{{Bd{{l{c}}e}}}Db{}}10{{ACd{f{Ab}}Ed}{{Bd{{l{c}}e}}}Db{}}0`{ACfACf}``{{ACh{f{Ab}}Ed}e{}{{ACj{c}}}}{{e{f{Ab}}Ed}ACj{}{{Hn{}{{Cb{c}}}}}}`````{{{f{c}}}{{f{e}}}{}{}}000{{{f{Clc}}}{{f{Cle}}}{}{}}000{Ff{{f{c}}}{}}000{Ff{{f{Clc}}}{}}000{Ffb}000{cc{}}000{{}Ff}000{ce{}{}}0000000{{{f{ACl}}}ACn}{{{f{AD`}}Ed}ADb}{{{f{ClACn}}}C`}{{{f{ClADb}}}C`}{{{f{ClADd}}}C`}{{{f{Cl{ADf{c}}}}}C`Ch}32{{{f{Cl{ADf{c}}}}}C`Gb}`{{{f{ACn}}}{{Gj{Ff{C`{Ff}}}}}}{{{f{ADb}}}{{Gj{Ff{C`{Ff}}}}}}{{{f{{ADf{c}}}}}{{Gj{Ff{C`{Ff}}}}}Ch}{c{{Bd{e}}}{}{}}0000000{{{f{c}}}A@`{}}000<<<<```````````````````````{{{f{c}}h}b{}}000{{}G`}{{}Il}{{G`G`}G`}{{IlIl}Il}{{{f{ClG`}}G`}b}{{{f{ClIl}}Il}b}3210{{{f{G`}}}Ij}0{{{f{Il}}}Al}05432{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Clc}}}{{f{Cle}}}{}{}}0000{{{f{{Gd{c}}}}}{{Gd{c}}}Db}{{{f{ADh}}}ADh}{{{f{G`}}}G`}{{{f{Il}}}Il}{{{f{c}}{f{Cle}}}b{}{}}000{{{f{ClADj}}}b}{G`G`}{IlIl}{{{f{G`}}G`}d}{{{f{Il}}Il}d}{{}{{Gd{c}}}Db}{{}G`}{{}Il}{Ff{{f{c}}}{}}0000{Ff{{f{Clc}}}{}}0000{{G`G`}G`}{{IlIl}Il}{{}d}{{{Gd{c}}Ij}{{Gd{c}}}Db}{{{Gd{c}}{C`{Ij}}}{{Gd{c}}}Db}{Ffb}0000983{{{f{G`}}{f{G`}}}d}{{{f{Il}}{f{Il}}}d}{{{f{ClG`}}c}b{{Hb{}{{Cb{G`}}}}}}{{{f{ClIl}}c}b{{Hb{}{{Cb{Il}}}}}}7{{{Gd{c}}d}{{Gd{c}}}Db}{{{Gd{c}}{C`{d}}}{{Gd{c}}}Db}{{{f{{Gd{c}}}}G`}{{Gd{c}}}Db}{{{f{{Gd{c}}}}G`}{{Gd{e}}}DbDb}{{{Gd{c}}Il}{{Gd{c}}}Db}{{{Gd{c}}{C`{Il}}}{{Gd{c}}}Db}{{{f{{Gd{c}}}}{f{ClGl}}}{{Bd{bGn}}}Db}{{{f{ADh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{G`}}{f{ClGl}}}{{Bd{bGn}}}}0000{{{f{Il}}{f{ClGl}}}{{Bd{bGn}}}}0000{cc{}}0000{Ij{{C`{G`}}}}{Al{{C`{Il}}}}{IjG`}0{AlIl}010{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}0{cG`{{Hb{}{{Cb{G`}}}}}}{cIl{{Hb{}{{Cb{Il}}}}}}{{{f{Ab}}}{{C`{G`}}}}{{{f{Ab}}}{{C`{Il}}}}{{{f{{Gd{c}}}}}{{C`{Ij}}}Db}{{{f{{Gd{c}}}}}dDb}{{{f{Il}}}d}{{{f{{Gd{c}}}}}IlDb}{{{f{{Gd{c}}}}}{{C`{f}}}Db}0{{{f{Il}}}Kl}{{}Ff}0000{{{f{ClG`}}G`}b}{{{f{ClIl}}Il}b}{{G`G`}G`}{{IlIl}Il}{{{f{G`}}G`}d}{{{f{Il}}Il}d}{ce{}{}}0000{G`}{Il}{{{f{G`}}}d}>?0>{{{f{{Gd{c}}}}}KlDb}{{{f{{Gd{c}}}}}dDb}0{{{f{G`}}}{{ADl{G`}}}}{{{f{Il}}}{{ADl{Il}}}}{{{f{G`}}}{{ADn{G`}}}}{{{f{Il}}}{{ADn{Il}}}}{{}d}{{}{{f{{AEb{AE`}}}}}}{{{Gd{c}}}{{Gd{c}}}Db}{{{Gd{c}}C`}{{Gd{c}}}Db}{{{f{{Gd{c}}}}{Gd{c}}}{{AEd{c}}}Db}21{G`G`}{IlIl}{{{f{ClG`}}G`}b}{{{f{ClIl}}Il}b}{{{f{ClG`}}G`d}b}{{{f{ClIl}}Ild}b}{{{f{Cl{Gd{c}}}}{C`{Ij}}}bDb}{{{f{Cl{Gd{c}}}}d}bDb}{{{f{ClIl}}d}b}{{{f{Cl{Gd{c}}}}Il}bDb}{{{f{Cl{Gd{c}}}}C`}bDb}033{{{f{Cl{Gd{c}}}}Kl}bDb}{{{f{ClIl}}Kl}b}{{{Gd{c}}Kl}{{Gd{c}}}Db}{{{Gd{c}}{C`{Kl}}}{{Gd{c}}}Db}{{G`G`}G`}{{IlIl}Il}>=10{{{f{c}}}e{}{}}000?>{c{{Bd{e}}}{}{}}000000000{{{f{c}}}A@`{}}000043{ce{}{}}0000{ADjADj}````{{{f{c}}h}b{}}{{{f{{AEf{c}}}}Ff}{{Gj{{AEf{c}}{AEf{c}}}}}Bl}{e{{AEf{c}}}Bl{{Hb{}{{Cb{{C`{{f{c}}}}}}}}}}{e{{AEf{c}}}Bl{{Hb{}{{Cb{{f{c}}}}}}}}{{AEhe}g{}{{Hb{}{{Cb{c}}}}}{}}0{{{f{In}}}{{f{AEj}}}}{{{f{{AEf{c}}}}}{{f{AEj}}}Bl}{{{f{Cl{AEf{c}}}}}{{f{ClAEj}}}Bl}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}`{{{f{{AEf{c}}}}Ff}dBl}{{{f{{AEf{c}}}}}{{AEf{c}}}{ABjBl}}{{{f{c}}{f{Cle}}}b{}{}}{{{f{{AEf{c}}}}}{{f{AEh}}}Bl}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{{f{In}}}}{f{{f{In}}}}}d}{{{f{In}}{f{In}}}d}{{{f{{AEf{c}}}}{f{ClGl}}}{{Bd{bGn}}}{AElBl}}{cc{}}{{FfAEh}{{AEf{c}}}Bl}{{{f{{AEf{c}}}}Ff}{{C`{{f{c}}}}}Bl}{{}AEh}{{{f{Hh}}{f{{AEf{c}}}}{f{{AEf{c}}}}}{{AEf{c}}}Bl}{{AEh{f{Hh}}}{{AEf{c}}}Bl}{{{f{Hh}}{f{{AEf{c}}}}}{{AEf{c}}}Bl}0{{}Ff}{ce{}{}}{{{f{{AEf{c}}}}}{}Bl}{{{f{{AEf{c}}}}Ff}dBl}0{{{f{c}}Ff}d{}}{{{f{{AEf{c}}}}}{{AF`{AEn}}}Bl}{{{f{{AEf{c}}}}}{{AF`{{f{c}}{Fh{c}}AEn}}}Bl}{{{f{{AEf{c}}}}}FfBl}0`{{{f{Cl{AEf{c}}}}{C`{Hh}}}bBl}{{{f{Cl{AEf{c}}}}FfFf}bBl}{{{f{c}}FfFf}e{}{}}01{{{f{{AEf{c}}}}Ff}{{Gj{{Cf{Cd}}{Cf{Cd}}}}}Bl}0{{{f{In}}}{{Cf{In}}}}{{{f{{AEf{c}}}}}{{Cf{Cd}}}Bl}{{{f{c}}}e{}{}}{g{{Bd{{AEf{c}}e}}}Bl{}{{Hb{}{{Cb{{Bd{{C`{{f{c}}}}e}}}}}}}}{g{{Bd{{AEf{c}}e}}}Bl{}{{Hb{}{{Cb{{Bd{{f{c}}e}}}}}}}}{{AEhg}{{Bd{ie}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}{}}0{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}{{{f{In}}}{{f{Ab}}}}{{}{{f{Ab}}}}{{{f{{AEf{c}}}}}{{C`{{f{Hh}}}}}Bl}{{{f{{AEf{c}}}}Ff}{{f{c}}}Bl}0{{{f{{AEf{c}}}}Ff}{}Bl}{{{f{{AEf{c}}}}}{{f{{Lh{{Fn{c}}}}}}}Bl}{{{f{{AEf{c}}}}}{{Fh{c}}}Bl}{{{f{{AEf{c}}}}}{}Bl}{ce{}{}}{{{f{{AEf{c}}}}{C`{Hh}}}{{Cf{Cd}}}Bl}{{{AEf{c}}{C`{Hh}}}{{AEf{c}}}Bl}0`{{{f{Cl{AFb{c}}}}}bBl}0{{{f{Cl{AFb{c}}}}{C`{c}}}bBl}{{{f{Cl{AFb{c}}}}c}bBl}{{{f{Cl{AFb{c}}}}{f{AEj}}}bBl}{{{f{Cl{AFb{c}}}}{f{AEj}}}{{Bd{bBb}}}Bl}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}{{AFb{c}}}Bl}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{AFb{c}}}{{l{{Bh{c}}}}}Bl}{cc{}}{{}Ff}{ce{}{}}{{{f{Ab}}Ff}{{AFb{c}}}Bl}{{{f{Cl{AFb{c}}}}}B`Bl}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4````{{{f{ClAFd}}}b}{{{f{ClAFd}}{C`{{f{AEj}}}}}b}{{{f{ClAFd}}{f{AEj}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}`?>={{{f{AFf}}{f{ClGl}}}{{Bd{bGn}}}}<{{{f{Ab}}Ff}{{Cf{AFd}}}}{{}{{Lh{Df}}}}{{}AEh}>={{}d}`{{{Cf{Df}}{Lh{Df}}AEh}b}{{{f{ClAFd}}}B`}==<{ce{}{}}``````````````````````````````````````````````{{{f{c}}h}b{}}00{{{f{{AFj{}{{AFh{c}}}}}}g}{{AFj{}{{AFh{c}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{c}}}}}}Dh}}{{{f{AFl}}{f{Df}}}AFl}{{{f{AFl}}{f{Df}}}{{l{c}}}Db}{{{f{{AFj{}{{AFh{c}}}}}}i{f{Cl{An{g}}}}}b{}{}{}{{Df{{C`{e}}{f{g}}}{{Dd{g}}}}}}{{{f{{AFj{}{{AFh{c}}}}}}g}{{AFj{}{{AFh{c}}}}}{}{}{{Df{e}{{Dd{c}}}}Dh}}{{{f{AFn}}Eh}{{l{Ej}}}}{{{f{AFn}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{AG`}}}{{Bd{{l{Ej}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{AGb}}{f{Ed}}}{{Bd{B`Bb}}}}0{{{f{AGb}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{Eh}}}Eh}{{{f{En}}}En}{{{f{AGd}}}AGd}{{{f{c}}{f{Cle}}}b{}{}}00{{}Eh}{{}En}{Ff{{f{c}}}{}}00{Ff{{f{Clc}}}{}}00``{Ffb}00{{{f{Eh}}{f{Eh}}}d}{{{f{En}}{f{En}}}d}{{{f{AGd}}{f{AGd}}}d}{{{f{{AGf{}{{Cb{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000{{{f{AGh}}}{{Bd{B`Bb}}}}{{{f{AGh}}}{{Bd{{Gj{B`{Gh{Gf}}}}Bb}}}}`{{{f{AGj}}c}{{Bd{AGjBb}}}{}}{{{f{AGl}}{f{{l{Aj}}}}}{{Bd{{l{c}}Bb}}}Db}`{{{f{Eh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{En}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{AGd}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{En}}}Eh}{{{f{Eh}}}En}22`{{{f{Ab}}cFf}AGn{}}{{{f{Ab}}Ff}AH`}`{{{f{AHb}}Ff}{{Bd{IhBb}}}}{{{f{AHb}}Ff}Ih}??{{{f{Eh}}{f{Clc}}}bAC`}{{{f{En}}{f{Clc}}}bAC`}{{{f{AGd}}{f{Clc}}}bAC`}{{}Ff}00{ce{}{}}00{{{f{AHd}}}{{Bd{{l{Aj}}Bb}}}}{{{f{AHf}}}{{Bd{{l{Aj}}Bb}}}}{{{f{{AGf{}{{Cb{c}}}}}}e}c{}{}}0``{{{f{AHh}}}{{C`{c}}}{}}{{{f{AHh}}}{{C`{Lf}}}}{{{f{AHj}}}{{C`{c}}}{}}2{{{f{AHh}}}{{C`{{Gj{cc}}}}}{}}``{{{f{AG`}}}{{Bd{FfBb}}}}{{}Eh}{{}En}{{{f{AHl}}FfFf}{{l{c}}}Db}88``{{{f{AGh}}}{{Bd{{Gh{Gf}}Bb}}}}{{{f{AHj}}LfNd}{{Bd{{C`{c}}Bb}}}{}}{{{f{AHn}}}B`}0{{{f{AI`}}}AI`}{{{f{AIb}}{f{Df}}Nf}{{Bd{B`Bb}}}}{{{f{AId}}c{C`{e}}}{{Bd{AIdBb}}}{{Hb{}{{Cb{Ij}}}}}{}}{{{f{AId}}ci}{{Bd{AIdBb}}}{{Hb{}{{Cb{Ij}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{g}}}}}}}}`{{{f{AId}}{f{{l{Aj}}}}{C`{c}}}{{Bd{AIdBb}}}{}}{{{f{AIf}}Gf}{{l{c}}}Db}{{{f{AIh}}Gfc}{{l{e}}}{}Db}{{{f{AIj}}FfFf}AIj}0`{{{f{AFn}}d}{{l{c}}}Db}{{{f{AFn}}Eh}{{l{c}}}Db}{{{f{AIl}}Al}{{C`{Lf}}}}{{{f{AHh}}}{{C`{c}}}{}}{{{f{AIn}}{f{c}}}{{Bd{AInBb}}}Nj}{{{f{AJ`}}{f{c}}}AJ`Nj}{{{f{AJb}}}{{Fn{{f{{An{Al}}}}}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}A@`{}}00{{{f{AG`}}}{{Bd{AG`Bb}}}}8{ce{}{}}00{{Ehd}Eh}{{End}En}1010{{Enc}En{{Hb{}{{Cb{d}}}}}}210{EhEh}{EnEn}`{{{f{AJd}}{f{{l{Aj}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DbDb{{Df{ff}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}Db}{{{l{c}}{l{e}}gik}{{l{m}}}DbDb{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DbDb{{AJf{C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}g}bDbDb{{Dn{C`C`}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDb{}{{Dn{}{{Dd{g}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Ab}}}{{l{k}}}DbDb{CdAJh}{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Ab}}}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DbDbCd{{Dn{}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDb{}{}{{Dn{C`C`}{{Dd{{Bd{{C`{g}}i}}}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DbDbDb{{AJj{C`C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDbCdAJl{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{H`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Ab}}}{{Bd{{l{m}}i}}}DbDbCdAJl{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DbDbAJl{{Dn{ff}{{Dd{{Bd{{Cf{Cd}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DbDbDb{}{}{{Dn{C`C`C`}{{Dd{{Bd{{C`{i}}k}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{CdAJh}AJl{{Dn{f}{{Dd{{Bd{eg}}}}}}}{{Db{}{{H`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Db{{AJn{C`}}}Db}{{{f{{l{c}}}}e}{{l{g}}}DbAJnDb}{{{f{{l{c}}}}g}{{l{i}}}DbCd{{Dn{f}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}{{{l{c}}g}{{l{i}}}DbCd{{Dn{}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{CdAJh}{{Dn{f}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}0{{{f{{l{c}}}}}FfAd}0{{KlKl}Kl}{{{f{{l{Ej}}}}Ij}{{Bd{bBb}}}}{{{f{{AK`{Ij}}}}Ij}{{Bd{bBb}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAKbd}{{Fn{Ij}}}Db{{Ch{}{{Cb{C`}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{AKb}}}AKb}{{{f{c}}{f{Cle}}}b{}{}}{{}AKb}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{AKb}}{f{AKb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AKb}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{AKb}}{f{Clc}}}bAC`}{{}Ff}{ce{}{}}{{{f{{An{f}}}}cIje}{{Fn{Ij}}}{{Ch{}{{Cb{C`}}}}}{{Df{fFff}{{Dd{d}}}}}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4`{{Ff{f{Cl{Fn{d}}}}}b}```{{{f{AIj}}FfFf}AIj}0{{Ff{f{{An{B`}}}}{f{ClEn}}}{{Bd{{AKd{{l{Ej}}}}Bb}}}}{{{f{{An{B`}}}}{f{{An{d}}}}{f{{An{d}}}}}{{Bd{AKfBb}}}}{{{f{Ab}}{f{{An{B`}}}}{f{{An{d}}}}{f{{An{d}}}}}{{Bd{{l{El}}Bb}}}}{{{f{Ab}}{f{{An{B`}}}}}{{Bd{{l{El}}Bb}}}}{{{f{B`}}}{{Bd{{Cf{Cd}}Bb}}}}{{{f{{An{B`}}}}}{{Bd{AKfBb}}}}{{{f{{An{B`}}}}}{{Bd{{l{El}}Bb}}}}0```````````77`{AKhGf}00{{{f{Ab}}}{{Bd{EfBb}}}}{{{f{Ab}}}{{Bd{AKjBb}}}}{{{f{AKl}}}Gf}{{{f{Ab}}}{{Bd{bBb}}}}444``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}000000000000000000000000000000000{{{f{AKn}}c}AKn{{Dn{{f{B`}}}{{Dd{B`}}}}}}{{{f{AL`}}}d}{{{f{Ih}}}{{`{{Ch{}{{Cb{Ih}}}}}}}}{{{f{Ih}}{f{Cl{Fn{Ih}}}}}b}{{AL`d}AL`}{{{f{{Jh{KbK`}}}}{f{{Jh{KbK`}}}}}}{{{f{Ih}}{f{Ih}}}Ih}{{{f{{l{Bn}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{l{A`}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{n}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Aj}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{AKn}}{f{Bj}}}B`}{{{f{ClALb}}{C`{{f{Ab}}}}}b}{{{f{ClAL`}}{f{AL`}}}{{Bd{bBb}}}}{{{f{ClALb}}}b}{{{f{ClALb}}{f{Ab}}}b}{{{f{AL`}}Eh}{{l{Ej}}}}{eALd{}{{Hb{}{{Cb{c}}}}}}0{{AEhe}ALf{}{{Hb{}{{Cb{c}}}}}}0{{{f{Ld}}}Ih}{{{f{Ih}}}Ih}{{{f{{Jh{JfJd}}}}}{{`{If}}}}{{{f{{Jh{JnJj}}}}}{{`{If}}}}{{{f{Ed}}}{{f{Ed}}}}{{{f{Mn}}}{{f{Ed}}}}{{{f{ALh}}}{{f{Ed}}}}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}{{C`{{f{{An{c}}}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{{Jh{KhJj}}}}}{{`{If}}}}{{{f{c}}}{{f{e}}}{}{}}000000000000000000000000000000000000000000{{{f{Clc}}}{{f{Cle}}}{}{}}000000000000000000000000000000000000000000{Ed{{Cf{Ed}}}}{{{AMd{Ab}}}AMf}{{{f{AL`}}{f{AL`}}c}{{Bd{AL`Bb}}}AMh}{{{f{AMj}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{Ih}}{f{Ed}}}Ih}{{{f{Ed}}Ed}Ed}{{{f{{Jh{JnJj}}}}Jl}{{Jh{JnJj}}}}{{{f{{Jh{KdJj}}}}Jl}{{Jh{KdJj}}}}{{{f{AMj}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jh{KhJj}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jh{KdJj}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jh{KbK`}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jh{JnJj}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jh{JfJd}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{AL`}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{AKn}}{f{Ed}}Fb}{{Bd{B`Bb}}}}`{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}00000000{{{f{{l{Eb}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{E`}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{AKn}}}{{f{{Fn{{Cf{Cd}}}}}}}}{{{f{{Jh{ce}}}}}{{Jh{ce}}}DbDb}{{{f{AMl}}}AMl}{{{f{AMf}}}AMf}{{{f{AL`}}}AL`}{{{f{AKn}}}AKn}{{{f{Ld}}}Ld}{{{f{AMn}}}AMn}{{{f{Ih}}}Ih}{{{f{AN`}}}AN`}{{{f{Ed}}}Ed}{{{f{Mn}}}Mn}{{{f{Jl}}}Jl}{{{f{M`}}}M`}{{{f{Mj}}}Mj}{{{f{Ej}}}Ej}{{{f{Md}}}Md}{{{f{Ll}}}Ll}{{{f{Mf}}}Mf}{{{f{Jd}}}Jd}{{{f{Jj}}}Jj}{{{f{Eb}}}Eb}{{{f{E`}}}E`}{{{f{Jf}}}Jf}{{{f{Kh}}}Kh}{{{f{A`}}}A`}{{{f{n}}}n}{{{f{El}}}El}{{{f{Aj}}}Aj}{{{f{Kb}}}Kb}{{{f{Jn}}}Jn}{{{f{Kd}}}Kd}{{{f{ANb}}}ANb}{{{f{AEh}}}AEh}{{{f{ANd}}}ANd}{{{f{c}}{f{Cle}}}b{}{}}000000000000000000000000000000000{{{f{ClMn}}Ed}b}{ANfe{}{{ALd{c}}AJh}}0{{ANfAEh}e{}{{ALf{c}}AJh}}0{{{f{Ed}}}d}00{{{AMd{Ab}}}Ed}{{{f{Mn}}}{{f{Ed}}}}{{{f{{Jh{KdJj}}}}}{{l{Jj}}}}{{}ANh}{{}AMl}{{}AMf}{{}Ih}{{}AN`}{{}Ed}{{}AEh}{Ff{{f{c}}}{}}00{{{f{{Jh{ce}}}}}fDbDb}1111111111111111111111111111111111111111{Ff{{f{Clc}}}{}}0{{{f{Cl{Jh{ce}}}}}{{f{Cl}}}DbDb}11111111111111111111111111111111111111111{{{f{{Jh{KbK`}}}}{f{{Jh{KbK`}}}}}}{{{f{{l{Bn}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{ALbc}AL`{{Hb{}{{Cb{{C`{{f{Ab}}}}}}}}}}{Ffb}0000000000000{{{f{ClAKn}}}b}11111111111111111111111111111{{{f{AMj}}}{{f{Ed}}}}{{{f{{Jh{JfJd}}}}}{{f{Ed}}}}{{{f{{Jh{KbK`}}}}}{{f{Ed}}}}{{{f{{Jh{KhJj}}}}}{{f{Ed}}}}{{{f{{Jh{JnJj}}}}}{{f{Ed}}}}{{{f{{Jh{KdJj}}}}}{{f{Ed}}}}{{{f{AL`}}}{{f{Ed}}}}{{{f{AKn}}}{{f{Ed}}}}{{{f{Ld}}}{{f{Ed}}}}{{{f{Ih}}}Ed}`{{{f{AMl}}{f{AMl}}}d}{{{f{Ih}}{f{Ih}}}d}{{{f{AN`}}{f{AN`}}}d}{{{f{Ed}}{f{Ed}}}d}{{{f{Ed}}{f{AEh}}}d}{{{f{Mn}}{f{Mn}}}d}{{{f{Jl}}{f{Jl}}}d}{{{f{AEh}}{f{AEh}}}d}{{{f{ANd}}{f{ANd}}}d}{{{f{Ih}}{f{Ih}}d}d}{{{f{AL`}}{f{Ab}}}}{{{f{AL`}}{f{{l{A`}}}}}}{{{f{AL`}}{f{AL`}}}}{{{f{AKn}}{f{AKn}}}{{l{Aj}}}}2130{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{{Jh{ce}}}}}MnDbDb}{{{f{AKn}}{f{Ab}}}{{Bd{B`Bb}}}}{{{f{AKn}}}{{f{{An{B`}}}}}}{{{f{ClAKn}}}{{f{Cl{Fn{B`}}}}}}{{{f{AMf}}{f{Ab}}}{{C`{Ij}}}}{{AMh{f{{l{Ej}}}}{f{{l{Ej}}}}}{{Bd{{l{Ej}}Bb}}}}{ALbAL`}{ANh{{Lh{AMf}}}}{{{f{AMl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{AMf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{AMn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Ih}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{AN`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Ed}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{Mn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Jl}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{AEh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{ANd}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}00{{{l{Jj}}}{{Jh{KhJj}}}}{{{l{Jd}}}{{Jh{JfJd}}}}22222222222222{cIhANj}{{{f{Ab}}}Ih}{{{C`{c}}}Ih{{ANl{Ih}}}}{{{f{{An{Al}}}}}Ih}{dIh}77{{{f{AEh}}}Ed}{IhEd}{{{f{Ih}}}Ed}:{{{f{Ih}}}Mn}{{{f{ANn}}}Mn}{{{f{ANd}}}Jl}======================{AO`AEh}{AObAEh}?{{{f{AEh}}d}Ed}{{{l{Ej}}{Lh{AMf}}dAMl}AL`}{{{f{Ab}}cJl}{{Jh{KdJj}}}{{Hb{}{{Cb{AOd}}}}}}{{{f{Ab}}cJl}{{Jh{KdJj}}}{{Hb{}{{Cb{{C`{AOd}}}}}}}}{{{l{Ej}}AMl}AL`}{{{f{Ab}}c}{{Jh{JfJd}}}{{Hb{}{{Cb{AOf}}}}}}{{{f{Ab}}c}{{Jh{JfJd}}}{{Hb{}{{Cb{{C`{AOf}}}}}}}}{{{f{Ab}}cJl}{{Jh{JnJj}}}{{Hb{}{{Cb{AKh}}}}}}{{{f{Ab}}cJl}{{Jh{JnJj}}}{{Hb{}{{Cb{{C`{AKh}}}}}}}}{{{f{Ab}}c}{{Jh{KhJj}}}{{Hb{}{{Cb{AKl}}}}}}{{{f{Ab}}c}{{Jh{KhJj}}}{{Hb{}{{Cb{{C`{AKl}}}}}}}}{{{AOj{AOh}}Ed}Mn}{{{f{{l{A`}}}}{f{{AMd{Ab}}}}AMl}{{Bd{AL`Bb}}}}{{{Fn{c}}AEh}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{Fn{c}}AEh}{{AJh{}{{ALj{e}}{ALl{c}}{ALn{g}}}}}{AM`{AMb{e}}}ABj{{Gb{}{{Cb{e}}}}IfI`Ib}}{{FfcAEh}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{FfAEh}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{Ab}}dFfAMl}AL`}{{{f{Ab}}Ff}AKn}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}Ff}{{C`{c}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{AMf}}Ij}{{f{Ab}}}}{{{f{{Jh{KbK`}}}}Ff}{{Bd{IhBb}}}}{{{f{{Jh{JfJd}}}}Ff}{{Bd{IhBb}}}}{{{f{{Jh{KhJj}}}}Ff}{{Bd{IhBb}}}}{{{f{{Jh{KdJj}}}}Ff}{{Bd{IhBb}}}}{{{f{{Jh{JnJj}}}}Ff}{{Bd{IhBb}}}}{{{f{AMj}}Ff}{{Bd{IhBb}}}}{{{f{AL`}}Ff}{{Bd{IhBb}}}}{{{f{AKn}}Ff}{{Bd{IhBb}}}}{{{f{{Jh{JfJd}}}}Ff}Ih}{{{f{{Jh{JnJj}}}}Ff}Ih}{{{f{{Jh{KdJj}}}}Ff}Ih}{{{f{{Jh{KhJj}}}}Ff}Ih}{{{f{{Jh{KbK`}}}}Ff}Ih}{{{f{AMj}}Ff}Ih}{{{f{AL`}}Ff}Ih}{{{f{AKn}}Ff}Ih}{{{f{AMf}}}{{f{{AMd{Ab}}}}}}{{}Ed}000000000000000000000000{{{f{AMf}}Ij}{{C`{{f{Ab}}}}}}{{{f{AL`}}}{{f{{Lh{AMf}}}}}}{{{f{Ed}}}{{C`{{Fn{Ff}}}}}}{{{f{Ih}}}{{C`{{f{Ab}}}}}}{{{f{AOl}}Ff}Ih}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}Ff}{{C`{c}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{AL`}}{f{{l{A`}}}}}}{{{f{AL`}}{f{AL`}}}}{{{f{AL`}}{f{Ab}}}}{{{f{AKn}}{f{AKn}}}{{l{Aj}}}}2310{{{f{Ih}}{f{Clc}}}bAC`}{{{f{AN`}}{f{Clc}}}bAC`}{{{f{Ed}}{f{Clc}}}bAC`}{{{f{Mn}}{f{Clc}}}bAC`}{{{f{Jl}}{f{Clc}}}bAC`}{{{f{AEh}}{f{Clc}}}bAC`}{{{f{ANd}}{f{Clc}}}bAC`}{{{f{Ih}}{f{Clc}}d}bAC`}{{{f{{Jh{KhJj}}}}}{{l{Ll}}}}{{{f{{Jh{KdJj}}}}}{{l{Jj}}}}{EdEd}{{}Ff}000000000000000000000000000000000000000000{{{f{Ed}}}{{C`{{f{Ed}}}}}}{{{f{AEh}}}{{C`{{f{AEh}}}}}}{ce{}{}}0000000000000000000000000000000000000000000{{{f{AKn}}}}{{{Jh{KhJj}}}B`}{{{Jh{JnJj}}}B`}{{{Jh{KdJj}}}B`}{{{Jh{JfJd}}}B`}{{{Jh{KbK`}}}B`}{AL`B`}{AKnB`}{{Ld{f{Ab}}}B`}{Ih{{Bd{IhBb}}}}{{{f{Ed}}}d}00{{{f{Ih}}}d}11{{{f{AL`}}}d}{{{f{AKn}}}d}1323{{{f{AMf}}}d}34440443434344443444434{{{f{AEh}}}d}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}{{AF`{cgAEn}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{AKn}}}ADd}{{{f{AL`}}}AOn}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}{{C`{c}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{Ed}}}{{f{Ed}}}}{{{f{AMf}}}Ff}{{{f{AL`}}}Ff}{{{f{AKn}}}Ff}{{{f{AL`}}{f{Ab}}}}{{{f{AL`}}{f{AL`}}}}{{{f{AL`}}{f{{l{A`}}}}}}{{{f{AKn}}{f{AKn}}}{{l{Aj}}}}2310{{{f{AL`}}{f{AL`}}}{{Bd{{Gj{AL`AL`}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gj{{l{j}}{l{j}}}}Bb}}}}{{{f{Ed}}{f{Ed}}}{{Bd{dBb}}}}{{{f{AN`}}}{{C`{Ed}}}}{{{f{AL`}}}Ld}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}{{{f{ClANh}}{f{{Lh{AMf}}}}}{{Bd{bBb}}}}{{{f{{Jh{KdJj}}}}}{{l{Jj}}}}03{{{f{{Jh{KhJj}}}}}{{l{Ll}}}}1{{{f{{Jh{KbK`}}}}{f{{Jh{KbK`}}}}}}{{{f{{l{Bn}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{AL`}}}{{Bd{FfBb}}}}{{{f{AL`}}}{{f{Ab}}}}{{{f{AKn}}}{{f{{AOj{AOh}}}}}}{{{f{Mn}}}{{f{{AOj{AOh}}}}}}`{{{f{{Jh{KhJj}}}}}{{l{Jd}}}}9{{}c{}}0{{{f{Ab}}FfAMl}ALb}{{{f{Ab}}c}{{Jh{JnJj}}}{{Hf{{An{{C`{AKh}}}}}}}}{{{f{Ab}}c}{{Jh{KdJj}}}{{Hf{{An{{C`{AOd}}}}}}}}{{{f{Ab}}c}{{Jh{KhJj}}}{{Hf{{An{{C`{AKl}}}}}}}}{{{f{Ab}}c}{{Jh{KhJj}}}{{Hf{{An{AKl}}}}}}{{{f{Ab}}c}{{Jh{JfJd}}}{{Hf{{An{AOf}}}}}}{{{f{Ab}}c}{{Jh{KdJj}}}{{Hf{{An{AOd}}}}}}{{{f{Ab}}c}{{Jh{JnJj}}}{{Hf{{An{AKh}}}}}}{{{f{Ab}}c}{{Jh{JfJd}}}{{Hf{{An{{C`{AOf}}}}}}}}{{{Lh{AMf}}}ANh}{{{f{Ab}}{f{{An{B`}}}}}{{Bd{AKnBb}}}}{{EdIh}Ld}{{{f{Ab}}Ed}Mn}{{{l{c}}}{{Jh{ec}}}DbDb}{{{f{ClAOn}}}C`}{{{f{AL`}}{f{{l{A`}}}}}}{{{f{AL`}}{f{Ab}}}}{{{f{AL`}}{f{AL`}}}}{{{f{AKn}}{f{AKn}}}{{l{Aj}}}}2310{{{f{AL`}}}Ff}{{{f{AKn}}}Ff}{{{f{Ab}}{f{{An{{f{Ab}}}}}}{f{Ab}}}{{Jh{KhJj}}}}{{{f{Ab}}{f{{An{{f{Ab}}}}}}{f{Ab}}}{{Jh{JfJd}}}}{{{f{Ih}}{f{Ih}}}{{C`{B@`}}}}{{{f{Jl}}{f{Jl}}}{{C`{B@`}}}}{{{f{AL`}}}{{f{{l{Ej}}}}}}{{{f{{Jh{KbK`}}}}}{{C`{Ff}}}}{{{f{ClAKn}}}b}{{{f{AKn}}}{{f{Mn}}}}{{{f{ClALb}}{f{Ab}}}{{Gj{Ijd}}}}{{{f{{l{Bn}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{ClAKn}}{f{Ab}}}b}{{{f{{Jh{JnJj}}}}{f{{l{A`}}}}{C`{{f{AKj}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{{Jh{JfJd}}}}{f{{l{A`}}}}{C`{{f{AKj}}}}}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{AKn}}}{{Bd{{l{El}}Bb}}}}{{{f{AMf}}{f{AMf}}}d}{{{f{{Jh{KbK`}}}}}Ff}{{{f{{Jh{KhJj}}}}}{{l{Ll}}}}{{{f{{Jh{KdJj}}}}}{{l{Jj}}}}{{{f{ClMn}}{AOj{AOh}}}b}{{{f{Cl{Jh{JnJj}}}}Jl}b}{{{f{Cl{Jh{KdJj}}}}Jl}b}{{{f{Cl{Jh{JnJj}}}}JlEf}{{Bd{bBb}}}}{{{f{Cl{Jh{JnJj}}}}Ef}{{Bd{bBb}}}}{{{f{AOn}}}{{Gj{Ff{C`{Ff}}}}}}{{{f{AL`}}d}AL`}{{{f{AL`}}Eh}AL`}{{{f{{Jh{KhJj}}}}{f{Ab}}}{{l{A`}}}}{{{f{{Jh{JfJd}}}}{f{Ab}}}{{l{A`}}}}{{{f{{Jh{JnJj}}}}{f{Ab}}}{{Bd{{l{A`}}Bb}}}}{{{f{Ih}}{f{Ed}}}{{C`{Ih}}}}{{{f{{Jh{KbK`}}}}{f{{Jh{KbK`}}}}}}{{{f{{l{Bn}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{Jh{KdJj}}}}}Jl}{{{f{{Jh{JnJj}}}}}Jl}{{{f{{Jh{JnJj}}}}}{{f{{C`{Ef}}}}}}{{{f{AL`}}dd}{{Cf{Cd}}}}{{{f{Ed}}d}AEh}{{{f{Mn}}d}ANn}{JlANd}{{{f{Ed}}{f{Ab}}d}ANn}{Jl{{f{Ab}}}}{{{f{AL`}}{f{{AMd{Ab}}}}B@b}AL`}{{{f{AL`}}}{{Bd{AL`Bb}}}}{{{f{AL`}}}AL`}{{{f{AEh}}}{{f{AEh}}}}{{{f{c}}}e{}{}}000000000000000000000000000000000{{{f{Ed}}}Ed}{{{f{AEh}}}B@d}{{{f{{Jh{JfJd}}}}{f{Ab}}}{{l{A`}}}}{{{f{{Jh{KhJj}}}}{f{Ab}}}{{l{A`}}}}{{{f{{Jh{JnJj}}}}{f{Ab}}}{{Bd{{l{A`}}Bb}}}}{{{f{c}}}Ef{}}00{{{f{Ih}}{f{Ih}}}d}{{{f{AKn}}}Ff}{{{f{{Jh{JfJd}}}}{C`{{f{AKj}}}}{f{{l{A`}}}}}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{{Jh{JnJj}}}}{C`{{f{AKj}}}}{f{{l{A`}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{g{{Bd{ALde}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{{AEhg}{{Bd{ALfe}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{ANf{{Bd{eg}}}{}{{ALd{c}}AJh}{}}0{{ANfAEh}{{Bd{eg}}}{}{{ALf{c}}AJh}{}}0{{{f{Ih}}}{{Bd{cBb}}}Lb}{c{{Bd{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{Ih}}{f{Ed}}}{{Bd{IhBb}}}}{{{f{Ed}}d}{{Bd{AEhBb}}}}{{{f{c}}}A@`{}}000000000000000000000000000000000000000000{{{f{AEh}}}AEh}{{{f{AL`}}}{{Bd{AL`Bb}}}}{AKnB@f}{{{f{ClLd}}Ih}b}{{{f{AL`}}}d}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}Ff}cABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{Ld}}}{{f{Ih}}}}{{{f{AL`}}}{{Bd{B@fBb}}}}2{{{f{Ed}}Ih}d}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}gABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{ce{}{}}000000000000000000000000000000000000000000{Ffc{}}0{{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}{C`{Hh}}}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{Ed}}}Ih}```````````{{{f{AL`}}{f{AL`}}c}{{Bd{AL`Bb}}}AMh}{{AMh{f{{l{Ej}}}}{f{{l{Ej}}}}}{{Bd{{l{Ej}}Bb}}}}{{{f{AL`}}{f{AL`}}}{{Bd{{Gj{AL`AL`}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gj{{l{j}}{l{j}}}}Bb}}}}`````````{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}B@h}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{{}b}{Ffb}{{{f{ClB@h}}}b}2{cc{}}6{{}Ff}{ce{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}{{}d}3``````````````````````````{{{f{B@j}}}{{f{Ab}}}}>>>===`{{BbB@j}Bb}{BbBb}=={{{f{B@j}}}f}>===;;;`{{{f{B@l}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{B@j}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{Bb}}{f{ClGl}}}{{Bd{bGn}}}}0<{cB@j{{ANl{{Dj{Ab}}}}}}={B@nBb}{BA`Bb}{BAbBb}{BAdBb}{BAfBb}{cc{}}{BAhBb}{{}{{Fj{{f{Ab}}B@l}{{Dd{b}}}}}}{{}Ff}00{ce{}{}}00{cBbAJl}````{{{Fj{{f{Ab}}B@l}{{Dd{b}}}}}b}{cBbBAj}{{{f{c}}}Ef{}}0{c{{Bd{e}}}{}{}}00000{{{f{c}}}A@`{}}00666``````````````````{{{f{c}}h}b{}}00{{{f{ClB@f}}{Fn{B`}}{f{BAl}}}{{Bd{bBb}}}}{{{f{B@f}}{f{Df}}}{{Fn{B`}}}}0{{{f{B@f}}{f{{l{Aj}}}}}{{Bd{B@fBb}}}}{{{f{B@f}}{f{{An{{AOj{AOh}}}}}}}{{Bd{B@fBb}}}}0{{{f{B@f}}GfFf}B@f}{{{f{ClB@f}}}{{f{ClB@f}}}}{{{f{ClB@f}}{f{Ab}}e}{{Bd{{f{ClB@f}}Bb}}}BAn{{A@d{{f{B`}}}{{Dd{c}}}}}}{{{f{ClB@f}}Ffe}{{Bd{{f{ClB@f}}Bb}}}BAn{{A@d{{f{B`}}}{{Dd{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Clc}}}{{f{Cle}}}{}{}}0000{{{f{B@f}}}{{`{{Ch{}{{Cb{Ff}}}}}}}}{{{f{B@f}}}B@f}{{{f{BB`}}}BB`}{{{f{BBb}}}BBb}2{{{f{c}}{f{Cle}}}b{}{}}00{{{f{B@f}}{f{Ab}}}{{Bd{{f{B`}}Bb}}}}{{{f{B@f}}e}{{Bd{{Fn{{f{B`}}}}Bb}}}{{Hf{Ab}}}{{Hb{}{{Cb{c}}}}}}{{}BBb}{{}B@f}{Ff{{f{c}}}{}}0000{Ff{{f{Clc}}}{}}0000{Ffb}0000{{{f{B@f}}{f{Ab}}}{{Bd{B@fBb}}}}{{{f{ClB@f}}{f{Ab}}}{{Bd{B`Bb}}}}{{{f{B@f}}{f{{An{c}}}}}B@f{{Hf{Ab}}}}{{{f{B@f}}{f{{BBd{{f{Ab}}O`}}}}}B@f}{{{f{B@f}}{C`{{f{{An{c}}}}}}}{{Bd{B@fBb}}}{{Hf{Ab}}}}{{{f{B@f}}}{{Fn{Ed}}}}9{{{f{BBb}}{f{BBb}}}d}{{{f{B@f}}{f{B@f}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{B@f}}}Ff}`{{{f{B@f}}e}{{Bd{B@fBb}}}{{Hf{Ab}}}{{Hb{}{{Cb{c}}}}}}{{{f{B@f}}{Fn{B`}}}{{Bd{B@fBb}}}}{{{f{ClB@f}}{f{B@f}}}{{Bd{bBb}}}}{{{f{B@f}}}{{Fn{Mn}}}}{{{f{B@f}}AGd}{{Bd{B@fBb}}}}{{{f{B@f}}{f{{l{Aj}}}}}{{Bd{B@fBb}}}}{{{f{BB`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BBb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{B@f}}{f{ClGl}}}{{Bd{bGn}}}}0{cc{}}0000{{{f{BAl}}}B@f}{AKnB@f}{{{f{BBf}}}B@f}{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}{cB@f{{Hb{}{{Cb{B`}}}}}}{{{f{{An{BBh}}}}}{{Bd{B@fBb}}}}{{{f{{An{BBh}}}}{f{BAl}}}{{Bd{B@fBb}}}}{{c{f{BAl}}}{{Bd{B@fBb}}}{{Ch{}{{Cb{{f{BBh}}}}}}}}{{{f{B@f}}Ff}{{C`{{Fn{Ih}}}}}}{{{f{B@f}}{f{Ab}}}{{C`{Ff}}}}{{{f{B@f}}}{{Fn{{f{Ab}}}}}}{{{f{B@f}}}{{Fn{{AOj{AOh}}}}}}{{{f{B@f}}}{{f{{An{B`}}}}}}{{{f{ClB@f}}}{{f{Cl{Fn{B`}}}}}}{{{f{B@f}}Ff}{{Bd{BBhBb}}}}{{{f{B@f}}Ff{f{ClBBh}}}{{Bd{bBb}}}}{{{f{B@f}}Ff{f{ClBBh}}}b}{{{f{B@f}}}{{C`{{Bd{EdBb}}}}}}`{{{f{B@f}}e}{{Bd{BBjBb}}}{{Hf{Ab}}}{{Hb{}{{Cb{c}}}}}}{{{f{B@f}}{Fn{B`}}{f{BBl}}}{{Bd{{Gj{B`{Fn{B`}}Bj}}Bb}}}}1{{{f{B@f}}{Fn{B`}}dd}{{Bd{BBjBb}}}}{{{f{BBb}}{f{Clc}}}bAC`}{{{f{B@f}}{C`{Ff}}}B@f}{{{f{B@f}}}Ff}{{{f{B@f}}{f{{An{B`}}}}}{{Bd{B@fBb}}}}{{{f{ClB@f}}{f{{An{B`}}}}}{{Bd{{f{ClB@f}}Bb}}}}{{{f{ClB@f}}{f{{An{B`}}}}}{{f{ClB@f}}}}{{{f{B@f}}Ff}f}{{{f{B@f}}{BBn{Ff}}}f}{{{f{B@f}}{Lj{Ff}}}f}{{{f{B@f}}{BC`{Ff}}}f}{{{f{B@f}}{BCb{Ff}}}f}{{{f{B@f}}{f{Ab}}}f}{{{f{B@f}}{BCd{Ff}}}f}{{{f{B@f}}BCf}f}{{}Ff}0000{{{f{ClB@f}}Ffc}{{Bd{{f{ClB@f}}Bb}}}BAn}{ce{}{}}000000{{B@f{f{Ab}}}AKn}{{{f{B@f}}}{{Bd{{l{Aj}}Bb}}}}{{{f{B@f}}}d}1{{{f{B@f}}}{{Fh{B`}}}}{{{f{B@f}}}{{`{{Ch{}{{Cb{B@f}}}}}}}}{{{f{B@f}}d}BCh}{{{f{B@f}}}BCj}{B@fBCl}{{{f{B@f}}}Ff}{{{f{B@f}}}{{Bd{{C`{B`}}Bb}}}}{{{f{B@f}}BB`}{{Bd{{C`{B`}}Bb}}}}{{{f{B@f}}ce}{{Bd{B@fBb}}}{{BCn{{AOj{AOh}}}}}{{BCn{{AOj{AOh}}}}}}{{{f{B@f}}BD`}{{Bd{B@fBb}}}}344{{{Fn{c}}}{{Bd{B@fBb}}}BAn}{{{Fn{B`}}}B@f}{{{Fn{B`}}}{{Bd{B@fBb}}}}{{{f{ClBCh}}}C`}{{{f{ClBCj}}}C`}{{{f{B@f}}}B@f}{{B@fe}{{Bd{cBb}}}{}{{Df{B@f}{{Dd{{Bd{cBb}}}}}}}}{{{f{ClB@f}}e}{{Bd{cBb}}}{}{{Df{{f{ClB@f}}}{{Dd{{Bd{cBb}}}}}}}}{{B@fgc}{{Bd{eBb}}}{}{}{{Df{B@fc}{{Dd{{Bd{eBb}}}}}}}}{{{f{ClB@f}}}{{C`{B`}}}}{{{f{B@f}}{f{B@f}}}d}{{{f{ClB@f}}{f{Ab}}{f{Ab}}}{{Bd{{f{ClB@f}}Bb}}}}{{{f{ClB@f}}{f{Ab}}c}{{Bd{{f{ClB@f}}Bb}}}BAn}{{{f{ClB@f}}Ffc}{{Bd{{f{ClB@f}}Bb}}}BAn}18{{{f{B@f}}{Fn{B`}}{f{BDb}}}{{Bd{{Gj{B`{Fn{B`}}Bj}}Bb}}}}`{{{f{B@f}}{f{B`}}dd{C`{Jb}}}{{Bd{B@fBb}}}}0{{{f{B@f}}Ffdd{C`{Jb}}}{{Bd{B@fBb}}}}{{{f{B@f}}}BAl}{{{f{B@f}}{f{B@f}}}{{Bd{bBb}}}}{{{f{B@f}}e}{{Bd{B@fBb}}}{{Hf{Ab}}}{{Hb{}{{Cb{c}}}}}}{{{f{B@f}}Ff}{{C`{{f{B`}}}}}}{{{f{B@f}}c}{{Bd{B@fBb}}}{{BDd{Ff}}}}2{{{f{B@f}}c}{{Bd{{Fn{B`}}Bb}}}{{BCn{{AOj{AOh}}}}}}{{{f{B@f}}e{f{{Lh{BAl}}}}}{{Bd{B@fBb}}}{{Hf{Ab}}}{{Hb{}{{Cb{c}}}}}}{{{f{B@f}}e{f{BAl}}}{{Bd{B@fBb}}}{{Hf{Ab}}}{{Hb{}{{Cb{c}}}}}}{{{f{ClB@f}}{f{{An{c}}}}}{{Bd{bBb}}}{{Hf{Ab}}}}{{{f{B@f}}}{{Gj{FfFf}}}}{{{f{B@f}}Gf}B@f}{{{f{B@f}}}d}{{{f{ClB@f}}}b}{{{f{BCh}}}{{Gj{Ff{C`{Ff}}}}}}{{{f{BCj}}}{{Gj{Ff{C`{Ff}}}}}}{{{f{B@f}}GfFf}B@f}00{{{f{B@f}}cEn}{{Bd{B@fBb}}}{{BCn{{AOj{AOh}}}}}}{{{f{ClB@f}}cEn}{{Bd{{f{ClB@f}}Bb}}}{{BCn{{AOj{AOh}}}}}}{{{f{B@f}}Gf}{{Gj{B@fB@f}}}}0{{{f{ClB@f}}}{{`{{Ch{}{{Cb{B@f}}}}}}}}{{B@fFfd}{{Fn{B@f}}}}{{{f{B@f}}BB`}{{Bd{{C`{B`}}Bb}}}}{{{f{B@f}}{C`{Ff}}}B@f}{{{f{B@f}}{f{{l{Ej}}}}}{{Bd{B@fBb}}}}{{{f{B@f}}{f{{l{Ej}}}}}B@f}{{{f{B@f}}{f{{l{Ej}}}}d}B@f}{{{f{B@f}}}{{f{B@f}}}}{{{f{B@f}}BDf}{{Bd{{Oj{Od{Oh{{Of{Ff}}}}}}Bb}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Ef{}}{{{f{B@f}}FfcEn}{{Bd{B@fBb}}}{{BCn{{AOj{AOh}}}}}}{{{f{ClB@f}}{C`{{f{Ab}}}}{C`{{On{Ef{Fn{Ef}}}}}}}{{Bd{B@fBb}}}}{{{f{ClB@f}}{f{Ab}}e}{{Bd{{f{ClB@f}}Bb}}}BAn{{A@d{{f{B`}}}{{Dd{{Bd{cBb}}}}}}}}{{{f{ClB@f}}Ffe}{{Bd{{f{ClB@f}}Bb}}}BAn{{A@d{{f{B`}}}{{Dd{{Bd{cBb}}}}}}}}{c{{Bd{e}}}{}{}}000{BDh{{Bd{B@fBb}}}}{{{Gj{{BDj{{Cf{Cd}}}}{f{{An{ANn}}}}}}}{{Bd{B@fBb}}}}2{{c{f{BAl}}}{{Bd{B@fBb}}}{{Ch{}{{Cb{{Bd{{f{BBh}}Bb}}}}}}}}{{{f{B@f}}{f{Ab}}}{{Bd{FfBb}}}}44444{{{f{c}}}A@`{}}0000{{{f{B@f}}{C`{{f{{An{Ef}}}}}}BBb{C`{{Gj{GfFf}}}}}{{Bd{B@fBb}}}}{{{f{B@f}}d{C`{{f{{An{Ef}}}}}}BBb{C`{{Gj{GfFf}}}}}{{Bd{B@fBb}}}}1{{{f{B@f}}c}{{Bd{B@fBb}}}{{BCn{Ef}}}}{{{f{B@f}}c{f{Ab}}BDl}{{Bd{B@fBb}}}{{BCn{Ef}}}}0{{{f{B@f}}{f{B@f}}}{{Bd{B@fBb}}}}{{{f{ClB@f}}{f{B@f}}}{{Bd{{f{ClB@f}}Bb}}}}{ce{}{}}0000{{{f{B@f}}}Ff}{{{f{ClB@f}}c}{{Bd{{f{ClB@f}}Bb}}}BAn}{{{f{ClB@f}}c{f{BAl}}}{{Bd{{f{ClB@f}}Bb}}}BAn}{{{f{ClB@f}}B`}{{f{ClB@f}}}}{{{f{B@f}}{f{Ab}}{C`{Ij}}}{{Bd{B@fBb}}}}{{{f{ClB@f}}{f{Ab}}{C`{Ij}}}{{f{ClB@f}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{BD`}}}BD`}{{{f{c}}{f{Cle}}}b{}{}}{{}BD`}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{BD`}}{f{BD`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BD`}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{BD`}}{f{Clc}}}bAC`}`{{}Ff}{ce{}{}}`{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}```3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BBj}}}{{Bd{B@fBb}}}}`{{{f{BDn}}}{{f{{An{{BE`{Ij}}}}}}}}{{{f{BBj}}c}{{Bd{B@fBb}}}{{Dn{B@f}{{Dd{{Bd{B@fBb}}}}}}I`Ib}}{{{f{Bj}}}{{l{j}}}}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Clc}}}{{f{Cle}}}{}{}}0000000{{{f{BDn}}}BDn}{{{f{Bj}}}Bj}{{{f{BBj}}}BBj}{{{f{BEb}}}BEb}{{{f{c}}{f{Cle}}}b{}{}}000:{{}BDn}{{}Bj}{Ff{{f{c}}}{}}000{{{f{BEd}}}f}1111{Ff{{f{Clc}}}{}}0000000`{{BEfc}{}BEh}{Ffb}0000{{{f{ClBDn}}}b}111{{{f{BDn}}{f{BDn}}}d}{{{f{Bj}}{f{Bj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BEj}}}Ij}{{{f{BDn}}}{{f{{An{Ij}}}}}}{{{f{BBj}}}{{Bd{B@fBb}}}}{{{f{ClBDn}}}{{f{Cl{Fn{Ij}}}}}}{{{f{BDn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Bj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BBj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BEb}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{Ab}}BEb}Ef}{cc{}}0000{{{Fn{{Gj{Ij{BE`{Ij}}}}}}}BDn}{{{Fn{{Gj{{Fn{Ij}}{Fn{{BE`{Ij}}}}}}}}}BDn}{{{Fn{{Fn{{Gj{Ij{BE`{Ij}}}}}}}}}BDn}{BDnBj}44{BElBEb}5{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}{cBDn{{Hb{}{{Cb{{Gj{Ij{BE`{Ij}}}}}}}}}}{cBDn{{Hn{}{{Cb{{Gj{Ij{BE`{Ij}}}}}}}}}}{{{f{Bj}}Ff}BEj}{{{f{BBj}}}{{f{Bj}}}}{{{f{ClBBj}}}{{f{ClBj}}}}{{{f{Bj}}}{{l{Ej}}}}{{{f{BEn}}dd}{{Bd{BjBb}}}}{{{f{BBj}}}{{Bd{B@fBb}}}}{{{f{ClBj}}}{{f{ClBDn}}}}{{}Ff}0000000{ce{}{}}0000000{BjBDn}1{{{f{BDn}}}}{BDn}310{{{f{BEj}}}d}{{{f{Bj}}}d}{{{f{BDn}}}d}{{{f{BDn}}}{{BFb{{BF`{{Fh{Ij}}}}{Fh{{BE`{Ij}}}}}}}}{{{f{Bj}}}BFd}{{{f{BBj}}}{{Fn{B`}}}}{{{f{BBj}}{C`{{Gj{GfFf}}}}}{{Fn{B`}}}}={{{f{BEj}}}Ff}{{{f{Bj}}}Ff}?????{{{Fn{Ij}}{Fn{{BE`{Ij}}}}d}BDn}{{{f{B@f}}{Fn{B`}}Bj{C`{{Fn{Ef}}}}}BBj}{{{f{ClBFd}}}C`}{{{f{ClBFd}}Ff}C`}{{{f{BBj}}c}{{Bd{B@fBb}}}{{Df{B@f}{{Dd{{Bd{B@fBb}}}}}}I`Ib}}{{{f{c}}}{}{}}{{{f{Bj}}}BEf}{{{f{BBj}}LfNd}{{Bd{B@fBb}}}}{{BBje}BBj{{Hf{Ab}}}{{Hb{}{{Cb{c}}}}}}{{{f{Bj}}GfFf}BEd}{{{f{ClBDn}}}b}{{{f{ClBj}}}b}{{{f{BBj}}Al}{{Bd{B@fBb}}}}{{{f{BBj}}}{{Bd{B@fBb}}}}{Bj{{Fn{Ij}}}}0{BBjBj}{{{f{ClBBj}}}Bj}{{{f{c}}}e{}{}}000{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}000000000000000{{{f{c}}}A@`{}}0000000{BjBj}{{{f{Bj}}}{{f{BDn}}}}{{{f{Bj}}}{{f{{Fn{{Of{Ij}}}}}}}};{ce{}{}}0000000`````{{{f{BDn}}c}B`{{Df{{Gj{Ij{f{{BE`{Ij}}}}}}}{{Dd{C`}}}}I`Ib}}{{{f{BDn}}c}B`{{Df{{Gj{Ij{f{{BE`{Ij}}}}}}}{{Dd{}}}}I`Ib}}{{{f{{An{{Of{Ij}}}}}}c}B`{{Df{{Of{Ij}}}{{Dd{C`}}}}I`Ib}}{{{f{{An{{Of{Ij}}}}}}c}B`{{Df{{Of{Ij}}}{{Dd{}}}}I`Ib}}{{{f{{An{c}}}}e{C`{{Lh{AEj}}}}}{{AK`{c}}}{BFfBFh}{{Ch{}{{Cb{{Gj{IjIj}}}}}}If}}{{{f{{An{c}}}}{f{Hh}}e{C`{{Lh{AEj}}}}}{{AK`{c}}}{BFfBFh}{{Ch{}{{Cb{{Gj{IjIj}}}}}}If}}{{{f{{l{c}}}}IjIj}{{l{c}}}Db}{{{f{{Fn{{Of{Ij}}}}}}{f{{An{{Cf{Cd}}}}}}}d}{{{f{BFj}}{f{Bj}}}B`}{{BFlBFl}BFl}0`{{{f{BFn}}{f{B@f}}{f{Bj}}}{{Bd{B`Bb}}}}{{{f{BFn}}}{{Bd{{f{Ab}}Bb}}}}````````````````````````````````````{{{f{c}}h}b{}}00{{{f{ClBG`}}Ih}{{C`{b}}}}{{{f{ClBGb}}{f{Ih}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{BG`}}}BG`}{{{f{BGb}}}BGb}{{{f{BBh}}}BBh}{{{f{c}}{f{Cle}}}b{}{}}00{{{f{{An{c}}}}}Ed{{Hl{Ed}}}}{{}BBh}{Ff{{f{c}}}{}}00{Ff{{f{Clc}}}{}}00{Ffb}00{{{f{BBh}}{f{BBh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BBh}}{f{ClGl}}}{{Bd{bGn}}}}{{{Gj{{f{Ed}}Ff}}}BG`}{cc{}}{{{Gj{{f{Ed}}Ff}}}BGb}11{{eFf}BAl{{ANl{Ed}}}{{Ch{}{{Cb{{Fn{{Gj{Efc}}}}}}}}}}{{}Ff}00{ce{}{}}00{BG`B`}{BGbB`}{{{f{Ed}}Ff}BG`}{{{f{Ed}}Ff}BGb}{{{Fn{Ih}}}BBh}{{{f{ClBG`}}Ff}B`}{{{f{ClBGb}}Ff}B`}{{{f{{An{BBh}}}}{C`{Ff}}}{{Bd{BAlBb}}}}0{{{f{{An{BBh}}}}{C`{Ff}}}{{Bd{{Fn{Ed}}Bb}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}A@`{}}00<<<{{{f{{An{B@f}}}}}{{Bd{B@fBb}}}}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{B@f{f{{An{{f{Ab}}}}}}{f{{An{{f{Ab}}}}}}{C`{{f{Ab}}}}{f{B@f}}}B@f}{{BClc}{{Bd{B@fBb}}}{{Df{BGd{f{Cl{BGh{BGf}}}}{f{Cl{BGh{BGj}}}}}{{Dd{{Bd{bBb}}}}}}}}{{{f{BGl}}{f{{An{Ij}}}}dd}B@f}{{{f{BGl}}{Gj{{On{{Fn{Ij}}{Fn{Nl}}}}{On{{Fn{A@b}}{Fn{Nl}}}}}}{f{B@f}}BGn}{{Bd{B@fBb}}}}{{{f{BGl}}{f{B@f}}{f{B`}}{f{B`}}BGn}{{Bd{B@fBb}}}}{{{f{Ab}}{f{Ab}}}Ef}{{{f{BGl}}{f{B@f}}{f{B`}}{f{B`}}BGnd{C`{{f{{An{{f{Ab}}}}}}}}}{{Bd{B@fBb}}}}{{{f{BDh}}Ff}{{Gj{BDhBDh}}}}{{{f{BH`}}{f{{An{Nl}}}}Kl}B@f}0{{{f{BH`}}{f{{An{Nl}}}}}B@f}0{{{f{BHb}}{C`{{Fn{{f{Ab}}}}}}{C`{{f{Ab}}}}d}{{Bd{B@fBb}}}}{{BCld}BCl}{{{BHd{c}}{C`{{Lh{BHf}}}}}{{BHd{c}}}BHh}{{{f{B`}}}{{Bd{B`Bb}}}}{BHjBHj}{{{BHl{}{{Dd{c}}}}{f{B`}}}c{}}{{BHjBHj}}{{{f{BDl}}Gf{C`{{f{AKj}}}}}{{Bd{GfBb}}}}0{{{f{BHn}}{f{B`}}}{{Bd{B`Bb}}}}1{{BI`c}BCl{{Hf{{An{BHj}}}}}}5`{{BHj{f{Ab}}}BHj}{{}BHj}{{BHjd}BHj}{c{{Bd{BHjBb}}}{{Hf{{An{BHj}}}}}}{{{f{{Lh{ce}}}}}{{f{e}}}{}BIb}{{BIdd}BId}`{{{f{BIf}}}d}{{{f{BIh}}}d}11`{{BHjc}BHj{{ANl{BHj}}}}{{{Lh{BIf}}BIj}{{Bd{BClBb}}}}76{{BHjcd}BHj{{ANl{BHj}}}}{{{f{ClAAf}}}b}{{{f{ClAAh}}}b}{{{f{ClAAf}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClAAh}}{C`{c}}}b{}}{{{f{ClAAf}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAh}}c}b{}}{{{f{{AFj{}{{AFh{c}}}}}}g}{{AFj{}{{AFh{c}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{c}}}}}}Dh}}{{BI`c{Lh{BAl}}}BCl{{Df{B@f}{{Dd{{Bd{B@fBb}}}}}}I`Ib}}{{BHjc{BIn{{Lh{BIl}}}}}BHj{{Df{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}}{{BHjBHjc{BIn{{Lh{BIl}}}}}BHj{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}}{{{f{BHj}}{f{Clc}}f}{{Bd{BJ`Bb}}}{{Dn{{f{BHj}}f}{{Dd{{Bd{BJ`Bb}}}}}}}}{{{f{AFl}}{f{Df}}}AFl}{{{f{AFl}}{f{Df}}}{{l{c}}}Db}{{BHjc{f{{An{BHj}}}}{BIn{{Lh{BIl}}}}}BHj{{Df{{f{Cl{An{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}}{{BHjBJb{f{{An{BHj}}}}dd}BHj}{{ce{BIn{{Lh{BIl}}}}d}BHj{{Df{{f{Cl{An{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}{{Hf{{An{BHj}}}}}}{{{f{{AFj{}{{AFh{c}}}}}}i{f{Cl{An{g}}}}}b{}{}{}{{Df{{C`{e}}{f{g}}}{{Dd{g}}}}}}{{{f{{AFj{}{{AFh{c}}}}}}g}{{AFj{}{{AFh{c}}}}}{}{}{{Df{e}{{Dd{c}}}}Dh}}{{BHjBHjGfEd}BHj}{BDh{{Lh{Cd}}}}{{{f{BJd}}}{{C`{Ff}}}}{BJfBHj}{BJhBHj}{BHjBHj}3210{{{f{AFn}}Eh}{{l{Ej}}}}{{BHjEh}BHj}{{{f{BJj}}Eh}{{l{Ej}}}}{{cEn}BHj{{Hf{{An{BHj}}}}}}{{{f{AFn}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{AG`}}}{{Bd{{l{Ej}}Bb}}}}6{{{f{BJj}}}{{Bd{{l{Ej}}Bb}}}}{cBHj{{ANl{BHj}}}}{{{f{BJl}}}{{f{{An{Mn}}}}}}``{BHjBJf}{eALd{}{{Hb{}{{Cb{c}}}}}}0{{AEhe}ALf{}{{Hb{}{{Cb{c}}}}}}0`{{{f{Cl{BJn{c}}}}}{{Bd{BBfBb}}}BK`}{{{f{BIf}}}{{f{AEj}}}}{{{f{BJj}}}{{f{AEj}}}}{{{f{BKb}}}{{f{AEj}}}}{{{f{BIh}}}{{f{AEj}}}}{{{f{BDh}}}{{f{AEj}}}}{{{f{ClBJj}}}{{f{ClAEj}}}}{{{f{ClBDh}}}{{f{ClAEj}}}}{{{f{BKd}}}{{f{{l{n}}}}}}{{{f{BKf}}{C`{{f{Ab}}}}d}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKf}}{C`{{f{Ab}}}}}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKf}}{C`{{f{Ab}}}}Jldd{C`{{f{Ef}}}}{f{{l{A`}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{BKf}}{C`{{f{Ab}}}}Jld{C`{{f{Ef}}}}{f{{l{A`}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{{Lh{c}}}}}BKh{BKjNj}}{{{f{BKl}}}{{f{{l{j}}}}}}{{{f{{Lh{ce}}}}}{}NjBIb}{{{f{{Lh{c}}}}}MbBKn}{{{f{BL`}}}{{f{BHj}}}}{{{f{{Lh{ce}}}}}{{f{c}}}NjBIb}{{{f{ALh}}}{{f{Ed}}}}{{{f{BLb}}}{{f{B`}}}}{{{f{ClBJj}}}{{Bd{FfBb}}}}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}{{C`{{f{{An{c}}}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{BLd}}}{{f{{l{A`}}}}}}{{{Fn{BHj}}}BHj}{{{f{BKf}}{C`{{f{Ab}}}}d}{{Bd{{Jh{KhJj}}Bb}}}}{{{Lh{{BLf{c}}e}}}{{Lh{ce}}}{}BIb}{{{Lh{{An{{BLf{c}}}}e}}}{{Lh{{An{c}}e}}}{}BIb}{{{f{Ab}}}BHj}{{BHj{C`{Ij}}}BHj}{{{f{BLh}}}{{Bd{{l{A`}}Bb}}}}{{{f{BLh}}}{{l{A`}}}}{{{f{{Jh{JnJj}}}}{f{Jl}}{f{AKj}}}{{Jh{KdJj}}}}`{{{BHd{{Cf{BHh}}}}{C`{{Lh{BAl}}}}}{{Bd{BLjBb}}}}{{{BLl{c}}{f{BAl}}}{{Bd{{BLn{c}}Bb}}}BM`}{{{BMb{c}}{f{BAl}}}{{Bd{{BMd{c}}Bb}}}BM`}{{{BMf{c}}Ff}{{Bd{BMhBb}}}BHh}{{{BMj{c}}{f{BAl}}}{{Bd{{BMl{c}}Bb}}}BM`}{{{f{Cl{BHd{c}}}}}{{Bd{BMnBb}}}BHh}`{BHjBN`}{{BHjBNbBHj}BHj}{{{f{BJj}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{c}}}{{f{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Lh{ce}}}}}{{f{c}}}NjBIb}1111111111111{{{f{Clc}}}{{f{Cle}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BClIjcEn}BCl{{Hf{{An{BHj}}}}}}{BDh{{Cf{Cd}}}}`{BClBCl}```{{{f{BNd}}{f{Ab}}}{{Bd{EfBb}}}}{{BNf{Fn{BHj}}}{{Bd{BHjBb}}}}{{{f{AL`}}{f{AL`}}c}{{Bd{AL`Bb}}}AMh}{{{f{BKb}}{f{Cl{An{B`}}}}}{{Bd{{C`{B`}}Bb}}}}{{{f{BNh}}B`B`}{{Bd{B`Bb}}}}{{BNf{Fn{BHj}}}BHj}{{{f{BNj}}}b}{{BHjEd}BHj}{{{f{BJj}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{BCl{BNl{{f{Ab}}EdO`}}d}BCl}{{{f{AGb}}{f{Ed}}}{{Bd{B`Bb}}}}3{{{f{AMj}}{f{Ed}}}{{Bd{B`Bb}}}}{{BClEdd}BCl}2{{{f{AGb}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{AMj}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{BHjEdFb}BHj}`{BHjBNn}{{{f{{Lh{c}}}}}{{C`{{f{AJl}}}}}{AJlNj}}{BHjBHj}{{{f{BO`}}}{{Bd{B`Bb}}}}1`{{{f{BOb}}}{{Bd{{l{Jd}}Bb}}}}{{{f{BDh}}Ff}d}{{{f{BBf}}{f{BBf}}{C`{{f{{An{Ef}}}}}}{f{Ab}}}{{Bd{bBb}}}}{{{f{BAl}}{f{BAl}}{C`{{f{{An{Ef}}}}}}{f{Ab}}}{{Bd{bBb}}}}0{{{f{BOd}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BJj}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BOd}}c}{{Bd{B`Bb}}}Ah}{{{f{BJj}}}{{Fl{{Fh{{Cf{Cd}}}}{Fj{{f{{Cf{Cd}}}}}{{Dd{Ff}}}}}}}}``{{{f{BJj}}}{{f{{Fn{{Cf{Cd}}}}}}}}{{{f{ClBJj}}}{{f{Cl{Fn{{Cf{Cd}}}}}}}}{{{f{B`}}{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BHjBHjBHj}BHj}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BHjBHj}BHj}10{{{f{BOf}}}BOf}{{{f{BBl}}}BBl}{{{f{BDb}}}BDb}{{{f{BOh}}}BOh}{{{f{BDl}}}BDl}{{{f{BOj}}}BOj}{{{f{BNj}}}BNj}{{{f{BCl}}}BCl}{{{f{BI`}}}BI`}{{{f{BOl}}}BOl}{{{f{BIj}}}BIj}{{{f{BOn}}}BOn}{{{f{C@`}}}C@`}{{{f{C@b}}}C@b}{{{f{BIh}}}BIh}{{{f{C@d}}}C@d}{{{f{C@f}}}C@f}{{{f{A@b}}}A@b}{{{f{Nl}}}Nl}{{{f{C@h}}}C@h}{{{f{C@j}}}C@j}{{{f{C@l}}}C@l}{{{f{C@n}}}C@n}{{{f{CA`}}}CA`}{{{f{CAb}}}CAb}{{{f{CAd}}}CAd}{{{f{CAf}}}CAf}{{{f{CAh}}}CAh}{{{f{CAj}}}CAj}{{{f{CAl}}}CAl}{{{f{CAn}}}CAn}{{{f{BGn}}}BGn}{{{f{CB`}}}CB`}{{{f{CBb}}}CBb}{{{f{CBd}}}CBd}{{{f{CBf}}}CBf}{{{f{CBh}}}CBh}{{{f{CBj}}}CBj}{{{f{CBl}}}CBl}{{{f{CBn}}}CBn}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{CCh}}}CCh}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{BL`}}}BL`}{{{f{BHj}}}BHj}{{{f{CDj}}}CDj}{{{f{BNb}}}BNb}{{{f{{BIn{c}}}}}{{BIn{c}}}ABj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{BJb}}}BJb}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{{f{BNf}}}BNf}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{CFn}}}CFn}{{{f{{Lh{ce}}}}}{{Lh{ce}}}Nj{BIbABj}}{{{f{CG`}}}CG`}{{{f{Nf}}}Nf}{{{f{BDf}}}BDf}{{{f{BDh}}}BDh}{{{f{BAl}}}BAl}{{{f{ANn}}}ANn}{{{f{BBf}}}BBf}{{{f{Nd}}}Nd}{{{f{CGb}}}CGb}{{{f{CGd}}}CGd}{{{f{CGf}}}CGf}{{{f{BJj}}}{{Lh{BJj}}}}{{{f{c}}{f{Cle}}}b{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CGh}}}{{C`{{f{CGj}}}}}}````{{{f{BDl}}{f{BDl}}}B@`}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}B@`{CGlNj}BIb}{{{f{{An{BHj}}}}}BHj}{{BIdCB`}BId}{{{f{CB`}}{f{CBb}}}d}`{{{f{{An{B`}}}}}{{Bd{B`Bb}}}}{{{f{Ab}}}BHj}{BCl{{Bd{B@fBb}}}}{c{{Bd{{Fn{B@f}}Bb}}}{{Hn{}{{Cb{BCl}}}}}}{ANfe{}{{ALd{c}}AJh}}0{{ANfAEh}e{}{{ALf{c}}AJh}}0{{ACb{f{Ab}}}{{l{c}}}Db}{{ACd{f{{l{c}}}}}{{l{c}}}Db}10{{ACd{f{Ab}}Ed}{{l{c}}}Db}0{BCl{{Bd{BNjBb}}}}{cBHj{{BCn{Ef}}}}{{{f{CG`}}Ff}CGn}``{{{f{BHb}}{Fn{{f{Ab}}}}{C`{{f{Ab}}}}d}{{Bd{B@fBb}}}}`{{{f{c}}{f{e}}}B@`{}{}}0``{{{f{CD`}}}{{Bd{{Lh{BAl}}Bb}}}}{{cCFn}{{Bd{BClBb}}}{{Hf{{An{BCl}}}}}}{{{f{BLh}}{f{{l{A`}}}}}{{l{A`}}}}{{ed}{{Bd{BHjBb}}}{{ANl{BHj}}ABj}{{Hf{{An{c}}}}}}{{{f{CGh}}{Fn{BCl}}}{{Bd{BClBb}}}}{{{f{C@`}}{Fn{BCl}}}{{Bd{BClBb}}}}44{e{{Bd{BHjBb}}}{{ANl{BHj}}ABj}{{Hf{{An{c}}}}}}{{c{f{Ab}}d}BHj{{Hf{{An{BHj}}}}}}{{BJfc}BHj{{ANl{BHj}}}}{{{f{CH`}}{f{{An{Al}}}}}{{l{Aj}}}}{{{f{BLh}}{f{Ab}}d}{{Bd{{l{Aj}}Bb}}}}{{BJhc}BHj{{ANl{BHj}}}}{{{f{BAl}}{f{Ab}}}d}{{{f{CH`}}{f{{l{n}}}}}{{l{Aj}}}}{{{f{BLh}}{f{{l{A`}}}}dd}{{Bd{{l{Aj}}Bb}}}}{{{f{BLh}}{f{Ab}}}{{Bd{{l{Aj}}Bb}}}}{{{f{Cd}}{f{AEh}}}{{Cf{Cd}}}}{{{f{B`}}Ff}{{Bd{{l{Ej}}Bb}}}}{BClBCl}{BHjBHj}{{{f{BLh}}{f{Ab}}d}{{Bd{{l{Ej}}Bb}}}}{{{f{BLh}}{f{{l{A`}}}}d}{{Bd{{l{Ej}}Bb}}}}{{{f{CHb}}Al{C`{Al}}{C`{{f{C@n}}}}Ald}{{Bd{FfBb}}}}{{{AMd{Ab}}}Ed}{{{f{BGl}}{f{{An{Nl}}}}d}B@f}{{{f{CHd}}c}{{Cf{CHf}}}BM`}{{{f{CHh}}c}{{Cf{CHf}}}BM`}`{{BClBCl{C`{Ef}}}BCl}{{{f{CHj}}{f{B@f}}{C`{{f{Ab}}}}{C`{{Gj{GfFf}}}}}{{Bd{B@fBb}}}}{{{f{CHj}}{f{B@f}}{C`{{Gj{GfFf}}}}d}{{Bd{{Gj{B@fB@f}}Bb}}}}{{{f{B`}}d}{{Bd{B`Bb}}}}{{BHjd}BHj}{{BHjced}BHj{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`IbABj}{{Hf{{An{BHj}}}}}}212121{{ce}BHj{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`IbABj}{{Hf{{An{BHj}}}}}}32{{CHlBHjFfd}BHj}`{{{f{BDh}}}{{f{AEh}}}}{{{f{ANn}}}{{f{AEh}}}}```{{BHjBHjBDlBOj}BHj}`{CEfBHj}`{{BHjBHjBDlBOj{C`{Jl}}{C`{Ef}}}BHj}0{AKhGf}00{{{f{CHn}}}{{l{Ll}}}}{{{f{CI`}}}{{l{Ll}}}}{{{f{BOb}}}{{Bd{{l{Ll}}Bb}}}}`{{{f{CIb}}}{{l{Jj}}}}{{{f{BDl}}}Gf}`{{{f{BDl}}}d}```{{}b}{cbBIb}{{}CHd}{{}CHh}{{}BBl}{{}BDb}{{}BCl}{{}BIj}{{}BOn}{{}C@b}{{}C@f}{{}C@h}{{}C@j}{{}C@l}{{}CAb}{{}CAd}{{}CAf}{{}CAj}{{}CAl}{{}CAn}{{}BGn}{{}CB`}{{}CBf}{{}CBh}{{}CBj}{{}CBl}{{}CBn}{{}CC`}{{}CCd}{{}CCn}{{}CD`}{{}BHj}{{}{{BIn{{Lh{CId}}}}}}{{}{{BIn{{Lh{BIl}}}}}}{{}{{BIn{{Lh{BNh}}}}}}{{}CEf}{{}CEh}{{}CEl}{{}CEn}{{}CF`}{{}CFb}{{}CFf}{{}CFj}{{}CFl}{{}CFn}{{}{{Lh{{An{c}}}}}{}}{{}{{Lh{c}}}CIf}{{}{{Lh{CIh}}}}{{}{{Lh{Ab}}}}{{}Nf}{{}BDf}{{}BAl}{{}ANn}{{}BBf}{{}Nd}`{{}{{On{{Fn{A@b}}{Fn{Nl}}}}}}{Ff{{f{c}}}{}}00{{{f{{AKd{c}}}}}f{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BIn{c}}}}}f{}}222222222222222222222{{{f{{Lh{ce}}}}}{{f{c}}}NjBIb}3333333333333{Ff{{f{Clc}}}{}}0{{{f{Cl{AKd{c}}}}}{{f{Cl}}}{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CD`}}}{{Bd{EfBb}}}}{{{f{BCl}}}{{Bd{EfBb}}}}0001{{{f{{Lh{c}}}}}{{f{Ab}}}{AJlNj}}{{{f{ANn}}{f{CIj}}}{{Bd{CIlBb}}}}```{{{f{B`}}GfCIn}{{Bd{B`Bb}}}}{{BJhGfCIn}BHj}{{BHjGfCIn}BHj}{{{f{CD`}}}{{Bd{{`{BAj}}Bb}}}}``{{{BHl{}{{Dd{c}}}}{f{B`}}}c{}}{{BHjBHj}}{{{f{BHn}}{f{B`}}}{{Bd{B`Bb}}}}{{BHjc}BHj{{ANl{BHj}}}}{{{Lh{AEjc}}}{{Bd{{Lh{ec}}{Lh{AEjc}}}}}BIb{AEjI`Ib}}{{{Lh{AEjc}}}{{Lh{ec}}}BIb{AEjI`Ib}}{{{f{{Lh{ce}}}}}{{CJ`{ce}}}Nj{ABjBIb}}{Ffb}0000000000000000000000000{{{f{ClBNj}}}b}11{{BCle}BCl{{Hf{Ab}}}{{Hb{}{{Cb{c}}}}}}22222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Cl{Lh{ce}}}}}bNjBIb}3333333333333{BHjBHj}{{BCl{C`{{Fn{BHj}}}}}BCl}1{{{f{BJj}}}B`}{{{f{{Jh{JnJj}}}}{f{Jl}}{f{AKj}}}{{Jh{KdJj}}}}`{BHjCJb}{{{f{AMj}}}{{f{Ed}}}}{{{f{BJj}}}{{f{Ed}}}}`{{{f{Ed}}}BHj}{cBHj{{Hf{{An{Ed}}}}}}`{CEhBHj}``{{}CFl}{{{f{c}}}e{}{{CJf{CJd}}}}0`{{{f{CH`}}{f{{An{Al}}}}}{{l{Aj}}}}{{{f{CH`}}{f{{l{n}}}}}{{l{Aj}}}}{{BDl{f{Ed}}{f{Ab}}}{{Bd{bBb}}}}{{BDl{C`{{f{Ab}}}}{f{Ab}}}{{Bd{bBb}}}}{{{f{CJh}}{f{Ab}}}{{Bd{bBb}}}}`{{{f{BOf}}{f{BOf}}}d}{{{f{BBl}}{f{BBl}}}d}{{{f{BDb}}{f{BDb}}}d}{{{f{BDl}}{f{BDl}}}d}{{{f{BOj}}{f{BOj}}}d}{{{f{BOl}}{f{BOl}}}d}{{{f{BOn}}{f{BOn}}}d}{{{f{A@b}}{f{A@b}}}d}{{{f{C@h}}{f{C@h}}}d}{{{f{C@j}}{f{C@j}}}d}{{{f{C@l}}{f{C@l}}}d}{{{f{C@n}}{f{C@n}}}d}{{{f{CA`}}{f{CA`}}}d}{{{f{CAb}}{f{CAb}}}d}{{{f{CAd}}{f{CAd}}}d}{{{f{CAf}}{f{CAf}}}d}{{{f{CAh}}{f{CAh}}}d}{{{f{CAj}}{f{CAj}}}d}{{{f{CAl}}{f{CAl}}}d}{{{f{CAn}}{f{CAn}}}d}{{{f{BGn}}{f{BGn}}}d}{{{f{CB`}}{f{CB`}}}d}{{{f{CBb}}{f{CBb}}}d}{{{f{CBd}}{f{CBd}}}d}{{{f{CBf}}{f{CBf}}}d}{{{f{CBh}}{f{CBh}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{CBl}}{f{CBl}}}d}{{{f{CBn}}{f{CBn}}}d}{{{f{CC`}}{f{CC`}}}d}{{{f{CCb}}{f{CCb}}}d}{{{f{CCd}}{f{CCd}}}d}{{{f{CCf}}{f{CCf}}}d}{{{f{CCh}}{f{CCh}}}d}{{{f{CCj}}{f{CCj}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{CCn}}{f{CCn}}}d}{{{f{BL`}}{f{BL`}}}d}{{BHjc}BHj{{ANl{BHj}}}}{{{f{BHj}}{f{BHj}}}d}{{{f{CDj}}{f{CDj}}}d}{{{f{BNb}}{f{BNb}}}d}{{{f{{BIn{{Lh{c}}}}}}{f{{BIn{{Lh{c}}}}}}}dNj}{{{f{{BIn{B`}}}}{f{{BIn{B`}}}}}d}{{{f{CDl}}{f{CDl}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{BJb}}{f{BJb}}}d}{{{f{CEj}}{f{CEj}}}d}{{{f{CEl}}{f{CEl}}}d}{{{f{CEn}}{f{CEn}}}d}{{{f{CF`}}{f{CF`}}}d}{{{f{CFb}}{f{CFb}}}d}{{{f{CFd}}{f{CFd}}}d}{{{f{CFh}}{f{CFh}}}d}{{{f{CIl}}{f{CIl}}}d}{{{f{CFj}}{f{CFj}}}d}{{{f{CFl}}{f{CFl}}}d}{{{f{CFn}}{f{CFn}}}d}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{CJjNj}BIb}{{{f{{Lh{Cd}}}}{f{Cd}}}d}{{{f{{Lh{CJl}}}}{f{CJl}}}d}{{{f{Nf}}{f{Nf}}}d}{{{f{BDf}}{f{BDf}}}d}{{{f{BDh}}{f{BDh}}}d}{{{f{BDh}}{f{{f{Cd}}}}}d}{{{f{BAl}}{f{BAl}}}d}{{{f{ANn}}{f{ANn}}}d}{{{f{BBf}}{f{BBf}}}d}{{{f{Nd}}{f{Nd}}}d}{{{f{CGf}}{f{CGf}}}d}{{BHjc}BHj{{ANl{BHj}}}}{{{f{{AGf{}{{Cb{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CJnBHjd}BHj}``{{BHjc}BHj{{BCn{Ef}}}}{{BHjc}BHj{{Hf{{An{Ed}}}}}}{{{f{Clc}}e}{{Bd{{f{Clg}}BAd}}}{}CK`{}}{{{f{BCl}}d}{{Bd{EfBb}}}}{{BCle}BCl{{ANl{BHj}}ABj}{{Hf{{An{c}}}}}}{{{f{AGh}}}{{Bd{B`Bb}}}}{BHjBHj}{{{f{AGh}}}{{Bd{{Gj{B`{Gh{Gf}}}}Bb}}}}`{{BHjBHjBHj}BHj}{{{f{CHd}}}CHb}{{{f{CHh}}}CHb}{{{f{BLh}}{f{{l{A`}}}}Ff}{{Bd{{l{A`}}Bb}}}}{Nl{{Gj{IjIj}}}}{{{f{BLh}}{f{Ab}}}{{Bd{{l{j}}Bb}}}}{{{f{BLh}}{f{{l{A`}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BLh}}{f{Ab}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{AAf}}}d}``{{{f{BNj}}}{{C`{{Bd{B@fBb}}}}}}{{BClFf}{{Bd{B@fBb}}}}{{{f{BNj}}}{{Bd{B@fBb}}}}{{{f{AAf}}}{{f{Mn}}}}{{{f{BJj}}}{{Dj{Mn}}}}{{CKbGf}BHj}{{CKb{f{Ab}}}BHj}{{CKb{f{{An{c}}}}}BHj{{Hf{Ab}}}}{{{f{BDh}}}{{f{{An{ANn}}}}}}```{{BClc}BCl{{ANl{BHj}}}}{{BHjc}BHj{{ANl{BHj}}}}`10{{BHjAGd}BHj}{{{f{AGj}}c}{{Bd{AGjBb}}}{}}{{{f{AGl}}{f{{l{Aj}}}}}{{Bd{{l{c}}Bb}}}Db}{{{f{BJj}}{f{{l{Aj}}}}}{{Bd{B`Bb}}}}{{BClBHj}BCl}5{{BBfc}BBf{{Df{Ff{f{ANn}}}{{Dd{d}}}}}}{{{f{BLh}}{f{Ab}}d}{{Bd{{l{Ej}}Bb}}}}{{{f{BLh}}{f{{l{A`}}}}dd}{{Bd{{l{Ej}}Bb}}}}{{{f{BLh}}{f{Ab}}}{{Bd{{l{Ej}}Bb}}}}{CKd{{Bd{B@fBb}}}}{{{f{ClCHf}}{f{ClB@f}}}{{Bd{bBb}}}}{AAh{{l{c}}}Db}{{AMh{f{{l{Ej}}}}{f{{l{Ej}}}}}{{Bd{{l{Ej}}Bb}}}}{BIdBCl}{{{BHd{c}}}{{Bd{B@fBb}}}BHh}{{{f{Cl{BLl{c}}}}{f{ClB@f}}}{{Bd{bBb}}}BM`}{{{CKf{c}}}{{Bd{B@fBb}}}BHh}{{{BJn{c}}}{{Bd{B@fBb}}}BK`}{{{f{Cl{CKh{c}}}}{f{ClB@f}}}{{Bd{bBb}}}BM`}{CGh{{Bd{BClBb}}}}{{{f{Cl{BMb{c}}}}{f{ClB@f}}}{{Bd{bBb}}}BM`}{{{f{Cl{CKj{c}}}}{f{ClB@f}}}{{Bd{bBb}}}BM`}{{{CKl{c}}}{{Bd{B@fBb}}}BHh}{C@`{{Bd{BClBb}}}}{{{CKn{c}}}{{Bd{B@fBb}}}BHh}{{{BMf{c}}}{{Bd{B@fBb}}}BHh}{{{BMj{c}}{f{ClB@f}}}{{Bd{JbBb}}}BM`}{{{f{ClAAf}}}{{l{j}}}}84{BIh{{Bd{BClBb}}}}{{{CKf{c}}{C`{{Lh{BHf}}}}d}{{Bd{B@fBb}}}BHh}{{{f{BMh}}Ff}d}{{}BHj}{BClBCl}{BJhBHj}{BHjBHj}`0``{{}{{BIn{{Lh{BIl}}}}}}{{{f{BO`}}}{{Bd{B`Bb}}}}2{{BHjBHj}BHj}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{Cl{Lh{AE`}}}}}{{Bd{bBAd}}}}{{{f{BKb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BNh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BNd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BOf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BBl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BDb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BOh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BDl}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{BOj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BOl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BOn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{A@b}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Nl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BIf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{C@h}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{C@j}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{C@l}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{C@n}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CA`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CL`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BGn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CB`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CBb}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CBd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CBf}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CBh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CBj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CBl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CBn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CC`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BHj}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CDj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BNb}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{{BIn{c}}}}{f{ClGl}}}{{Bd{bGn}}}{}}{{{f{CDl}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CDn}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CE`}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CEb}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CEd}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{BJb}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CEf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CEh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CEj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CEl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CEn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CF`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BNf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CIl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{Lh{ce}}}}{f{ClGl}}}{{Bd{bGn}}}{AElNj}BIb}{{{f{{Lh{ce}}}}{f{ClGl}}}{{Bd{bGn}}}NjBIb}{{{f{{Lh{ce}}}}{f{ClGl}}}{{Bd{bGn}}}{BAjNj}BIb}{{{f{CG`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Nf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BDf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BDh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BAl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{ANn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BBf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Nd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CGb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CGd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CGf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Ab}}BEb}Ef}```{{BHjce}BHj{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`IbABj}{{Hf{{An{BHj}}}}}}{{BIdd}BId}``{{{f{Ab}}c}{{Bd{BHjBb}}}{{Hf{{An{BHj}}}}}}{{BHj{C`{Ij}}}BHj}{cc{}}00000000000000000000000000{BI`BCl}{CD`BCl}2222222222222222{IjA@b}3333333{{{f{Ab}}}C@n}4444444444{CBbBGn}55555555555555555555555{BL`BHj}{LnBHj}{JbBHj}{MhBHj}{IjBHj}{MbBHj}{GfBHj}{J`BHj}{LfBHj}{AlBHj}{MlBHj}{cc{}}{dBHj}{{{f{Ab}}}BHj}22{CEd{{BIn{{Lh{BKb}}}}}}{CLb{{BIn{{Lh{BKb}}}}}}{CDn{{BIn{{Lh{BKb}}}}}}5{BJb{{BIn{{Lh{BKb}}}}}}{CDl{{BIn{{Lh{BKb}}}}}}{CLd{{BIn{{Lh{BKb}}}}}}{CLf{{BIn{{Lh{BKb}}}}}}{CLh{{BIn{{Lh{BKb}}}}}}{CE`{{BIn{{Lh{BKb}}}}}}{CLj{{BIn{{Lh{BKb}}}}}}<<<<<{CDlBJb}{CLdBJb}{CDnBJb}{CEdBJb}{cc{}}00000{CFbCF`}1111111{CLlCIl}222{{{Fn{ce}}}{{Lh{{An{c}}e}}}{}{BIbABj}}{{{Cf{ce}}}{{Lh{ce}}}NjBIb}4{CLnc{}}{CHb{{Lh{CM`}}}}{CMb{{Lh{CMd}}}}{{{f{CM`}}}{{Lh{CM`}}}}{{{f{CMd}}}{{Lh{CMd}}}}{{{Lh{Ab}}}{{Lh{{An{Al}}}}}}{{{Dj{c}}}{{Lh{c}}}{CMfNj}}{{{f{CIh}}}{{Lh{CIh}}}}{{{Of{c}}}{{Lh{{An{c}}}}}{}}{{{f{Ab}}}{{Lh{Ab}}}}{Ef{{Lh{Ab}}}}{{{f{{An{c}}}}}{{Lh{{An{c}}}}}ABj}{c{{Lh{c}}}{}}{CMh{{Lh{CIh}}}}{cc{}}000{CMjBDh}{CMlBDh}2{{{Lh{BBf}}}BAl}{{{f{BBh}}}BAl}{BBfBAl}5{{{f{{An{B`}}}}}BAl}{{{f{BBf}}}BAl}{{{f{{Lh{BBf}}}}}BAl}8{{{Fn{ANn}}}BBf}99999{{c{C`{Hh}}}CMn{}}{{{CN`{Gf}}{CN`{Al}}{C`{Hh}}}CNb}{{{CN`{Gf}}{CN`{Al}}{C`{Hh}}}CNd}{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}00{c{{AKd{{l{Aj}}}}}{{Hb{}{{Cb{d}}}}}}{c{{AKd{{l{e}}}}}{{Hb{}{{Cb{}}}}}Ad}{e{{Lh{{An{c}}}}}{}{{Hb{}{{Cb{c}}}}}}{eBAl{{ANl{Mn}}}{{Hb{}{{Cb{c}}}}}}{{gFf}{{CNf{Gf}}}Hf{{Hb{}{{Cb{{C`{c}}}}}}}{{Hb{}{{Cb{{C`{e}}}}}}}}0{e{{CNf{Gf}}}{{Hb{}{{Cb{{C`{d}}}}}}}{{Hb{}{{Cb{{C`{c}}}}}}}}{{{f{Ab}}e}ABn{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{gAEh}{{CNf{Gf}}}BFh{{Hb{}{{Cb{{C`{c}}}}}}}{{Hb{}{{Cb{{C`{e}}}}}}}}673{{{f{Ab}}e}ABn{}{{Ch{}{{Cb{c}}}}}}{c{{AKd{{l{e}}}}}{{Hn{}{{Cb{}}}}}Ad}{e{{Lh{{An{c}}}}}I`{{Hn{}{{Cb{c}}}}}}`{c{{Bd{{CKn{AE`}}Bb}}}{{ANl{CHb}}}}{{}{{Lh{c}}}Nj}{c{{Lh{ec}}}BIbNj}{{{f{Ab}}{f{{An{c}}}}}ABn{}}{{{f{Ab}}{f{{An{{C`{c}}}}}}}ABn{}}{{{f{Ab}}}{{Bd{CNh}}}}{c{{AKd{{l{e}}}}}{{If{}{{Cb{}}}}}Ad}{c{{AKd{{l{Aj}}}}}{{If{}{{Cb{d}}}}}}{Ed{{BIn{{Lh{BIl}}}}}}{{{f{Ab}}c}CNj{}}{{{Fn{c}}AEh}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{Fn{c}}AEh}{{AJh{}{{ALj{e}}{ALl{c}}{ALn{g}}}}}{AM`{AMb{e}}}ABj{{Gb{}{{Cb{e}}}}IfI`Ib}}`{{{f{Ab}}cFf}AGn{}}{{FfcAEh}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{}CFl}{{BClBClcc}BCl{{ANl{BHj}}}}{{{f{CNl}}{f{B@f}}ee}{{Bd{B@fBb}}}{{Hf{Ab}}}{{Hb{}{{Cb{c}}}}}}{{{f{Ab}}Ff}AH`}{{FfAEh}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}``{{BHjc{BIn{{Lh{BIl}}}}CNn}BHj{{Df{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}}`{{BHjc}BHj{{ANl{BHj}}}}{{BHjFfFf}BHj}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{CO`Nj}BIb}{{{f{BJj}}Ff}{{Bd{IhBb}}}}{{BJfBHjd}BHj}{{BJhBHjd}BHj}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}Ff}{{C`{c}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}6{{{f{BAl}}{f{Ab}}}{{C`{{f{Ed}}}}}}{{{f{AHb}}Ff}{{Bd{IhBb}}}}{{{f{AMj}}Ff}{{Bd{IhBb}}}}{{{f{AHb}}Ff}Ih}{{{f{AMj}}Ff}Ih}{{{f{BAl}}Ff}{{C`{{Gj{{f{{AOj{AOh}}}}{f{Ed}}}}}}}}{{{f{ClBAl}}Ff}{{C`{{Gj{{f{Cl{AOj{AOh}}}}{f{ClEd}}}}}}}}{BNnBHj}{{{f{BCl}}}CFf}{{{f{CFh}}}Ed}{{}Ed}{{{f{C@d}}GfBOj{C`{{f{AKj}}}}}{{Bd{BOhBb}}}}00{{{f{CId}}{f{BAl}}COb{f{Mn}}{f{Mn}}}{{C`{Mn}}}}{{{f{BIl}}{f{BAl}}COb{f{{An{Mn}}}}}Mn}{{{f{BAl}}{f{Ab}}}{{C`{Mn}}}}{{{f{AEh}}}{{f{{An{ANn}}}}}}{{{f{BJl}}}Ff}{{{f{BAl}}{f{Ab}}}{{C`{{Gj{Ff{f{{AOj{AOh}}}}{f{Ed}}}}}}}}{{{f{Cl{BMf{c}}}}}{{Bd{{f{{Lh{CG`}}}}Bb}}}BHh}{{{f{BJj}}}{{C`{Ld}}}}0{{{f{Cl{Lh{ce}}}}}{{C`{{f{Clc}}}}}NjBIb}{{{f{Cl{Lh{ce}}}}}{{f{Clc}}}NjBIb}{{{f{COd}}}{{Fn{{f{Ab}}}}}}{{{f{BAl}}}{{Fn{{f{Ab}}}}}}{{{f{BBf}}}{{Fn{{f{Ab}}}}}}{{{f{BJj}}Ff}{{C`{{f{In}}}}}}{{{f{BJj}}FfFf}{{C`{{f{In}}}}}}{{{f{BKb}}}{{C`{{BIn{{Lh{BIl}}}}}}}}{{{f{C@d}}BOhBOjJl{C`{{f{AKj}}}}BOn}{{Bd{COfBb}}}}{{{f{C@h}}}{{Lh{C@j}}}}{{{f{Clc}}}{{Bd{COhBb}}}{BK`BHhNj}}{{{f{CL`}}{f{BAl}}}{{Bd{{Lh{BAl}}Bb}}}}{{cFf}{{Fn{{Gj{FfFf}}}}}{{Ch{}{{Cb{Ff}}}}}}{{{f{AOl}}Ff}Ih}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}Ff}{{C`{c}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{BJj}}Ff}Ih}{{{f{CGh}}}d}{{{f{C@`}}}d}`{{BCle}BI`{{ANl{BHj}}ABj}{{Hf{{An{c}}}}}}{{{f{COj}}{Fn{B`}}{f{BBl}}}{{Bd{{Gj{B`{Fn{B`}}Bj}}Bb}}}}{{BClBHjcBBl}BI`{{Hf{{An{BHj}}}}}}2{{BDlBDl{f{{An{Gf}}}}BOjJl{C`{AKj}}}{{Bd{{Fn{{Of{Ij}}}}Bb}}}}{{C@d{f{{An{Gf}}}}BOjJl{f{{C`{Ef}}}}ddBOn}{{Gj{{Fn{{Of{Ij}}}}{Fn{Gf}}{Fn{Gf}}}}}}{{{f{BEn}}dd}{{Bd{BjBb}}}}{{{f{{AGf{}{{Cb{c}}}}}}e}c{}{}}{{BHjc}BHj{{ANl{BHj}}}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{CO`Nj}BIb}21`{{{f{BJj}}}d}{{{f{COl}}}d}{{{f{BBl}}{f{Clc}}}bAC`}{{{f{BDb}}{f{Clc}}}bAC`}{{{f{BDl}}{f{Clc}}}bAC`}{{{f{BOj}}{f{Clc}}}bAC`}{{{f{BOl}}{f{Clc}}}bAC`}{{{f{BOn}}{f{Clc}}}bAC`}{{{f{C@h}}{f{Clc}}}bAC`}{{{f{C@j}}{f{Clc}}}bAC`}{{{f{C@l}}{f{Clc}}}bAC`}{{{f{C@n}}{f{Clc}}}bAC`}{{{f{CA`}}{f{Clc}}}bAC`}{{{f{CAb}}{f{Clc}}}bAC`}{{{f{CAd}}{f{Clc}}}bAC`}{{{f{CAf}}{f{Clc}}}bAC`}{{{f{CAh}}{f{Clc}}}bAC`}{{{f{CAj}}{f{Clc}}}bAC`}{{{f{CAl}}{f{Clc}}}bAC`}{{{f{CAn}}{f{Clc}}}bAC`}{{{f{BGn}}{f{Clc}}}bAC`}{{{f{CB`}}{f{Clc}}}bAC`}{{{f{CBb}}{f{Clc}}}bAC`}{{{f{CBd}}{f{Clc}}}bAC`}{{{f{CBf}}{f{Clc}}}bAC`}{{{f{CBh}}{f{Clc}}}bAC`}{{{f{CBj}}{f{Clc}}}bAC`}{{{f{CBl}}{f{Clc}}}bAC`}{{{f{CBn}}{f{Clc}}}bAC`}{{{f{CC`}}{f{Clc}}}bAC`}{{{f{CCb}}{f{Clc}}}bAC`}{{{f{CCd}}{f{Clc}}}bAC`}{{{f{CCf}}{f{Clc}}}bAC`}{{{f{CCh}}{f{Clc}}}bAC`}{{{f{CCj}}{f{Clc}}}bAC`}{{{f{CCl}}{f{Clc}}}bAC`}{{{f{CCn}}{f{Clc}}}bAC`}{{{f{BL`}}{f{Clc}}}bAC`}{{{f{BHj}}{f{Clc}}}bAC`}{{{f{CDj}}{f{Clc}}}bAC`}{{{f{BNb}}{f{Clc}}}bAC`}{{{f{CDl}}{f{Clc}}}bAC`}{{{f{CDn}}{f{Clc}}}bAC`}{{{f{CE`}}{f{Clc}}}bAC`}{{{f{CEb}}{f{Clc}}}bAC`}{{{f{CEd}}{f{Clc}}}bAC`}{{{f{BJb}}{f{Clc}}}bAC`}{{{f{CEj}}{f{Clc}}}bAC`}{{{f{CEl}}{f{Clc}}}bAC`}{{{f{CEn}}{f{Clc}}}bAC`}{{{f{CF`}}{f{Clc}}}bAC`}{{{f{CFb}}{f{Clc}}}bAC`}{{{f{CFd}}{f{Clc}}}bAC`}{{{f{CFh}}{f{Clc}}}bAC`}{{{f{CFj}}{f{Clc}}}bAC`}{{{f{CFl}}{f{Clc}}}bAC`}{{{f{CFn}}{f{Clc}}}bAC`}{{{f{{Lh{ce}}}}{f{Clg}}}b{COnNj}BIbAC`}{{{f{BDf}}{f{Clc}}}bAC`}{{{f{BAl}}{f{Clc}}}bAC`}{{{f{ANn}}{f{Clc}}}bAC`}{{{f{Nd}}{f{Clc}}}bAC`}{{{f{CGf}}{f{Clc}}}bAC`}{{{f{D@`}}{f{B`}}CBfd}{{Bd{{Gj{{Gj{{Fn{Ij}}{Fn{Ij}}}}d}}Bb}}}}{{{f{D@`}}{f{B`}}CBfd}{{Bd{{Gj{{AK`{Ij}}{AK`{Ij}}}}Bb}}}}{{BI`{C`{Ff}}}BCl}{{BJhBHj}BHj}{{BHj{C`{Ff}}}BHj}{{{f{BLh}}}{{Bd{{l{A`}}Bb}}}}{{{f{BLh}}}{{l{A`}}}}`{{{f{{An{{f{{l{A`}}}}}}}}{f{Ab}}d}{{Bd{{l{A`}}Bb}}}}{{{f{D@b}}}{{l{Ll}}}}{{{f{CI`}}}{{l{Ll}}}}{{{f{BOb}}}{{Bd{{l{Ll}}Bb}}}}`{{{f{CIb}}}{{l{Jj}}}}`{{BIdCBb}BId}``{{{f{A@b}}}Ij}`{{{f{{Jh{JnJj}}}}{f{{l{A`}}}}CGf{Fj{Gf}{{Dd{AKh}}}}{Fj{AKh}{{Dd{Gf}}}}{f{AKj}}{f{AKj}}}{{Bd{{l{Jj}}Bb}}}}{{{f{{Jh{JnJj}}}}{C`{{f{Ab}}}}{Fj{Gf}{{Dd{AKh}}}}{Fj{AKh}{{Dd{Gf}}}}{f{AKj}}{f{AKj}}}{{Bd{{l{Jj}}Bb}}}}{BHjBHj}{{{f{AKh}}}d}{{{BLl{c}}d}{{BLl{c}}}BM`}``0`{{}b}{cb{ABjBIb}}{cBHj{{Hf{{An{Gf}}}}}}``{{{f{COd}}{f{Ab}}}{{C`{Ff}}}}{{{f{BAl}}{f{Ab}}}{{C`{Ff}}}}{{{f{BBf}}{f{Ab}}}{{C`{Ff}}}}{{{f{{An{Ij}}}}}{{`{{Ch{}{{Cb{Ff}}}}}}}}{{{f{COh}}Al{C`{Ff}}d{C`{{f{BAl}}}}FfFf{C`{{f{C@n}}}}{C`{Al}}Al{C`{{f{CA`}}}}dd{f{Cl{C`{Ff}}}}d}{{Bd{{Gj{BAlFfFf}}Bb}}}}{{{CKl{c}}{C`{{D@d{Ff}}}}}{{CKl{c}}}BHh}{{{CKn{c}}{C`{{D@d{Ff}}}}}{{CKn{c}}}BHh}``{{}Ff}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{ClAAf}}}{{Cf{Cd}}}}{{BClBClcc}BCl{{ANl{BHj}}}}{{{f{CNl}}{f{B@f}}ee}{{Bd{B@fBb}}}{{Hf{Ab}}}{{Hb{}{{Cb{c}}}}}}{{{f{ClNl}}}{{f{ClJb}}}}`{{{f{ClBAl}}Ff{AOj{AOh}}Ed}{{Bd{{C`{Ed}}Bb}}}}{{BHjBHjGfEd}BHj}{{BHjBHjBHj}BHj}``{{{f{B`}}CCb}B`}{{BHjCCb}BHj}`{{{f{B`}}{f{B`}}d}{{Bd{B`Bb}}}}{{BHjBHj}BHj}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BDh{{Gj{{Fn{ANn}}{Fn{{Cf{Cd}}}}{C`{Hh}}}}}}{{{AKd{c}}}c{}}{{{Lh{ce}}}{{C`{c}}}{}BIb}33{{{f{BHj}}}}{{{f{BDh}}}}{BAl}{D@fBJh}{BJhBJh}{{{Lh{ce}}}{}NjBIb}{{{Lh{ce}}}{{Gj{e}}}NjBIb}{{C@hc}{{BHd{c}}}BHh}{BAnB`}{{{Lh{BJj}}}B`}{CG`D@h}{BCn{{Fn{c}}}{}}{c{{Fn{Ef}}}{}}{c{{Fn{{AOj{AOh}}}}}{}}{{{f{CBb}}}d}{{{f{B`}}{f{B`}}{f{B`}}CCd}{{Bd{{l{Aj}}Bb}}}}{{BHjccCCd}BHj{{ANl{BHj}}}}{cd{{Hf{CM`}}}}{{{f{{An{Al}}}}}d}{{{f{BDl}}{C`{{f{Ab}}}}}d}{{{f{CFl}}}d}{{{f{BJj}}}d}{{{f{BAl}}}d}{{{f{BBf}}}d}{{{f{BMh}}}d}{BHjBHj}{{{f{B`}}}{{Bd{{l{Aj}}Bb}}}}{{{f{AHd}}}{{Bd{{l{Aj}}Bb}}}}27{{{f{BDl}}}d}{{{f{B`}}{f{B`}}}{{Bd{{l{Aj}}Bb}}}}{{BHjc}BHj{{ANl{BHj}}}}54{{{f{AHf}}}{{Bd{{l{Aj}}Bb}}}}6{{{f{CHn}}}{{l{Aj}}}}{{{f{CI`}}}{{l{Aj}}}}{{{f{BOb}}}{{Bd{{l{Aj}}Bb}}}}999{{{f{BJj}}}{{l{Aj}}}}::0{{{f{Nl}}}d};{{{f{A@b}}}d}`{{{f{B`}}}d}{{{f{{Lh{AE`}}}}}d}{{}d}{{{f{CJh}}Eh}{{Bd{dBb}}}}{{{f{c}}}d{}}0{{{f{CBf}}{f{CBb}}}{{Bd{bBb}}}}4?{{{f{CHn}}}{{l{Jd}}}}{{{f{CI`}}}{{l{Jd}}}}{{{f{BOb}}}{{Bd{{l{Jd}}Bb}}}}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}{{AF`{cgAEn}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{BDh}}}{{AF`{{Fn{{Cf{CJl}}}}D@jAEn}}}}{{{f{BAl}}}{{`{{Ch{}{{Cb{{Gj{{f{{AOj{AOh}}}}{f{Ed}}}}}}}}}}}}{{{f{BAl}}}{{`{Kf}}}}{{{f{ClBAl}}}{{`{Kf}}}}11{{{f{CGh}}}{{Bd{{C`{{Cf{Ch}}}}Bb}}}}{{BJfBHjd}BHj}{{BClBClccBGn}BCl{{Hf{{An{BHj}}}}}}{{BJhBHjd}BHj}{{{f{CNl}}{f{B@f}}eeBGn}{{Bd{B@fBb}}}{{Hf{Ab}}}{{Hb{}{{Cb{c}}}}}}{{{f{D@l}}{f{B@f}}{f{Ab}}{f{Ab}}CBl{C`{Ih}}{C`{Ef}}}{{Bd{B@fBb}}}}{{{f{D@n}}{f{B@f}}{f{Ab}}{f{Ab}}eeCBl{C`{Ih}}}{{Bd{B@fBb}}}{{Hf{Ab}}}{{Hb{}{{Cb{c}}}}}}{BClBId}{{{f{DA`}}{f{Ab}}d}{{Bd{{l{A`}}Bb}}}}{{{f{DA`}}{f{{l{A`}}}}d}{{Bd{{l{A`}}Bb}}}}{{BIdd}BId}`{CKbBHj}{DAbBHj}{{{f{CG`}}}{{f{{C`{{Fn{DAd}}}}}}}}``{{}BHj}{BClBCl}{BJhBHj}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}{{C`{c}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{BHjBHj}{DAfBCl}4{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{CO`Nj}BIb}`{{BClBClcc}BCl{{ANl{BHj}}}}{{{f{CNl}}{f{B@f}}ee}{{Bd{B@fBb}}}{{Hf{Ab}}}{{Hb{}{{Cb{c}}}}}}{{BIdc}BId{{Hf{{An{BHj}}}}}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}c}e{}{}{}}{{c{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}<{{{f{BJj}}}Ff};9{{{f{BDh}}}Ff}{{{f{BAl}}}Ff}{{{f{BBf}}}Ff}{{BClIj}BCl}{{{f{BJj}}Ff}B`}{{{f{BMh}}}d}`{BHjBJh}{cBHjDAh}{DAhBHj}{BDlBHj}{DAjBHj}{CFhBHj}{{BHjc}BHj{{ANl{BHj}}}}0``{{BIhd}BIh}{{{CKn{c}}d}{{CKn{c}}}BHh}```{BHjBHj}{{{f{DA`}}}{{l{Ej}}}}0{{{f{DA`}}{f{{An{B`}}}}}{{Bd{{l{j}}Bb}}}}{{{f{DA`}}GfCIn}{{Bd{{l{j}}Bb}}}}{{{f{DA`}}Gfd}{{Bd{B`Bb}}}}{{{f{DA`}}{f{{l{A`}}}}d}{{Bd{{l{A`}}Bb}}}}4{{{f{DA`}}}{{Bd{B`Bb}}}}{{{f{DA`}}}B`}01{{{f{DA`}}}{{Bd{{l{Ej}}Bb}}}}{{{f{DA`}}}{{l{j}}}}{{{f{DA`}}{f{B`}}}{{Bd{{l{j}}Bb}}}}{{{f{DA`}}GfFf}{{l{j}}}}{{{f{DA`}}Eh}{{Bd{{l{j}}Bb}}}}{{{f{DA`}}Al}B`}7{{{f{DA`}}}{{Bd{{l{j}}Bb}}}}01{{{f{{AGf{}{{Cb{c}}}}}}e}c{}{}}{{BHjc}BHj{{ANl{BHj}}}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{CO`Nj}BIb}21``````{{{f{AL`}}{f{AL`}}}{{Bd{{Gj{AL`AL`}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gj{{l{j}}{l{j}}}}Bb}}}}{{{f{Cl{Lh{ce}}}}}{{f{Clc}}}ABj{BIbABj}}{{BClcCFf{C`{{Lh{CL`}}}}{C`{{f{Ab}}}}}BCl{{Df{B@f}{{Dd{{Bd{B@fBb}}}}}}I`Ib}}{{DAbc}BHj{{Df{{f{Ab}}}{{Dd{{Bd{EfBb}}}}}}I`Ib}}{{BHjc{BIn{{Lh{BIl}}}}}BHj{{Df{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}}{{BHjBHjc{BIn{{Lh{BIl}}}}}BHj{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}}{{BHj{f{Clc}}{f{Cl}}}{{Bd{BHjBb}}}{{Dn{BHj{f{Cl}}}{{Dd{{Bd{BHjBb}}}}}}}}{{{f{BJl}}{C`{{f{Ef}}}}}{{Bd{MnBb}}}}{{{f{BJl}}c}{{Bd{MnBb}}}{{A@d{{f{Ed}}}{{Dd{Ed}}}}}}{c{{BIn{{Lh{BIl}}}}}{{Df{{f{Ed}}}{{Dd{Ed}}}}I`Ib}}{c{{BIn{{Lh{BIl}}}}}{{Df{{f{{An{{f{Ed}}}}}}}{{Dd{Ed}}}}I`Ib}}{{BHjc}BHj{{Dn{BHj}{{Dd{BHj}}}}}}{c{{BIn{{Lh{BIl}}}}}{{Df{{f{Mn}}}{{Dd{Mn}}}}I`Ib}}{{DAb{Lh{Df}}}BHj}{c{{BIn{{Lh{BIl}}}}}{{Df{{f{{An{Mn}}}}}{{Dd{Mn}}}}I`Ib}}:{{ce{BIn{{Lh{BIl}}}}}BHj{{Df{{f{Cl{An{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}{{Hf{{An{BHj}}}}}}{{BHjc{f{{An{BHj}}}}{BIn{{Lh{BIl}}}}}BHj{{Df{{f{Cl{An{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}}{{BHjBJb{f{{An{BHj}}}}dd}BHj}2{{{f{BJl}}}{{Bd{MnBb}}}}{{C@hc}C@h{{Df{C@j}{{Dd{C@j}}}}}}1111{CFhCFh}{{{C`{{f{{An{Ff}}}}}}{f{BBf}}{C`{{f{{An{B`}}}}}}{C`{{f{DAl}}}}}B@f}{{{C`{{f{{An{Ef}}}}}}{f{BAl}}{C`{{f{{An{B`}}}}}}d}{{C`{{Fn{Ff}}}}}}{{{f{Ab}}}BHj}{BJfBHj}{BClBCl}{BJhBHj}{{{f{AHh}}}{{C`{c}}}{}}{BHjBHj}{{{f{DAn}}}Ld}{{{f{BJj}}}{{Bd{LdBb}}}}``754{{{f{AHh}}}{{C`{Lf}}}}3{{{f{BJj}}}{{C`{Lf}}}}9876{{{f{AHj}}}{{C`{c}}}{}}51{{{f{DB`}}}Ld}4{{BClBD`}BCl}``{{{CKf{c}}{C`{CHb}}}{{CKf{c}}}BHh}{{{f{ClBAl}}BAl}b}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}{{{f{ClBAl}}{f{BAl}}}b}````{{{f{CIb}}}{{l{Jj}}}}`{{{f{BOb}}}{{Bd{{l{Jd}}Bb}}}}1`{{{f{Ab}}}BHj}{BJfBHj}{BClBCl}{BJhBHj}{{{f{AHh}}}{{C`{c}}}{}}{BHjBHj}{{{f{AHh}}}{{C`{{Gj{cc}}}}}{}}```{{{f{DAn}}}Ld}{{{f{BJj}}}{{Bd{LdBb}}}}``{{{f{D@b}}}{{l{Ll}}}}{{{f{CI`}}}{{l{Ll}}}}{{{f{BOb}}}{{Bd{{l{Ll}}Bb}}}}`=```6{{{f{CHn}}}{{l{Ll}}}}21`{{{f{BDl}}}Gf}{{{f{BDl}}}d}{{{BHl{}{{Dd{c}}}}{f{B`}}}c{}}{{BDlGf}BDl}{{BHjBHj}}{{{f{BHn}}{f{B`}}}{{Bd{B`Bb}}}}``{{{f{BJj}}}Ff}{{{f{CGh}}}{{C`{Ff}}}}{{{f{C@`}}}{{C`{Ff}}}}{{{f{BIh}}}{{C`{Ff}}}}`````{{{BLl{c}}Ff}{{BLl{c}}}BM`}`{BJfBHj}{BJhBHj}{{{f{AG`}}}{{Bd{FfBb}}}}{BHjBHj}{{{f{BJj}}}{{Bd{FfBb}}}}{{{f{BJj}}}{{f{Ab}}}}{BHjDAb}````33`{{{f{D@b}}}{{l{Jd}}}}{{{f{CI`}}}{{l{Jd}}}}{{{f{BOb}}}{{Bd{{l{Jd}}Bb}}}}{{{f{CIb}}}{{l{Jj}}}}{{{f{BDl}}}Gf}`{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{CJjNj}BIb}{{{f{CBf}}}d}{BDl}{BHj}{{{f{B`}}}{{Bd{B`Bb}}}}0{{{f{BDl}}}d}{{DBbFf}{{C`{Ff}}}}{{BHjc}BHj{{ANl{BHj}}}}0{{{f{BJl}}}{{Bd{MnBb}}}}{{}c{}}{cCKdBK`}{cCHfBM`}2{{{f{Ab}}c}DBd{}}{c{{AKd{c}}}{}}{BClBId}{c{{BHd{c}}}BHh}{c{{BLl{c}}}BM`}{{{f{{An{Mn}}}}}BJl}{c{{CKf{c}}}BHh}{c{{BJn{c}}}BK`}{c{{CKh{c}}}BM`}{{}CHd}{c{{BMb{c}}}BM`}{{}CHh}{c{{CKj{c}}}BM`}{GfBDl}{c{{CKl{c}}}BHh}{cC@`{{Hf{CM`}}}}{cBIh{{Hf{CM`}}}}{{BDlBDlBDl}C@d}{c{{CKn{c}}}BHh}{{DBf{Lh{CG`}}{Lh{BBf}}Ff{C`{{Fn{Ff}}}}{C`{{Lh{BHf}}}}{C`{DAl}}Ffd{C`{{Fn{B`}}}}CBh}{{Bd{BMhBb}}}}{c{{BMf{c}}}BHh}{c{{BMj{c}}}{BM`BM`}}{CBbBGn}{c{{BIn{c}}}{}}{{BHjBHjBHj}CEf}{{}CEh}{{{f{Ab}}{Fn{Mn}}{BIn{{Lh{BIl}}}}c}BNfBKb}{c{{Lh{c}}}{}}{{AEh{Fn{{Cf{Cd}}}}{C`{Hh}}}BDh}{{}BAl}{{cAEhd}ANn{{ANl{Ef}}}}{e{{Lh{c}}}{}{{A@d{{f{{CJ`{c}}}}}{{Dd{c}}}}}}{AEhBDh}{{{f{AHl}}FfFf}{{l{c}}}Db}{{{f{BJj}}FfFf}B`}{{{f{Ab}}}C@n}{{ce}{{Lh{ce}}}{}BIb}{{{f{BAl}}Ff{AOj{AOh}}Ed}{{Bd{BAlBb}}}}{{Gf{f{Ab}}}{{Bd{B`Bb}}}}{EfC@n}{{AEhFf}BDh}{{{Lh{{An{CHb}}}}}C@`}{{{Lh{{An{CHb}}}}}BIh}{AlC@n}``{{}{{Lh{{BLf{c}}}}}{}}{c{{Lh{{BLf{e}}c}}}BIb{}}{Ff{{Lh{{An{{BLf{c}}}}}}}{}}{{Ffc}{{Lh{{An{{BLf{e}}}}c}}}BIb{}}3210{{{f{ClDBh}}}C`}{{{f{ClCOf}}}C`}{{{f{ClBMn}}Ff}{{Bd{{C`{{Fn{B@f}}}}Bb}}}}{{{f{ClBLj}}Ff}{{Bd{{C`{{Fn{B@f}}}}Bb}}}}{{{f{ClBMh}}Ff}{{Bd{{C`{{Fn{B@f}}}}Bb}}}}{{{f{BHj}}{f{Cl{BE`{{f{BHj}}}}}}}b}{{BHj{f{Cl{BE`{BHj}}}}}b}{BHjBHj}0{{{f{{AGf{}{{Cb{c}}}}}}e}c{}{}}0{GfBHj}`{{}A@b}{{}Nl}`{{{f{BJj}}}Ff}{BClBCl}6`````{{{f{Cl{BMf{c}}}}}{{Bd{FfBb}}}BHh}````{{{f{AGh}}}{{Bd{{Gh{Gf}}Bb}}}}{{BIdc}BId{{Hf{{An{BHj}}}}}}{{BCl{f{Cl{BGh{BGf}}}}{f{Cl{BGh{BGj}}}}}{{Bd{BGdBb}}}}`{{BHjc}BHj{{ANl{BHj}}}}{{{f{CHn}}}{{l{Mf}}}}{{{f{CI`}}}{{l{Mf}}}}{{{f{BOb}}}{{Bd{{l{Mf}}Bb}}}}{{{f{BOb}}}{{Bd{{l{Jd}}Bb}}}}{{CDdc}BHj{{ANl{BHj}}}}{{CDhc}BHj{{ANl{BHj}}}}`{{BHje}BHj{{ANl{BHj}}ABj}{{Hf{{An{c}}}}}}{{BHje{C`{{Gj{eEh}}}}CFb}BHj{{ANl{BHj}}ABj}{{Hf{{An{c}}}}}}```{{{f{Ab}}}BDl}{{{f{Ab}}{f{{An{{f{Ab}}}}}}{f{Ab}}}{{Jh{JfJd}}}}{{{f{Ab}}{f{{An{{f{Ab}}}}}}{f{Ab}}}{{Jh{KhJj}}}}{{{f{Ab}}{f{{An{{f{Ab}}}}}}{f{Ab}}Jl}{{Jh{JnJj}}}}``{{{f{BDl}}{f{BDl}}}{{C`{B@`}}}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}{{C`{B@`}}}{CO`Nj}BIb}{{{f{CGh}}}{{f{CM`}}}}{{{f{C@`}}}{{f{CM`}}}}{{{f{BIh}}}{{f{CM`}}}}`{{{f{CGh}}}{{f{{An{CHb}}}}}}{{{f{C@`}}}{{f{{An{CHb}}}}}}{{{f{BIh}}}{{f{{An{CHb}}}}}}``{{}BHj}{c{{DBj{{Lh{c}}}}}{}}{{ce}{{DBj{{Lh{ce}}}}}{}BIb}````{{BHjc}BHj{{ANl{BHj}}}}```{{DAb{f{Ab}}}BHj}0{{{f{B@f}}{f{B@f}}d}{{Bd{{Gj{{On{{Fn{Ij}}{Fn{Nl}}}}{On{{Fn{A@b}}{Fn{Nl}}}}}}Bb}}}}`{{{f{DAn}}}Ld}{BHjBHj}{BCl{{Bd{{Gj{B@fB@f}}Bb}}}}```{{{f{{Lh{c}}}}{f{ClDBl}}}b{AJlNj}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}dNjBIb}{{{f{Ab}}BHjNd}BHj}{{BClBHjNd}BCl}{{{f{AHj}}LfNd}{{Bd{{C`{c}}Bb}}}{}}{{BHjBHjNd}BHj}{{{f{DB`}}LfNd}{{Bd{LdBb}}}}{{{f{BJj}}LfNd}{{Bd{LdBb}}}}{{{f{CHn}}}{{l{Ll}}}}{{{f{CI`}}}{{l{Ll}}}}{{{f{BOb}}}{{Bd{{l{Ll}}Bb}}}}{{{f{Clc}}e}{{Bd{{f{Clg}}BAd}}}{}CK`{}}````{{{f{DBn}}CCn{C`{Jb}}}B`}{{BHjCCn{C`{Jb}}}BHj}{{{f{Cl{Lh{AE`}}}}{f{Cl{An{Al}}}}}{{Bd{FfBAd}}}}{{{f{Cl{Lh{AE`}}}}DC`}{{Bd{bBAd}}}}{{{BMf{c}}CBh}{{BMf{c}}}BHh}{{{f{Cl{Lh{AE`}}}}{f{Cl{Fn{Al}}}}}{{Bd{FfBAd}}}}{{{f{Cl{Lh{AE`}}}}{f{ClEf}}}{{Bd{FfBAd}}}}{{{f{Clc}}}{{Bd{eBAd}}}{}DCb}{{{f{Cl{Lh{AE`}}}}{f{Cl{An{DCd}}}}}{{Bd{FfBAd}}}}{{{f{CGh}}}d}{{{f{BJj}}}B`}{{{f{C@`}}}d}{{{f{BIh}}}d}````{{ce}BHj{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`IbABj}{{Hf{{An{BHj}}}}}}{{{f{AHn}}}B`}0{{{BHl{}{{Dd{c}}}}{f{B`}}}c{}}{{BHjBHj}}{{{f{BHn}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{ClBAl}}{f{Ab}}}{{C`{Ed}}}}{{{f{ClBJj}}{f{Ab}}}b}{{BClei}BCl{{Hf{Ab}}}{{Hb{}{{Cb{c}}}}}{{Hf{Ab}}}{{Hb{}{{Cb{g}}}}}}{{{f{ClBAl}}{f{Ab}}{AOj{AOh}}}{{C`{{AOj{AOh}}}}}}{{CKb{Fn{Ef}}}BHj}{{cBHj}BHj{{ANl{BHj}}}}{{{f{B`}}{f{{l{Ej}}}}}{{Bd{{l{j}}Bb}}}}{{BHjc}BHj{{ANl{BHj}}}}{{{f{B`}}{f{B`}}{f{B`}}{f{B`}}{C`{Ed}}}{{Bd{B`Bb}}}}{{{f{BLh}}{f{Ab}}{f{Ab}}}{{Bd{{l{A`}}Bb}}}}{{BHjcc{C`{c}}{C`{Ed}}}BHj{{ANl{BHj}}}}1{{{f{BJl}}{C`{Ed}}}{{Bd{MnBb}}}}{{{f{BLh}}{f{Ab}}{f{Ab}}Ff}{{Bd{{l{A`}}Bb}}}}3{{{f{{Jh{JnJj}}}}{C`{{f{Ab}}}}{f{{l{A`}}}}CGf}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{ClBAl}}Ff}b}{{BHj{f{{An{Gf}}}}CFd}BHj}{{{f{CM`}}}CHb}`{{{f{AI`}}}AI`}{{{f{BJj}}}B`}{BJfBHj}{BClBCl}{BJhBHj}{BHjBHj}`{{BIdc}BId{{Hf{{An{BHj}}}}}}{{{f{COj}}{Fn{B`}}{f{BDb}}}{{Bd{{Gj{B`{Fn{B`}}Bj}}Bb}}}}{{BClBHjcBDb}BI`{{Hf{{An{BHj}}}}}}{{BHjBDb}BHj}{{{f{AIb}}{f{Df}}Nf}{{Bd{B`Bb}}}}{{BHj{Lh{Df}}{BIn{{Lh{BIl}}}}Nf}BHj}{{{f{BJj}}{f{Df}}Nf}{{Bd{B`Bb}}}}{{BHjFfc}BHj{{Dn{{f{Cl{l{E`}}}}}{{Dd{{C`{Lf}}}}}}I`IbDh}}{{{f{DCf}}Nf}{{Bd{B`Bb}}}}{{BHjNf}BHj}{{{f{DCf}}{f{B`}}BOf}{{Bd{B`Bb}}}}{{BHjBHjBOf}BHj}32102032103{{BHjNdLfNf}BHj}2{{BHjBHjNdLfBOf}BHj}543254325432{{{f{DCh}}{f{{l{A`}}}}{C`{{f{AKj}}}}}{{Bd{DChBb}}}}{{{f{BO`}}Ij}{{Bd{B`Bb}}}}{{BHjIj}BHj}{{{f{C@d}}Gf{C`{{f{AKj}}}}}{{Bd{GfBb}}}}0{{{f{BO`}}Mb}{{Bd{B`Bb}}}}{{BHjMb}BHj}2````{{{f{CGh}}}{{C`{{f{DAl}}}}}}{{{f{C@`}}}{{C`{{f{DAl}}}}}}{{{f{BIh}}}{{C`{{f{DAl}}}}}}``````{{{f{DA`}}{l{j}}}{{l{j}}}}{{}{{BIn{{Lh{BIl}}}}}}{{BHjBHjdd{C`{Jb}}}BHj}0`{{{f{BIf}}DCj}{{Bd{B@fBb}}}}{{{f{BIh}}DCj}{{Bd{B@fBb}}}}{{cC@b}{{Bd{BClBb}}}{{Hf{CM`}}}}{{{Lh{{An{CHb}}}}C@b}{{Bd{BClBb}}}}{{cC@f}{{Bd{BClBb}}}{{Hf{CM`}}}}{{{Lh{{An{CHb}}}}C@f}{{Bd{BClBb}}}}{{DCl{f{{An{Ij}}}}e}{{Bd{B`Bb}}}Dh{{Hb{}{{Cb{{C`{c}}}}}}}}{{{f{AId}}c{C`{e}}}{{Bd{AIdBb}}}{{Hb{}{{Cb{Ij}}}}}{}}{{{f{AId}}ci}{{Bd{AIdBb}}}{{Hb{}{{Cb{Ij}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{g}}}}}}}}{{{f{Cl{CKf{c}}}}}{{Bd{{Lh{BBf}}Bb}}}BHh}{{{f{Cl{BJn{c}}}}}{{Bd{BAlBb}}}BK`}{{{f{ClBCl}}}{{Bd{{Lh{BAl}}Bb}}}}{{{f{BIh}}{C`{Ff}}}{{Bd{{Lh{BAl}}Bb}}}}{{{f{BMh}}}{{f{{Lh{BBf}}}}}}{{{f{Cl{BMf{c}}}}}{{Bd{{Lh{BBf}}Bb}}}BHh}{{{f{BIf}}{C`{Ff}}}{{Bd{{Lh{BAl}}Bb}}}}{{{f{CG`}}}{{f{DCn}}}}``````{{{f{ClBCl}}{f{Cl{BGh{BGf}}}}{f{Cl{BGh{BGj}}}}}{{Bd{{Lh{BAl}}Bb}}}}`{{{f{D@b}}}{{l{Ll}}}}{{{f{CI`}}}{{l{Ll}}}}{{{f{BOb}}}{{Bd{{l{Ll}}Bb}}}}`{{{f{CIb}}}{{l{Jj}}}}`{{{f{Cl{Lh{AE`}}}}DD`}{{Bd{JbBAd}}}}{{BClc}BCl{{Hf{{An{BHj}}}}}}0````{{{f{AId}}{f{{l{Aj}}}}{C`{c}}}{{Bd{AIdBb}}}{}}{{{f{BCl}}{BGh{BGf}}{BGh{BGj}}}b}{{{f{ClBAl}}{f{Ab}}Ed}{{C`{Ed}}}}{{{f{ClBAl}}FfEd}{{C`{Ed}}}}{{{BMf{c}}d}{{BMf{c}}}BHh}{{{BMj{c}}d}{{BMj{c}}}BM`}{{{CKf{c}}d}{{CKf{c}}}BHh}{{{BJn{c}}d}{{BJn{c}}}BK`}{{{CKl{c}}d}{{CKl{c}}}BHh}4{{CKdd}CKd}{{BHjKl}BHj}{{{f{ClBDh}}{C`{Hh}}}b}{{{f{AIf}}Gf}{{l{c}}}Db}{{{f{BJj}}Gf}B`}{{BJfBHj}BHj}{{BClc}BCl{{ANl{BHj}}}}{{BJhBHj}BHj}{{BHjBHj}BHj}{{{f{AIh}}Gfc}{{l{e}}}{}Db}{{BClce}BCl{{ANl{BHj}}}{{ANl{BHj}}}}{{BHjce}BHj{{ANl{BHj}}}{{ANl{BHj}}}}{{{f{ClBAl}}{f{Ab}}}{{C`{Ed}}}}{{{f{ClBAl}}Ff}{{C`{{Gj{{AOj{AOh}}Ed}}}}}}{{{f{BGn}}}d}{BHjBHj}{{{f{ClAAh}}}b}{{{f{ClBJj}}}b}{{BHj{C`{Jb}}}BHj}``{{BClCHbCAb}{{Bd{bBb}}}}{{BClCHbCAj}{{Bd{bBb}}}}{{BClCHbCAn}{{Bd{bBb}}}}{{BClCHbCBn}{{Bd{bBb}}}}`````{{{f{BJj}}GfFf}B`}{{BClGfIj}BCl}{{BJhBHjBHj}BHj}>{{{f{ClBDh}}FfFf}b}0```{{{f{AIj}}FfFf}AIj}{{{f{c}}FfFf}e{}{}}1022{{BDhFfFf}BDh}0`{{{f{AFn}}d}{{l{c}}}Db}{{BJfEh}BHj}{{BClcEn}BCl{{BCn{{AOj{AOh}}}}}}{{BJhEh}BHj}{{BHjEh}BHj}{{BHjeEn}BHj{{ANl{BHj}}ABj}{{Hf{{An{c}}}}}}{{BClcEn}BCl{{Hf{{An{BHj}}}}}}{{{f{AFn}}Eh}{{l{c}}}Db}{{{f{BJj}}Eh}{{Bd{B`Bb}}}}{{{f{{Lh{c}}}}}{{C`{{f{AJl}}}}}{AJlNj}}{{{f{BLh}}{f{{l{A`}}}}}{{l{j}}}}{{{f{BJj}}Gf}{{Gj{B`B`}}}}{{{f{BDh}}Ff}{{Gj{{Cf{Cd}}{Cf{Cd}}}}}}0{{{f{BLh}}{f{{l{A`}}}}Ff}{{Bd{AKnBb}}}}0{{{f{{l{A`}}}}{f{{l{A`}}}}e}{{l{j}}}{{Ch{}{{Cb{{f{Ab}}}}}}}{{Df{{f{Ab}}{f{Ab}}}{{Dd{c}}}}}}4{{{f{{l{A`}}}}{f{{l{A`}}}}Ffed}{{Bd{AKnBb}}}{{Ch{}{{Cb{{f{Ab}}}}}}}{{Df{{f{Ab}}{f{Ab}}}{{Dd{c}}}}}}2{BHjBHj}`{{{f{CH`}}{f{{An{Al}}}}}{{l{Aj}}}}{{{f{CH`}}{f{{l{n}}}}}{{l{Aj}}}}`{{BJfAl}BHj}{{BClAl}BCl}{{BJhAl}BHj}{{{f{AIl}}Al}{{C`{Lf}}}}{{BHjAl}BHj}{{{f{BJj}}Al}{{C`{Lf}}}}{{{f{DDb}}Al}Ld}{{{f{BJj}}Al}{{Bd{LdBb}}}}{{IjIj}Nl}{BHjDDd}{{{f{BLh}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{A`}}}}{f{Ab}}d}{{l{A`}}}}{{{f{BLh}}}{{l{Ej}}}}0{{{f{BLh}}}{{l{A`}}}}{{{f{BLh}}{f{B`}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}4````{{{f{BOb}}{f{Ab}}}{{Bd{B`Bb}}}}`{{BHjEd}BHj}`{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{A`}}}}707070{{{f{BLh}}{f{{l{A`}}}}}{{l{A`}}}}10{{{f{{Lh{ce}}}}}FfNjBIb}{BHjCKb}{{{BHl{}{{Dd{c}}}}{f{B`}}}c{}}{{BHjBHj}}{{{f{BHn}}{f{B`}}}{{Bd{B`Bb}}}}{{BIdc}BId{{Hf{Ab}}}}{{DAb{f{Ab}}}BHj}{{{f{BGn}}}{{f{Ab}}}}`1{{{f{Ab}}}BHj}{BJfBHj}{BClBCl}{BJhBHj}{{{f{AHh}}}{{C`{c}}}{}}{BHjBHj}{{{f{DAn}}}Ld}{{{f{BJj}}}{{Bd{LdBb}}}}{{}{{BIn{{Lh{BIl}}}}}}{{{f{Clc}}i}{{Bd{gBAd}}}{}{}{}{{A@d{{f{Cle}}}{{Dd{g}}}}}}{{BClIj}BCl}{{BI`{C`{Ff}}}BCl}{{BJhBHj}BHj}{{BHj{C`{Ff}}}BHj}{{{f{AIn}}{f{c}}}{{Bd{AInBb}}}Nj}{{{f{BJj}}{f{{l{Ej}}}}}{{Bd{B`Bb}}}}{{{f{DDf}}{f{{An{Nl}}}}Kl}DDf}{{{f{DDf}}{f{{An{Nl}}}}}DDf}{{{f{BJj}}{f{{An{Ij}}}}}{{Bd{B`Bb}}}}{{{f{BJj}}{f{{An{Ij}}}}}B`}{{{f{AJ`}}{f{c}}}AJ`Nj}{{{f{BJj}}{f{{l{Ej}}}}}B`}{{{f{ClBDh}}}{{C`{Hh}}}}{{BHjBHjBHj}BHj}{{CDbc}CDd{{ANl{BHj}}}}{{CDfc}CDh{{ANl{BHj}}}}`{{BHjBHjBDlBOj}BHj}```{{{f{BOb}}Jl}{{Bd{{l{Jj}}Bb}}}}{BCl{{Bd{DDhBb}}}}{CD`{{Bd{DDhBb}}}}1{{{f{CFh}}}{{C`{Ih}}}}{{BJhFf}BHj}{{{f{BAl}}d}BBf}{{{f{BDh}}}{{Cf{Cd}}}}{{{f{AJb}}}{{Fn{{f{{An{Al}}}}}}}}{{{f{BCl}}d}{{Bd{EfBb}}}}{{{f{DDj}}{C`{{f{Ab}}}}d}{{Bd{B@fBb}}}}{{{f{BHb}}{C`{{f{Ab}}}}d}{{Bd{B@fBb}}}}{{{f{BHj}}{f{BAl}}COb}{{Bd{MnBb}}}}{{{f{BLh}}{f{{l{Ej}}}}d}{{Bd{{l{Jj}}Bb}}}}{BJfBHj}{{{f{BLh}}}{{l{A`}}}}{DAbBHj}{{{f{A@b}}}{{C`{Ij}}}}{{{f{c}}}e{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BHjBHj}{{{f{BJl}}}{{Bd{MnBb}}}}{{{f{BOb}}{f{Ab}}}{{Bd{B`Bb}}}}{{{f{c}}}Ef{}}00000000000{{{f{ClBAl}}{f{BAl}}}{{Bd{dBb}}}}`887``{{BClIjcEn}BCl{{Hf{{An{BHj}}}}}}{{{f{BDh}}{f{BDh}}}Hh}{{{f{BDh}}f}Hh}00101010{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}g{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}c}g{}{}{}}{{c{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}g{}{}{}}{{{f{DDl}}{C`{{f{AKj}}}}{f{{l{A`}}}}}{{Bd{DDlBb}}}}{{{f{BDl}}Gf{C`{{f{AKj}}}}ceg}{{Bd{GfBb}}}{{Df{Gf}{{Dd{Gf}}}}}{{Df{Gf}{{Dd{AKh}}}}}{{Df{AKh}{{Dd{Gf}}}}}}{{{f{BDl}}Gf{C`{{f{AKj}}}}}{{Bd{GfBb}}}}{{{f{C@d}}Gf{C`{{f{AKj}}}}}{{Bd{GfBb}}}}10`10{g{{Bd{ALde}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{{AEhg}{{Bd{ALfe}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{ANf{{Bd{eg}}}{}{{ALd{c}}AJh}{}}0{{ANfAEh}{{Bd{eg}}}{}{{ALf{c}}AJh}{}}0{{ACb{f{Ab}}}{{Bd{{l{c}}e}}}Db{}}{{ACd{f{{l{c}}}}}{{Bd{{l{c}}e}}}Db{}}10{{ACd{f{Ab}}Ed}{{Bd{{l{c}}e}}}Db{}}0{c{{Bd{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Ih{{Bd{CFhBb}}}}111111{{{Lh{{An{c}}e}}}{{Bd{{Lh{{Of{c}}e}}}}}{}BIb}222222222222{D@h{{Bd{CG`BAh}}}}{{{f{BAl}}{f{Ab}}}{{Bd{{f{Ed}}Bb}}}}{{{f{BAl}}Ff}{{Bd{{Gj{{f{{AOj{AOh}}}}{f{Ed}}}}Bb}}}}{{{f{BAl}}{f{Ab}}}{{Bd{MnBb}}}}{{{f{BAl}}{f{Ab}}}{{Bd{{Gj{Ff{f{{AOj{AOh}}}}{f{Ed}}}}Bb}}}}{{{f{ClBAl}}{f{Ab}}}{{Bd{{f{ClEd}}Bb}}}}{{{f{COd}}{f{Ab}}}{{Bd{FfBb}}}}9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999{{C@h{C`{CHb}}}{{Bd{{BHd{AE`}}Bb}}}}{{{f{BJl}}c}{{Bd{MnBb}}}{{A@d{{f{Ed}}}{{Dd{{Bd{EdBb}}}}}}}}{{{f{BJl}}c}{{Bd{MnBb}}}{{A@d{{f{{An{{f{Ed}}}}}}}{{Dd{{Bd{EdBb}}}}}}}}{{BHjc}{{Bd{BHjBb}}}{{Dn{BHj}{{Dd{{Bd{BHjBb}}}}}}}}{{{f{BJl}}c}{{Bd{MnBb}}}{{A@d{{f{Mn}}}{{Dd{{Bd{MnBb}}}}}}}}{{DBbFf}{{Bd{FfBb}}}}{Al{{Bd{CCfBb}}}}{Ij{{Bd{CChBb}}}}{Mb{{Bd{CClBb}}}}{c{{Bd{{Lh{c}}DDn}}}{}}{{AEh{Fn{{Cf{Cd}}}}{C`{Hh}}}{{Bd{BDhBb}}}}{{ce}{{Bd{{Lh{ce}}DDn}}}{}BIb}{{}{{Bd{{Lh{{BLf{c}}}}DDn}}}{}}{c{{Bd{{Lh{{BLf{e}}c}}DDn}}}BIb{}}10`{c{{Bd{{DBj{{Lh{c}}}}DDn}}}{}}{{ce}{{Bd{{DBj{{Lh{ce}}}}DDn}}}{}BIb}{{{f{BKb}}{f{Cl{Fn{Al}}}}}{{Bd{bBb}}}}{{{Lh{ce}}}{{Bd{c{Lh{ce}}}}}{}BIb}``{{{f{c}}}A@`{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Ab}}}}`{{{f{AG`}}}{{Bd{AG`Bb}}}}{BJfBHj}{{BCl{C`{{Fn{Ef}}}}BBb}BCl}{BJhBHj}{BHjBHj}{{{f{BJj}}}{{Bd{B`Bb}}}}4321{{BCle}BCl{{Hf{Ab}}}{{Hb{}{{Cb{c}}}}}}{{{Lh{{DE`{c}}}}}{{Bd{cb}}}I`}{{{Lh{ce}}}cABjBIb}{{{f{ClC@h}}{f{DEb}}}b}5{{{f{DEd}}c{f{Ab}}BDl}{{Bd{B@fBb}}}{{BCn{Ef}}}}0{{{BMf{c}}d}{{BMf{c}}}BHh}```{{BIdCBf}BId}`{{{f{BDh}}}{{C`{{f{Hh}}}}}}0{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}Ff}cABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{CJh}}ddEfd}{{Bd{B@fBb}}}}{{BHjddEfd}BHj}`2`{{{f{BDh}}}{{f{{An{{Cf{Cd}}}}}}}}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}gABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{BDh}}}D@j}{{BJfAl}BHj}{{BClAl}BCl}{{BJhAl}BHj}{{{f{AIl}}Al}{{C`{Lf}}}}{{BHjAl}BHj}{{{f{BJj}}Al}{{C`{Lf}}}}{{{f{DDb}}Al}Ld}{{{f{BJj}}Al}{{Bd{LdBb}}}}`{{{f{DEf}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{DEf}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}`{{{f{{Lh{{DE`{c}}}}}}g}{{Bd{eb}}}I`{}{{A@d{{f{c}}}{{Dd{e}}}}}}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Lh{ce}}}}}FfNjBIb}{{{f{CHn}}}{{l{Ll}}}}{{{f{CI`}}}{{l{Ll}}}}{{{f{BOb}}}{{Bd{{l{Ll}}Bb}}}}210{{{f{BOn}}}{{C`{Ij}}}}{{{f{BDl}}}Gf}`{{{f{BDl}}}d}`{cCDb{{ANl{BHj}}}}{{CDdc}CDf{{ANl{BHj}}}}{{CDhc}CDf{{ANl{BHj}}}}```{{BIdBCl}BId}{{CEfBHj}CEf}{{{BLl{c}}{D@d{Ff}}}{{BLl{c}}}BM`}{{{CKl{c}}{D@d{Ff}}}{{CKl{c}}}BHh}{{BIh{C`{{D@d{Ff}}}}}BIh}{{C@`d}C@`}{Ffc{}}0{FfBAl}{{{CKn{c}}{C`{{D@d{Ff}}}}}{{CKn{c}}}BHh}{{C@hFf}C@h}{{C@`{C`{CGj}}}C@`}{{BCld}BCl}{{BGnCB`}BGn}{{BClBHj}BCl}{{{f{ClBAl}}{AOj{AOh}}Ed}{{C`{Ed}}}}{{{CKf{c}}{C`{{Fn{Ef}}}}}{{CKf{c}}}BHh}{{{BJn{c}}{C`{{Fn{Ef}}}}}{{BJn{c}}}BK`}{{BClc}BCl{{Hf{{An{BHj}}}}}}{{{BMf{c}}{C`{{Fn{Ef}}}}}{{BMf{c}}}BHh}{{C@h{C`{{Lh{{An{Ef}}}}}}}C@h}`2{{C@`{C`{{f{Ab}}}}}C@`}{{C@j{C`{c}}}C@j{{ANl{C@n}}}}{{{CKh{c}}{C`{CAl}}}{{CKh{c}}}{}}{{CHd{C`{CAl}}}CHd}{{{BMb{c}}{C`{CAl}}}{{BMb{c}}}BM`}{{CHh{C`{CAl}}}CHh}{{{BMj{c}}CC`}{{BMj{c}}}BM`}{{BClc}BCl{{Hf{{An{BCl}}}}}}{{{BMj{c}}{C`{Ff}}}{{BMj{c}}}BM`}{{{BLl{c}}{C`{Ef}}}{{BLl{c}}}BM`}0{{CEfBHj}CEf}{{CEhBHj}CEh}{{C@`d}C@`}{{C@jd}C@j}{{{f{BJl}}Ed}{{Bd{MnBb}}}}{{C@`{C`{{Lh{BAl}}}}}C@`}{{C@h{C`{{Lh{{Fn{Ed}}}}}}}C@h}{{C@`C@l}C@`}{{C@jC@l}C@j}{{C@`Al}C@`}{{C@jAl}C@j}{{CHdCHb}CHd}{{CHhCHb}CHh}{{CKb{Fn{BHj}}}BHj}{{{BLl{c}}{C`{Ff}}}{{BLl{c}}}BM`}{{CEhBHjBHjBHj}CEh}=={{C@hd}C@h}{{{BMf{c}}{C`{{Fn{B`}}}}}{{BMf{c}}}BHh}{{CEfBHjBHjBHj}CEf}3{{CEfBHj}CEf}{{CEhBHj}CEh}{{{CKl{c}}d}{{CKl{c}}}BHh}{{C@`d}C@`}{{BIhd}BIh}{{{CKn{c}}d}{{CKn{c}}}BHh}8{{C@`{C`{Ff}}}C@`}{{BIh{C`{Ff}}}BIh}{{C@h{C`{Ff}}}C@h}{{{CKj{c}}DEh}{{CKj{c}}}BM`}{{{CKl{c}}DEh}{{CKl{c}}}BHh}{{{BLl{c}}Ef}{{BLl{c}}}BM`}8>{{ANn{DEj{EfEf}}}ANn}{{BBf{DEj{EfEf}}}BBf}=<<=<:{{C@jd}C@j}>{{CGhc}CGh{{ANl{{C`{Ff}}}}}}{{{CKf{c}}{C`{Ff}}}{{CKf{c}}}BHh}{{{BJn{c}}{C`{Ff}}}{{BJn{c}}}BK`}{{C@`c}C@`{{ANl{{C`{Ff}}}}}}<;{{BIhc}BIh{{ANl{{C`{Ff}}}}}}{{{CKn{c}}{C`{Ff}}}{{CKn{c}}}BHh}{{{BMf{c}}{C`{Ff}}}{{BMf{c}}}BHh}=1={{CEhBHj}CEh}{{BCld}BCl}<{{C@`{C`{CA`}}}C@`}{{C@j{C`{CA`}}}C@j}{{BClCFf}BCl}{{C@hC@j}C@h}{{CGhCHb}CGh}{{C@`CHb}C@`}{{BIhCHb}BIh}{{{CKn{c}}{C`{e}}}{{CKn{c}}}BHh{{ANl{CHb}}}}{{C@h{C`{c}}}C@h{{ANl{CHb}}}}{{CGh{Lh{{An{CHb}}}}}CGh}{{C@`{Lh{{An{CHb}}}}}C@`}{{BIh{Lh{{An{CHb}}}}}BIh}{{{CKh{c}}d}{{CKh{c}}}{}}{{{BMb{c}}d}{{BMb{c}}}BM`}{{{BMf{c}}{C`{{Lh{BHf}}}}}{{BMf{c}}}BHh}?{{{CKf{c}}{C`{{Fn{Ff}}}}}{{CKf{c}}}BHh}{{{BJn{c}}{C`{{Fn{Ff}}}}}{{BJn{c}}}BK`}{{{CKl{c}}{C`{{Fn{Ef}}}}}{{CKl{c}}}BHh}{{{BMf{c}}{C`{{Fn{Ff}}}}}{{BMf{c}}}BHh}{{C@h{C`{{Lh{{Fn{Ff}}}}}}}C@h}{{BCld}BCl}{{{BLl{c}}Al}{{BLl{c}}}BM`}{{C@`{C`{Al}}}C@`}{{C@j{C`{Al}}}C@j}{{{BLl{c}}CAf}{{BLl{c}}}BM`}{{C@`d}C@`}{{C@hd}C@h}{{CGhd}CGh}2{{BIhd}BIh}{{{CKn{c}}d}{{CKn{c}}}BHh}39{{{BMj{c}}{C`{Ff}}}{{BMj{c}}}BM`}{{CGhc}CGh{{ANl{{C`{DAl}}}}}}{{{CKf{c}}{C`{DAl}}}{{CKf{c}}}BHh}{{{BJn{c}}{C`{DAl}}}{{BJn{c}}}BK`}{{BCl{f{Ab}}{C`{Ij}}}BCl}{{C@`c}C@`{{ANl{{C`{DAl}}}}}}{{C@`{C`{DAl}}}C@`}{{BIhc}BIh{{ANl{{C`{DAl}}}}}}{{BIh{C`{DAl}}}BIh}{{{BMf{c}}{C`{DAl}}}{{BMf{c}}}BHh}{{C@h{C`{DAl}}}C@h}{{{f{BJl}}}{{Bd{MnBb}}}}{{C@hFf}C@h}{{{CKl{c}}{Lh{BAl}}}{{CKl{c}}}BHh}{{C@`{C`{{Lh{BAl}}}}}C@`}{{BIh{C`{{Lh{BAl}}}}}BIh}{{{CKn{c}}{Lh{BAl}}}{{CKn{c}}}BHh}{{{BMf{c}}{C`{{Lh{BBf}}}}}{{BMf{c}}}BHh}{{C@h{C`{{Lh{BAl}}}}}C@h}{{C@`c}{{Bd{C@`Bb}}}{{Df{BAl}{{Dd{{Bd{BAlBb}}}}}}}}{{{CKl{c}}{f{BAl}}}{{CKl{c}}}BHh}{{{CKn{c}}{f{BAl}}}{{CKn{c}}}BHh}3{{CEfBHj}CEf}{{CEhBHj}CEh}{{{BLl{c}}Al}{{BLl{c}}}BM`}{{C@`Al}C@`}{{C@jAl}C@j}{{BCld}BCl}{{C@`Ff}C@`}{{C@hFf}C@h}102{{{BMj{c}}CFl}{{BMj{c}}}BM`}3{{BGn{C`{Ef}}}BGn}{{{BLl{c}}{C`{Ef}}}{{BLl{c}}}BM`}{{CEfJl}CEf}{{CEf{C`{Ef}}}CEf}{{C@`d}C@`}{{C@jd}C@j}109{{{f{BDh}}{C`{Hh}}}{{Cf{Cd}}}}{{BDh{C`{Hh}}}BDh}{{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}{C`{Hh}}}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{CEhBHj}CEh}{{CEfBHj}CEf}{BClBCl}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}c}e{}{}{}}10{{c{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}210213210210{{{f{Cl{Lh{AE`}}}}{f{{An{Al}}}}}{{Bd{FfBAd}}}}{{{f{Clc}}e}{{Bd{FfBAd}}}{}DCb}{{{f{Cl{Lh{AE`}}}}{f{{An{DEl}}}}}{{Bd{FfBAd}}}}{{BHjc}BHj{{ANl{BHj}}}}{{{f{CHn}}}{{l{Jd}}}}{{{f{CI`}}}{{l{Jd}}}}{{{f{BOb}}}{{Bd{{l{Jd}}Bb}}}}``{{{f{AJd}}{f{{l{Aj}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{BDn}}c}B`{{Df{{Gj{Ij{f{{BE`{Ij}}}}}}}{{Dd{C`}}}}I`Ib}}{{{f{BDn}}c}B`{{Df{{Gj{Ij{f{{BE`{Ij}}}}}}}{{Dd{}}}}I`Ib}}{{{f{{An{{Of{Ij}}}}}}c}B`{{Df{{Of{Ij}}}{{Dd{C`}}}}I`Ib}}{{{f{{An{{Of{Ij}}}}}}c}B`{{Df{{Of{Ij}}}{{Dd{}}}}I`Ib}}{{{f{{An{c}}}}e{C`{{Lh{AEj}}}}}{{AK`{c}}}{BFfBFh}{{Ch{}{{Cb{{Gj{IjIj}}}}}}If}}{{{f{{An{c}}}}{f{Hh}}e{C`{{Lh{AEj}}}}}{{AK`{c}}}{BFfBFh}{{Ch{}{{Cb{{Gj{IjIj}}}}}}If}}{{{f{{l{c}}}}IjIj}{{l{c}}}Db}{{{f{{Fn{{Of{Ij}}}}}}{f{{An{{Cf{Cd}}}}}}}d}{{{f{BFj}}{f{Bj}}}B`}{{BFlBFl}BFl}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DbDb{{Df{ff}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}Db}{{{l{c}}{l{e}}gik}{{l{m}}}DbDb{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DbDb{{AJf{C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}g}bDbDb{{Dn{C`C`}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDb{}{{Dn{}{{Dd{g}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Ab}}}{{l{k}}}DbDb{CdAJh}{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Ab}}}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DbDbCd{{Dn{}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDb{}{}{{Dn{C`C`}{{Dd{{Bd{{C`{g}}i}}}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DbDbDb{{AJj{C`C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDbCdAJl{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{H`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Ab}}}{{Bd{{l{m}}i}}}DbDbCdAJl{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DbDbAJl{{Dn{ff}{{Dd{{Bd{{Cf{Cd}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DbDbDb{}{}{{Dn{C`C`C`}{{Dd{{Bd{{C`{i}}k}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{CdAJh}AJl{{Dn{f}{{Dd{{Bd{eg}}}}}}}{{Db{}{{H`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Db{{AJn{C`}}}Db}{{{f{{l{c}}}}e}{{l{g}}}DbAJnDb}{{{f{{l{c}}}}g}{{l{i}}}DbCd{{Dn{f}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}{{{l{c}}g}{{l{i}}}DbCd{{Dn{}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{CdAJh}{{Dn{f}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}0``{{{f{DEn}}}{{l{Ej}}}}0{{{f{DEn}}{f{{l{Jj}}}}d}{{Bd{B`Bb}}}}{{{f{DEn}}{f{{l{A`}}}}d}{{Bd{B`Bb}}}}{{{f{DEn}}}B`}{{{f{DEn}}}{{Bd{B`Bb}}}}1{{{f{DEn}}}{{Bd{{l{Ej}}Bb}}}}{{{f{DEn}}}{{l{Bn}}}}{{{f{DEn}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{DEn}}Eh}{{Bd{{l{Bn}}Bb}}}}{{{f{DEn}}Al}{{Bd{B`Bb}}}}5{{{f{DEn}}}{{Bd{{l{j}}Bb}}}}01{{{f{DF`}}}{{f{{l{Bn}}}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{BN`BHj}BHj}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}3{cc{}}{{}Ff}{ce{}{}}6{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}2````````{{{f{BKf}}{C`{{f{Ab}}}}d}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKf}}{C`{{f{Ab}}}}}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKf}}{C`{{f{Ab}}}}Jldd{C`{{f{Ef}}}}{f{{l{A`}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{BKf}}{C`{{f{Ab}}}}Jld{C`{{f{Ef}}}}{f{{l{A`}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{BKf}}{C`{{f{Ab}}}}d}{{Bd{{Jh{KhJj}}Bb}}}}`{{{f{CHn}}}{{l{Ll}}}}{{{f{CI`}}}{{l{Ll}}}}{{{f{CIb}}}{{l{Jj}}}}`{{{f{D@b}}}{{l{Ll}}}}21{{{f{CHn}}}{{l{Aj}}}}{{{f{CI`}}}{{l{Aj}}}}{{{f{CHn}}}{{l{Jd}}}}{{{f{CI`}}}{{l{Jd}}}}55`46576{{{f{D@b}}}{{l{Jd}}}}16{{{f{CHn}}}{{l{Mf}}}}{{{f{CI`}}}{{l{Mf}}}}{{{f{Ab}}{f{{An{{f{Ab}}}}}}{f{Ab}}}{{Jh{JfJd}}}}{{{f{Ab}}{f{{An{{f{Ab}}}}}}{f{Ab}}}{{Jh{KhJj}}}}{{{f{Ab}}{f{{An{{f{Ab}}}}}}{f{Ab}}Jl}{{Jh{JnJj}}}}=<{{{f{DCf}}Nf}{{Bd{B`Bb}}}}{{{f{DCf}}{f{B`}}BOf}{{Bd{B`Bb}}}}101010101010<>=`?>?>`98````````{{{f{c}}h}b{}}{{{f{BKf}}{C`{{f{Ab}}}}d}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKf}}{C`{{f{Ab}}}}}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKf}}{C`{{f{Ab}}}}Jldd{C`{{f{Ef}}}}{f{{l{A`}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{BKf}}{C`{{f{Ab}}}}Jld{C`{{f{Ef}}}}{f{{l{A`}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{DFb}}}{{f{{l{A`}}}}}}{{{f{BKf}}{C`{{f{Ab}}}}d}{{Bd{{Jh{KhJj}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DFd}}}DFd}{{{f{c}}{f{Cle}}}b{}{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DFd}}{f{DFd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{DFd}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{DFd}}{f{Clc}}}bAC`}`{{}Ff}{ce{}{}}{{{f{DFd}}{f{Ab}}}d}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{{DFf{c}}}}}{{DFf{c}}}{ABjAd}}{{{f{c}}{f{Cle}}}b{}{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}?{{{f{Ab}}}{{C`{DFd}}}}>=`{{{f{Cl{DFf{c}}}}{f{Ab}}}C`Ad}{{{f{ClDFh}}{f{{An{Al}}}}{C`{Jl}}}{{C`{c}}}{}}{{{f{Cl{DFf{Jj}}}}{f{{An{Al}}}}{C`{Jl}}}{{C`{Gf}}}}{{{f{Cl{DFf{Jd}}}}{f{{An{Al}}}}{C`{Jl}}}{{C`{Mb}}}}`?>{{c{C`{Jl}}}{{Bd{{DFl{}{{DFj{e}}}}Bb}}}{}{}}{{DFd{C`{Jl}}}{{Bd{{DFf{Jj}}Bb}}}}{{DFd{C`{Jl}}}{{Bd{{DFf{Jd}}Bb}}}}{c{{Bd{e}}}{}{}}{{{f{c}}}A@`{}}{ce{}{}}```````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Clc}}}{{f{Cle}}}{}{}}0{{{f{CGj}}}CGj}{{{f{c}}{f{Cle}}}b{}{}}{{}CGj}{Ff{{f{c}}}{}}0{Ff{{f{Clc}}}{}}0{Ffb}0{{{f{CGj}}{f{CGj}}}d}{{{f{DFn}}{f{DFn}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CGj}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}0{{{f{Ab}}}{{Bd{DFn}}}}{{{f{Ab}}g}{{Bd{CGjBb}}}{{Hf{Ab}}}{{ANl{Ef}}}{{Hb{}{{Cb{{Gj{ce}}}}}}}}{{{f{CGj}}{f{Clc}}}bAC`}{{}Ff}0{ce{}{}}0``{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}000{{{f{c}}}A@`{}}033``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eALd{}{{Hb{}{{Cb{c}}}}}}0{{AEhe}ALf{}{{Hb{}{{Cb{c}}}}}}0{{{f{ALh}}}{{f{Ed}}}}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}{{C`{{f{{An{c}}}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{AL`}}{f{AL`}}c}{{Bd{AL`Bb}}}AMh}{{{f{AMj}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{AMj}}{f{Ed}}Fb}{{Bd{B`Bb}}}}`{ANfe{}{{ALd{c}}AJh}}0{{ANfAEh}e{}{{ALf{c}}AJh}}0{{{AMd{Ab}}}Ed}{{{f{AMj}}}{{f{Ed}}}}`{{AMh{f{{l{Ej}}}}{f{{l{Ej}}}}}{{Bd{{l{Ej}}Bb}}}}{{{Fn{c}}AEh}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{Fn{c}}AEh}{{AJh{}{{ALj{e}}{ALl{c}}{ALn{g}}}}}{AM`{AMb{e}}}ABj{{Gb{}{{Cb{e}}}}IfI`Ib}}{{FfcAEh}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{FfAEh}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}Ff}{{C`{c}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{AMj}}Ff}{{Bd{IhBb}}}}{{{f{AMj}}Ff}Ih}{{}Ed}{{{f{AOl}}Ff}Ih}4{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}{{AF`{cgAEn}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}{{C`{c}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{AL`}}{f{AL`}}}{{Bd{{Gj{AL`AL`}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gj{{l{j}}{l{j}}}}Bb}}}}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}`{{}c{}}0{g{{Bd{ALde}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{{AEhg}{{Bd{ALfe}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{ANf{{Bd{eg}}}{}{{ALd{c}}AJh}{}}0{{ANfAEh}{{Bd{eg}}}{}{{ALf{c}}AJh}{}}0{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}Ff}cABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}0{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}gABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{Ffc{}}0{{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}{C`{Hh}}}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}```````````{{{f{AL`}}{f{AL`}}c}{{Bd{AL`Bb}}}AMh}{{AMh{f{{l{Ej}}}}{f{{l{Ej}}}}}{{Bd{{l{Ej}}Bb}}}}=<`````````{{}b}0{{}d}{{{f{{Jh{JnJj}}}}{f{{l{A`}}}}CGf{Fj{Gf}{{Dd{AKh}}}}{Fj{AKh}{{Dd{Gf}}}}{f{AKj}}{f{AKj}}}{{Bd{{l{Jj}}Bb}}}}{{{f{{Jh{JnJj}}}}{C`{{f{Ab}}}}{Fj{Gf}{{Dd{AKh}}}}{Fj{AKh}{{Dd{Gf}}}}{f{AKj}}{f{AKj}}}{{Bd{{l{Jj}}Bb}}}}{{{f{{Jh{JnJj}}}}{C`{{f{Ab}}}}{f{{l{A`}}}}CGf}{{Bd{{Jh{JnJj}}Bb}}}}```{{c{C`{Hh}}}CMn{}}{{{CN`{Gf}}{CN`{Al}}{C`{Hh}}}CNb}{{{CN`{Gf}}{CN`{Al}}{C`{Hh}}}CNd}`{CJbBHj}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{CJbJl}BHj}3{{CJbBHjJl}BHj}{{CJbEf}BHj}555{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}8{cc{}}9{{}Ff}{ce{}{}};;;;;;;;;;{{CJb{C`{Ef}}BHjCGf}BHj}{{CJbBHj}BHj}={{CJb{f{Ab}}}BHj}>;0>>>>>>>1{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}5{CJbBHj}0>0`{{{f{BFn}}{f{B@f}}{f{Bj}}}{{Bd{B`Bb}}}}{{{f{BFn}}}{{Bd{{f{Ab}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}DG`}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{DG`{C`{{f{AEh}}}}}{{Bd{AD`Bb}}}}{cc{}}{{}Ff}{ce{}{}}{{{f{DG`}}}d}{{FfFf}DG`}{{{f{ClDG`}}{Cf{Cd}}}b}{{{f{ClDG`}}}b}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}6`{{{f{{l{c}}}}}FfAd}0``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DGb}}}DGb}{{{f{c}}{f{Cle}}}b{}{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DGb}}{f{DGb}}}d}{{{f{DGb}}{f{ClGl}}}{{Bd{bGn}}}}0{cc{}}{{{f{DGb}}{f{Clc}}}bAC`}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DGd}}}DGd}{{{f{c}}{f{Cle}}}b{}{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DGd}}{f{DGd}}}d}{{{f{DGd}}{f{ClGl}}}{{Bd{bGn}}}}0{cc{}}{{{f{DGd}}{f{Clc}}}bAC`}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4{{KlKl}Kl}{{{f{{l{Ej}}}}Ij}{{Bd{bBb}}}}{{{f{{AK`{Ij}}}}Ij}{{Bd{bBb}}}}```{{{f{B`}}CCb}B`}{{{f{B`}}{f{B`}}d}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{Bj}}}B`}0{{{f{B`}}{f{Ab}}}B`}0`{{{f{c}}h}b{}}{{{f{DGf}}}{{f{AEj}}}}{{{f{ClDGf}}}{{Cf{Cd}}}}{{{f{ClDGf}}}{{f{ClAEj}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DGf}}}DGf}{{{f{c}}{f{Cle}}}b{}{}}{{{f{DGf}}}{{f{AEh}}}}{{}DGf}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{ClDGf}}Ff}b}{{{f{DGf}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{}Ff}{ce{}{}}{{{f{DGf}}}Ff}{FfDGf}{{{f{ClDGf}}}b}70{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}{{{f{DGf}}}{{C`{{f{DGh}}}}}}7`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DEb}}}DEb}{{{f{c}}{f{Cle}}}b{}{}}{{}DEb}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DEb}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{DEb}}}Ff}{{{f{DEb}}}{{Lh{BAl}}}}{{{f{COh}}Al{C`{Ff}}d{C`{{f{BAl}}}}FfFf{C`{{f{C@n}}}}{C`{Al}}Al{C`{{f{CA`}}}}dd{f{Cl{C`{Ff}}}}d}{{Bd{{Gj{BAlFfFf}}Bb}}}}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}{{{f{COh}}{f{C@h}}}{{Bd{DEbBb}}}}1{{{f{c}}}A@`{}}4{{DEb{Lh{BAl}}}DEb}````{{{f{{l{c}}}}eAKbd}{{Fn{Ij}}}Db{{Ch{}{{Cb{C`}}}}}}{{{f{{An{f}}}}cIje}{{Fn{Ij}}}{{Ch{}{{Cb{C`}}}}}{{Df{fFff}{{Dd{d}}}}}}``{{{f{DGj}}}{{f{B`}}}}{{{f{BOb}}}{{Bd{{l{Jd}}Bb}}}}{{{f{BOb}}}{{Bd{{l{Ll}}Bb}}}}0{{{f{BOb}}}{{Bd{{l{Aj}}Bb}}}}22112{{{f{BOb}}}{{Bd{{l{Mf}}Bb}}}}322{{{f{BOb}}{f{Ab}}}{{Bd{B`Bb}}}}{{{f{BOb}}Jl}{{Bd{{l{Jj}}Bb}}}}1445`{{{f{AIj}}FfFf}AIj}0`{{Ff{f{Cl{Fn{d}}}}}b}```11{{Ff{f{{An{B`}}}}{f{ClEn}}}{{Bd{{AKd{{l{Ej}}}}Bb}}}}{{{f{{An{B`}}}}{f{{An{d}}}}{f{{An{d}}}}}{{Bd{AKfBb}}}}{{{f{Ab}}{f{{An{B`}}}}{f{{An{d}}}}{f{{An{d}}}}}{{Bd{{l{El}}Bb}}}}{{{f{Ab}}{f{{An{B`}}}}}{{Bd{{l{El}}Bb}}}}{{{f{B`}}}{{Bd{{Cf{Cd}}Bb}}}}{{{f{{An{B`}}}}}{{Bd{AKfBb}}}}{{{f{{An{B`}}}}}{{Bd{{l{El}}Bb}}}}0```````````88```{{{f{BLd}}}{{f{{l{A`}}}}}}{{{f{BLh}}}{{Bd{{l{A`}}Bb}}}}{{{f{BLh}}}{{l{A`}}}}{{{f{BLh}}{f{{l{A`}}}}}{{l{A`}}}}{{{f{BLh}}{f{Ab}}d}{{Bd{{l{Aj}}Bb}}}}{{{f{BLh}}{f{{l{A`}}}}dd}{{Bd{{l{Aj}}Bb}}}}{{{f{BLh}}{f{Ab}}}{{Bd{{l{Aj}}Bb}}}}{{{f{BLh}}{f{Ab}}d}{{Bd{{l{Ej}}Bb}}}}{{{f{BLh}}{f{{l{A`}}}}d}{{Bd{{l{Ej}}Bb}}}}{{{f{BLh}}{f{{l{A`}}}}Ff}{{Bd{{l{A`}}Bb}}}}{{{f{BLh}}{f{Ab}}}{{Bd{{l{j}}Bb}}}}{{{f{BLh}}{f{{l{A`}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BLh}}{f{Ab}}{f{Ed}}}{{Bd{B`Bb}}}}5{{{f{BLh}}{f{{l{A`}}}}dd}{{Bd{{l{Ej}}Bb}}}}{{{f{BLh}}{f{Ab}}}{{Bd{{l{Ej}}Bb}}}}=<{{{f{{An{{f{{l{A`}}}}}}}}{f{Ab}}d}{{Bd{{l{A`}}Bb}}}}{{{f{BLh}}{f{Ab}}{f{Ab}}}{{Bd{{l{A`}}Bb}}}}0{{{f{BLh}}{f{Ab}}{f{Ab}}Ff}{{Bd{{l{A`}}Bb}}}}1{{{f{BLh}}{f{{l{A`}}}}}{{l{j}}}}{{{f{BLh}}{f{{l{A`}}}}Ff}{{Bd{AKnBb}}}}0{{{f{{l{A`}}}}{f{{l{A`}}}}e}{{l{j}}}{{Ch{}{{Cb{{f{Ab}}}}}}}{{Df{{f{Ab}}{f{Ab}}}{{Dd{c}}}}}}2{{{f{{l{A`}}}}{f{{l{A`}}}}Ffed}{{Bd{AKnBb}}}{{Ch{}{{Cb{{f{Ab}}}}}}}{{Df{{f{Ab}}{f{Ab}}}{{Dd{c}}}}}}2{{{f{BLh}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{A`}}}}{f{Ab}}d}{{l{A`}}}}{{{f{BLh}}}{{l{Ej}}}}0{{{f{BLh}}}{{l{A`}}}}{{{f{BLh}}{f{B`}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}4{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{A`}}}}505050{{{f{BLh}}{f{{l{A`}}}}}{{l{A`}}}}10{{{f{BLh}}{f{{l{Ej}}}}d}{{Bd{{l{Jj}}Bb}}}}444````````{{eFfFf}{{DGl{Gf}}}{{Hf{Ab}}}{{Ch{}{{Cb{c}}}}}}{{eFfFf}{{DGn{Gf}}}{{Hf{{An{Al}}}}}{{Ch{}{{Cb{c}}}}}}```````````{{{f{c}}h}b{}}0{{{f{Ab}}{Fn{{Cf{Cd}}}}{f{AEh}}}{{Bd{B`Bb}}}}{{{f{Ab}}{Fn{{Cf{Cd}}}}{f{AEh}}{C`{{f{{DEj{EfEf}}}}}}}{{Bd{B`Bb}}}}{{B`c}{}{AfLb}}{{{f{B`}}{f{B`}}}}{{B`B`}}{{{f{B`}}c}{}{AfLb}}`{{{f{ClB`}}{f{B`}}}{{Bd{{f{ClB`}}Bb}}}}{{{f{B`}}}{{C`{Ff}}}}0{{{f{BJj}}Eh}{{l{Ej}}}}{{{f{BJj}}}{{Bd{{l{Ej}}Bb}}}}`{{{f{B`}}}{{Bd{{f{{l{Bn}}}}Bb}}}}{{{f{B`}}Ff}{{f{{Cf{Cd}}}}}}{{{f{BJj}}}{{f{AEj}}}}{{{f{ClBJj}}}{{f{ClAEj}}}}{{{f{B`}}}{{l{j}}}}{{{f{ClBJj}}}{{f{Cl{l{c}}}}}Db}{{{f{BJj}}}{{f{{l{c}}}}}Db}{{{f{B`}}}{{f{BJj}}}}{{{f{B`}}}{{f{B`}}}}0{{{f{ClBJj}}}{{Bd{FfBb}}}}{{{f{ClB`}}}{{Bd{FfBb}}}}{{{f{B`}}}{{Bd{{f{{l{n}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{El}}}}Bb}}}}{{{f{BJj}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{B`}}}{{Bd{{f{{l{Aj}}}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{BJj}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{B`}}{f{Ed}}}{{Bd{B`Bb}}}}0{{{f{B`}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{AL`}}Bb}}}}7{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}c}{{Bd{B`Bb}}}Ah}{{{f{BJj}}}{{Fl{{Fh{{Cf{Cd}}}}{Fj{{f{{Cf{Cd}}}}}{{Dd{Ff}}}}}}}}{{{f{B`}}}{{`{{Ch{}{{Cb{Ff}}}}}}}}{{{f{BJj}}}{{f{{Fn{{Cf{Cd}}}}}}}}{{{f{ClBJj}}}{{f{Cl{Fn{{Cf{Cd}}}}}}}}{{{f{ClB`}}}{{f{Cl{Fn{{Cf{Cd}}}}}}}}{{{f{B`}}}B`}{{{f{Kl}}}Kl}1{{{f{BJj}}}{{Lh{BJj}}}}{{{f{c}}{f{Cle}}}b{}{}}0{{{f{ClB`}}}b}{{{f{B`}}}{{Bd{{f{{Jh{JfJd}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jh{JnJj}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jh{KbK`}}}}Bb}}}}{{}B`}{Ff{{f{c}}}{}}00{{{f{B`}}}f}{Ff{{f{Clc}}}{}}00{{{f{B`}}{f{B`}}}}{{{f{B`}}c}{}{AfLb}}{{B`B`}}{{B`c}{}{AfLb}}{Ffb}00{{{f{BJj}}}B`}{{{f{BJj}}}{{f{Ed}}}}{{{f{B`}}}{{Bd{{f{{Jh{KdJj}}}}Bb}}}}{{{f{Kl}}{f{Kl}}}d}{{{f{B`}}{f{B`}}}d}{{{f{{AGf{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{B`}}}{{Bd{{l{Aj}}Bb}}}}{{{f{B`}}c}{{Bd{{l{Aj}}Bb}}}ANj}{{{f{B`}}{f{Ab}}}{{Bd{{l{Aj}}Bb}}}}3{{{f{B`}}c}{}ANj}3{{{f{B`}}{f{Ab}}}}66{{{f{c}}{f{e}}}d{}{}}00{{{f{B`}}}Ff}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{ClB`}}{f{B`}}}{{Bd{{f{ClB`}}Bb}}}}{{{f{B`}}IhFf}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Eb}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{E`}}}}Bb}}}}{{{f{BJj}}}{{Dj{Mn}}}}{{{f{B`}}AGd}{{Bd{B`Bb}}}}{{{f{BJj}}{f{{l{Aj}}}}}{{Bd{B`Bb}}}}{{{f{Kl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{B`}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{B`}}}Ef}{cc{}}00{{{l{c}}}B`Db}{{{Jh{KdJj}}}B`}{{{Jh{JfJd}}}B`}{{{Jh{KhJj}}}B`}{{{Jh{JnJj}}}B`}{{{f{Ab}}{f{{An{Ih}}}}d}{{Bd{B`Bb}}}}{{{f{Ab}}{f{{An{Ih}}}}{f{Ed}}d}{{Bd{B`Bb}}}}{{{f{Ab}}{Cf{Cd}}}{{Bd{B`Bb}}}}{{{f{Ab}}{Fn{{Cf{Cd}}}}}{{Bd{B`Bb}}}}{{{f{Ab}}{Fn{{Cf{Cd}}}}{f{Ed}}}B`}{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}{cB`{{Hb{}{{Cb{Ln}}}}}}{cB`{{Hb{}{{Cb{{C`{Al}}}}}}}}{cB`{{Hb{}{{Cb{{C`{d}}}}}}}}{cB`{{Hb{}{{Cb{Lf}}}}}}{cB`{{Hb{}{{Cb{Ij}}}}}}{cB`{{Hb{}{{Cb{{C`{Gf}}}}}}}}{cB`{{Hb{}{{Cb{{f{Ml}}}}}}}}{cB`{{Hb{}{{Cb{{C`{Mh}}}}}}}}{cB`{{Hb{}{{Cb{{f{Gf}}}}}}}}{cB`{{Hb{}{{Cb{Mb}}}}}}{cB`{{Hb{}{{Cb{{f{d}}}}}}}}{cB`{{Hb{}{{Cb{{C`{J`}}}}}}}}{cB`{{Hb{}{{Cb{{f{Lf}}}}}}}}{cB`{{Hb{}{{Cb{{C`{Ml}}}}}}}}{cB`{{Hb{}{{Cb{{C`{Ij}}}}}}}}{cB`{{Hb{}{{Cb{{C`{Jb}}}}}}}}{cB`{{Hb{}{{Cb{{f{Jb}}}}}}}}{cB`{{Hb{}{{Cb{{f{Mh}}}}}}}}{cB`{{Hb{}{{Cb{{f{Ab}}}}}}}}{cB`{{Hb{}{{Cb{{f{J`}}}}}}}}{cB`{{Hb{}{{Cb{d}}}}}}{cB`{{Hb{}{{Cb{Jb}}}}}}{cB`{{Hb{}{{Cb{Ef}}}}}}{cB`{{Hb{}{{Cb{{f{Ij}}}}}}}}{cB`{{Hb{}{{Cb{Ml}}}}}}{cB`{{Hb{}{{Cb{Gf}}}}}}{cB`{{Hb{}{{Cb{{C`{Ln}}}}}}}}{cB`{{Hb{}{{Cb{{C`{Mb}}}}}}}}{cB`{{Hb{}{{Cb{{f{Mb}}}}}}}}{cB`{{Hb{}{{Cb{J`}}}}}}{cB`{{Hb{}{{Cb{Mh}}}}}}{cB`{{Hb{}{{Cb{{f{Ln}}}}}}}}{cB`{{Hb{}{{Cb{Al}}}}}}{cB`{{Hb{}{{Cb{{f{Al}}}}}}}}{cB`{{Hb{}{{Cb{{C`{Lf}}}}}}}}{{{f{Ab}}{Fn{Jb}}}B`}{{{f{Ab}}{Fn{Al}}}B`}{{{f{Ab}}{Fn{Lf}}}B`}{{{f{Ab}}{Fn{Ln}}}B`}{{{f{Ab}}{Fn{Ij}}}B`}{{{f{Ab}}{Fn{Gf}}}B`}{{{f{Ab}}{Fn{Mh}}}B`}{{{f{Ab}}{Fn{Mb}}}B`}{{{f{Ab}}{Fn{Ml}}}B`}{{{f{Ab}}{Fn{J`}}}B`}{{{f{Ab}}Ff{f{Ed}}}B`}{{{f{B`}}FfFf}B`}{{{f{BJj}}Ff}{{Bd{IhBb}}}}{{{f{B`}}}Ff}{{{f{B`}}}Il}{{{f{B`}}}B`}{{{f{BJj}}}{{C`{Ld}}}}0{{{f{BJj}}Ff}{{C`{{f{In}}}}}}{{{f{BJj}}FfFf}{{C`{{f{In}}}}}}{{{f{BJj}}Ff}Ih}{{{f{{AGf{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{Ab}}}{{Bd{{l{Aj}}Bb}}}}{{{f{B`}}c}{{Bd{{l{Aj}}Bb}}}ANj}{{{f{B`}}{f{B`}}}{{Bd{{l{Aj}}Bb}}}}3{{{f{B`}}{f{Ab}}}}21{{{f{BJj}}}d}{{{f{Kl}}{f{Clc}}}bAC`}{{{f{B`}}{C`{Ff}}}B`}{{{f{B`}}}{{Bd{{f{{l{Mf}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Jd}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Jj}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ll}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ej}}}}Bb}}}}`{{{f{B`}}}{{Bd{{l{j}}Bb}}}}{{}Ff}00{ce{}{}}00{B`B@f}1{BAnB`}{B`B`}={{{f{B`}}}{{Bd{{l{Aj}}Bb}}}}000{{{f{BJj}}}{{l{Aj}}}}0{{}d}0{{{f{B`}}}Kl}{{{f{B`}}}DH`}{{{f{B`}}}{{`{{Ch{}{{Cb{B`}}}}}}}}{{{f{BJj}}}Ff}{{{f{B`}}}Ff}{{{f{BJj}}Ff}B`}{{{f{B`}}}{{Bd{{f{{l{j}}}}Bb}}}}{B`BHj}{{{f{{AGf{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{Ab}}}}{{{f{B`}}{f{B`}}}{{Bd{{l{Aj}}Bb}}}}{{{f{B`}}c}{{Bd{{l{Aj}}Bb}}}ANj}3201{{{f{B`}}}{{Bd{{C`{c}}Bb}}}Lb}{{{f{BJj}}}{{Bd{LdBb}}}}{{{f{BJj}}}{{C`{Lf}}}}{{{f{B`}}}Ld}1232{{{f{B`}}c}{}{AfLb}}{{B`c}{}{AfLb}}{{{f{B`}}{f{B`}}}}{{B`B`}}{{{f{BJj}}}Ff}{{{f{B`}}}Ff}{{{f{BJj}}}{{Bd{FfBb}}}}{{{f{BJj}}}{{f{Ab}}}}{{{f{Ab}}{f{B`}}}B`}{{{f{Ab}}c}B`{{Hf{{An{{C`{Ef}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{J`}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{C`{d}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{f{{An{Al}}}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{C`{Ln}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{Ef}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{C`{{Dj{Ab}}}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{C`{Lf}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{C`{AKl}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{Ml}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{C`{AOd}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{Ij}}}}}}{{{f{Ab}}c}B`{{Hf{{An{Mb}}}}}}{{{f{Ab}}c}B`BAn}{{{f{Ab}}c}B`{{Hf{{An{{C`{{f{Ab}}}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{Ln}}}}}}{{{f{Ab}}c}B`{{Hf{{An{AOd}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{C`{Ij}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{f{Ab}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{C`{B`}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{AKl}}}}}}{{{f{Ab}}c}B`{{Hf{{An{Lf}}}}}}{{{f{Ab}}c}B`{{Hf{{An{Jb}}}}}}{{{f{Ab}}c}B`{{Hf{{An{Ih}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{C`{{f{{An{Al}}}}}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{C`{Ml}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{C`{{Fn{Al}}}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{C`{J`}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{Al}}}}}}{{{f{Ab}}c}B`{{Hf{{An{AKh}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{Dj{Ab}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{Dj{{An{Al}}}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{Fn{Al}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{C`{{Dj{{An{Al}}}}}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{C`{AKh}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{C`{Gf}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{C`{Mh}}}}}}}}{{{f{Ab}}{Lj{Jb}}}B`}{{{f{Ab}}c}B`{{Hf{{An{AOf}}}}}}{{{f{Ab}}c}B`{{Hf{{An{B`}}}}}}{{{f{Ab}}c}B`{{Hf{{An{Mh}}}}}}{{{f{Ab}}c}B`{{Hf{{An{d}}}}}}{{{f{Ab}}{Lj{Gf}}}B`}{{{f{Ab}}c}B`{{Hf{{An{{C`{AOf}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{C`{Al}}}}}}}}{{{f{Ab}}{Lj{Mb}}}B`}{{{f{Ab}}c}B`{{Hf{{An{{C`{Mb}}}}}}}}{{{f{Ab}}c}B`{{Hf{{An{{C`{Jb}}}}}}}}{{{f{Ab}}{Lj{Ij}}}B`}{{{f{Ab}}c}B`{{Hf{{An{Gf}}}}}}{{{f{Ab}}{f{Ed}}}B`}{{{f{BJj}}FfFf}B`}{{{f{Ab}}Ff}B`}{{{f{ClDH`}}}C`}{{{f{{AGf{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{Ab}}}{{Bd{{l{Aj}}Bb}}}}{{{f{B`}}c}{{Bd{{l{Aj}}Bb}}}ANj}{{{f{B`}}{f{B`}}}{{Bd{{l{Aj}}Bb}}}}3{{{f{B`}}c}{}ANj}1{{{f{B`}}{f{Ab}}}}{{{f{B`}}}{{Bd{{f{ABl}}Bb}}}}{{{f{BJj}}}Ff}`{{{f{B`}}}{{Cf{Kf}}}}{{{f{B`}}}{{Bd{LdBb}}}}{{{f{BJj}}LfNd}{{Bd{LdBb}}}}{{{f{BJj}}}B`}{{{f{B`}}{f{B`}}}}{{{f{B`}}c}{}{AfLb}}{{B`c}{}{AfLb}}{{{f{ClBJj}}{f{Ab}}}b}{{{f{ClB`}}{f{Ab}}}{{f{ClB`}}}}{{{f{B`}}{f{{An{Gf}}}}}{{Bd{B`Bb}}}}06{KlKl}{{{f{BJj}}{f{Df}}Nf}{{Bd{B`Bb}}}}{{{f{B`}}Lfdd{C`{Jb}}}{{Bd{B`Bb}}}}{{{f{B`}}Ffdd{C`{Jb}}}{{Bd{B`Bb}}}}{{{f{B`}}Ff}B`}{{{f{ClB`}}Kl}b}{{{f{BJj}}Gf}B`}{{{f{ClBJj}}}b}{{{f{ClB`}}}b}{{{f{B`}}{C`{Jb}}}B`}{{{f{DH`}}}{{Gj{Ff{C`{Ff}}}}}}{{{f{BJj}}GfFf}B`}{{{f{B`}}GfFf}B`}{{{f{B`}}Eh}{{Bd{B`Bb}}}}{{{f{BJj}}Eh}{{Bd{B`Bb}}}}{{{f{BJj}}Gf}{{Gj{B`B`}}}}{{{f{B`}}Gf}{{Gj{B`B`}}}}{{{f{BJj}}Al}{{C`{Lf}}}}{{{f{BJj}}Al}{{Bd{LdBb}}}}{{{f{B`}}}{{Bd{{f{{l{A`}}}}Bb}}}}{{{f{B`}}Ff}{{Bd{{Dj{Ab}}Bb}}}}{{{f{B`}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{AKn}}Bb}}}}{{{f{B`}}c}{}{AfLb}}{{B`c}{}{AfLb}}{{{f{B`}}{f{B`}}}}{{B`B`}}{{{f{B`}}}{{Bd{cBb}}}Lb}{{{f{BJj}}}{{Bd{LdBb}}}}{{{f{B`}}}{{Bd{LdBb}}}}{{{f{B`}}{C`{Ff}}}B`}{{{f{BJj}}{f{{l{Ej}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{{An{Nl}}}}Kl}B`}{{{f{B`}}{f{{An{Nl}}}}}B`}{{{f{BJj}}{f{{An{Ij}}}}}{{Bd{B`Bb}}}}{{{f{BJj}}{f{{An{Ij}}}}}B`}{{{f{BJj}}{f{{l{Ej}}}}}B`}{{{f{B`}}{f{{An{Ij}}}}}B`}{{{f{B`}}}{{Bd{{f{{Jh{KhJj}}}}Bb}}}}{{{f{B`}}Ffd}{{Cf{Cd}}}}{{{f{B`}}{C`{{f{Ab}}}}d}{{Bd{B@fBb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{c}}}e{}{}}0{{{f{B`}}}{{Dj{B`}}}}{{{f{c}}}Ef{}}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{B`B`}{{Bd{B`Bb}}}}1{c{{Bd{e}}}{}{}}0{{{Gj{{f{Ab}}{Cf{Cd}}}}}{{Bd{B`Bb}}}}{{{Gj{{f{ANn}}{Fn{{Cf{Cd}}}}}}}{{Bd{B`Bb}}}}2{{{Gj{{f{Ab}}{Fn{{Cf{Cd}}}}}}}{{Bd{B`Bb}}}}{{{Gj{{f{ANn}}{Cf{Cd}}}}}{{Bd{B`Bb}}}}444656{{{f{ClB`}}{Gd{c}}}dDb}76{{{f{c}}}A@`{}}00{{{f{B`}}}{{Bd{{f{{l{Mj}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ej}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Md}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{M`}}}}Bb}}}}{{{f{BJj}}}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{BJj}}}{{Bd{{f{{l{c}}}}Bb}}}Db}{{{f{BJj}}Al}{{C`{Lf}}}}{{{f{BJj}}Al}{{Bd{LdBb}}}}{ce{}{}}00{{B`{f{Ab}}}B`}{{{f{B`}}c}B`{AfLb}}{{{f{B`}}{f{{l{Aj}}}}{f{B`}}}{{Bd{B`Bb}}}}``{{{f{c}}h}b{}}{{{f{Dl}}}{{f{B`}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{Dl}}}Dl}{{{f{c}}{f{Cle}}}b{}{}}{{{f{Dl}}}B`}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{cc{}}{{}Ff}?{{{DHb{B`}}}Dl}{{{f{ClDl}}{f{Cl{Cf{Cd}}}}}b}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}{ce{}{}}{{{f{ClDl}}{f{Cl{Cf{Cd}}}}e}c{}{{Df{{f{Dl}}}{{Dd{c}}}}}}````{{{f{B`}}{f{B`}}c}{{Bd{B`Bb}}}{{Dn{{f{B`}}{f{B`}}}{{Dd{{Bd{B`Bb}}}}}}}}{{{BHl{}{{Dd{c}}}}{f{B`}}}c{}}{{{f{BHn}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Bf}}}}{f{B`}}}{{Bd{B`Bb}}}}`210210210210``{{{f{BOd}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Fd}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BOd}}c}{{Bd{B`Bb}}}Ah}{{{f{{l{Fd}}}}c}{{Bd{B`Bb}}}Ah}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{CIn}}}CIn}{{{f{c}}{f{Cle}}}b{}{}}{{}CIn}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{CIn}}{f{CIn}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CIn}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{CIn}}{f{Clc}}}bAC`}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}3","D":"AEIhAHh","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",10875],[5,"ListType",1913,10876],[5,"ChunkedArray",17,10877],[5,"BinaryType",1913,10876],[5,"StringType",1913,10876],[1,"str"],[10,"PolarsNumericType",1913,10876],[10,"Num",10878],[10,"ToPrimitive",10879],[5,"BooleanType",1913,10876],[1,"u8"],[1,"slice"],[5,"Series",10380,10880],[6,"PolarsError",3336,10881],[6,"Result",10882],[10,"NumOpsDispatchInner",10822,10883],[5,"ObjectType",1913,10876],[6,"GroupsProxy",3720,10884],[10,"PolarsObject",1477,10885],[5,"FixedSizeListType",1913,10876],[6,"Option",10886],[17,"Item"],[10,"Array",10887],[5,"Box",10888],[10,"Iterator",10889],[5,"AmortizedListIter",10890],[0,"mut"],[17,"IsNested"],[5,"FalseT",1913,10876],[10,"PolarsDataType",1913,10876],[17,"Output"],[10,"Fn",10891],[10,"Copy",10892],[6,"Cow",10893],[5,"AmortSeries",10799,10894],[10,"FnMut",10891],[5,"Float64Type",1913,10876],[5,"Float32Type",1913,10876],[6,"DataType",1913,10895],[5,"String",10896],[5,"SortOptions",1603,10897],[5,"UInt32Type",1913,10876],[5,"BinaryOffsetType",1913,10876],[5,"SortMultipleOptions",1603,10897],[10,"PolarsIntegerType",1913,10876],[6,"CastOptions",1126,10898],[10,"NumOpsDispatchCheckedInner",10843,10899],[1,"usize"],[5,"Iter",10900],[1,"fn"],[5,"Map",10901],[5,"Vec",10902],[5,"MetadataProperties",1246,10903],[10,"DoubleEndedIterator",10904],[5,"Metadata",1246,10903],[1,"i64"],[5,"OffsetsBuffer",10905],[1,"tuple"],[5,"Formatter",10906],[5,"Error",10906],[17,"Array"],[10,"IntoIterator",10907],[10,"FallibleIterator",10908],[10,"AsRef",10909],[5,"Bitmap",10910],[10,"PolarsAsRef",10911],[10,"Borrow",10912],[10,"IntoParallelIterator",10913],[10,"Send",10892],[10,"Sync",10892],[10,"NoOption",10914],[10,"TrustedLen",10915],[6,"AnyValue",1913,10916],[1,"u32"],[5,"MetadataFlags",1246,10903],[10,"PolarsObjectSafe",1477,10885],[1,"f32"],[1,"u64"],[5,"Int32Type",1913,10876],[5,"DateType",1913,10876],[5,"Logical",1913,10917],[5,"Int64Type",1913,10876],[6,"TimeUnit",1913,10918],[5,"DatetimeType",1913,10876],[5,"Int128Type",1913,10876],[5,"DecimalType",1913,10876],[5,"DurationType",1913,10876],[10,"ExactSizeIterator",10919],[5,"TimeType",1913,10876],[10,"PolarsFloatType",1913,10876],[6,"IsSorted",10380,10920],[10,"PolarsIterator",1174,10921],[6,"ChunkedArrayLayout",17,10877],[10,"NumCast",10879],[5,"Scalar",1913,10916],[1,"f64"],[5,"Arc",4083,10922],[5,"Range",10923],[5,"Int8Type",1913,10876],[1,"i8"],[5,"UInt8Type",1913,10876],[1,"i32"],[5,"UInt64Type",1913,10876],[5,"Int16Type",1913,10876],[1,"i16"],[5,"UInt16Type",1913,10876],[1,"u16"],[5,"Field",1913,10924],[10,"ParallelIterator",10913],[10,"IndexedParallelIterator",10913],[6,"QuantileInterpolOptions",4083,10925],[5,"RollingOptionsFixedWindow",4083,10926],[10,"PolarsOpsNumericType",10927],[10,"Sized",10892],[5,"ChunkId",4083,10928],[17,"HasViews"],[5,"RandomState",10929],[5,"BytesHash",10930],[5,"OwnedRepr",10931],[1,"array"],[5,"Dim",10932],[5,"ArrayBase",10933],[5,"ViewRepr",10933],[6,"Either",10934],[5,"TypeId",10935],[5,"NullableIdxSize",4083,10928],[10,"FnOnce",10891],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",824,10936],[5,"AnonymousListBuilder",852,10937],[5,"AnonymousOwnedListBuilder",852,10937],[5,"ListBooleanChunkedBuilder",852,10938],[5,"ListPrimitiveChunkedBuilder",852,10939],[10,"ListBuilderTrait",852,10940],[10,"ChunkedBuilder",852,10941],[5,"ListStringChunkedBuilder",852,10942],[5,"ListBinaryChunkedBuilder",852,10942],[5,"ListNullChunkedBuilder",852,10943],[5,"BinViewChunkedBuilder",852,10944],[10,"ViewType",10945],[5,"BooleanChunkedBuilder",852,10946],[5,"NullChunkedBuilder",852,10947],[5,"PrimitiveChunkedBuilder",852,10948],[10,"Clone",10949],[5,"NullChunked",10950],[10,"NewChunkedArray",852,10941],[10,"Hasher",10951],[10,"ChunkedCollectInferIterExt",1154,10952],[10,"ChunkedCollectIterExt",1154,10952],[10,"Canonical",1168,10953],[10,"ChunkedCollectParIterExt",1170,10954],[10,"FromParIterWithDtype",1170,10954],[5,"BooleanArray",10955],[5,"BoolIterNoNull",1174,10921],[5,"FixedSizeListArray",10956],[5,"FixedSizeListIterNoNull",1174,10921],[5,"StructIter",1174,10921],[5,"SomeIterator",1174,10921],[5,"MetadataEnv",1246,10957],[10,"MetadataCollectable",1246,10903],[5,"Iter",10958],[5,"IterNames",10958],[5,"File",10959],[5,"Mutex",10960],[6,"MetadataMerge",1246,10903],[5,"ObjectArray",1477,10885],[6,"ArrowDataType",1913,10961],[10,"Any",10935],[10,"Debug",10906],[5,"BitmapIter",10962],[6,"ZipValidity",10963],[5,"ObjectChunkedBuilder",1552,10964],[10,"AnonymousObjectBuilder",1575,10965],[5,"ObjectRegistry",1575,10965],[17,"FuncRet"],[10,"ChunkApply",1603,10966],[10,"ChunkApplyKernel",1603,10966],[10,"ChunkSort",1603,10966],[10,"ChunkUnique",1603,10966],[10,"ChunkCast",1603,10966],[6,"FillNullStrategy",1603,10966],[10,"ChunkCompare",10380,10966],[10,"ChunkExplode",1603,10966],[10,"ChunkFillNullValue",1603,10966],[10,"ChunkFilter",1603,10966],[10,"ChunkFull",1603,10966],[10,"ChunkFullNull",1603,10966],[10,"ChunkAnyValue",1603,10966],[10,"IsFirstDistinct",1603,10966],[10,"IsLastDistinct",1603,10966],[10,"ChunkAgg",1603,10966],[10,"ChunkQuantile",1603,10966],[10,"ChunkExpandAtIndex",1603,10966],[10,"Reinterpret",1603,10966],[10,"ChunkReverse",1603,10966],[10,"ChunkRollApply",1603,10966],[10,"ChunkSet",1603,10966],[10,"ChunkShift",1603,10966],[10,"ChunkShiftFill",1603,10966],[10,"SlicedArray",1603,10967],[10,"ChunkVar",1603,10966],[10,"ChunkTake",1603,10966],[10,"ChunkTakeUnchecked",1603,10966],[10,"ChunkBytes",1603,10966],[10,"ChunkZip",1603,10966],[10,"BinaryFnMut",1805,10968],[10,"StaticArray",1913,10969],[10,"TernaryFnMut",1805,10968],[10,"Error",10970],[10,"UnaryFnMut",1805,10968],[5,"PrimitiveArray",10971],[6,"SearchSortedSide",1845,10972],[5,"NoNull",4083,10973],[5,"RowsEncoded",10974],[5,"NaiveDateTime",10975],[6,"Tz",10976],[5,"NaiveTime",10977],[5,"StructChunked",1913,10978],[5,"CategoricalChunked",1913,10979],[5,"CategoricalChunkedBuilder",1913,10980],[10,"ArrayFromIter",1913,10981],[10,"ArrayFromIterDtype",1913,10981],[10,"AsRefDataType",1913,10895],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",10982],[10,"From",10909],[5,"BinaryViewArrayGeneric",10945],[6,"RevMapping",1913,10983],[10,"CategoricalMergeOperation",1913,10984],[10,"LogicalType",1913,10917],[6,"CategoricalOrdering",1913,10983],[5,"OwnedObject",1913,10916],[6,"UnknownKind",1913,10895],[5,"CategoricalType",1913,10876],[6,"ArrowTimeUnit",1913],[10,"ArrayCollectIterExt",1913,10981],[5,"GlobalRevMapMerger",1913,10984],[10,"NumericNative",1913,10876],[10,"Into",10909],[5,"ArrowField",4083],[6,"PrimitiveType",10985],[6,"IntegerType",10986],[5,"TimeDelta",10987],[5,"NaiveDate",10988],[5,"LazyCompact",10989],[5,"SmartString",10990],[10,"GetAnyValue",1913,10916],[5,"CatIter",1913,10979],[6,"Ordering",10991],[1,"u128"],[6,"PhysicalType",10986],[5,"DataFrame",3431,10992],[5,"StringCacheHolder",3315,10993],[5,"ErrString",3336,10881],[6,"PolarsWarning",3336,10994],[5,"Utf8Error",10995],[5,"Error",10996],[5,"TryReserveError",10997],[5,"Error",10998],[6,"Error",10999],[6,"ParquetError",11000],[10,"Display",10906],[5,"Schema",4083,11001],[10,"IntoSeries",10380,11002],[6,"NullStrategy",3431,10992],[6,"UniqueKeepStrategy",3431,10992],[5,"HashSet",11003],[5,"ArrowSchema",4083,11004],[5,"Row",3974,11005],[5,"GroupBy",3720,11006],[5,"DynamicGroupOptions",4083,11007],[5,"RangeTo",10923],[5,"RangeFrom",10923],[5,"RangeInclusive",10923],[5,"RangeToInclusive",10923],[5,"RangeFull",10923],[5,"RecordBatchIter",3431,10992],[5,"PhysRecordBatchIter",3431,10992],[5,"LazyFrame",4083,11008],[10,"IntoVec",4083,10973],[5,"MeltArgs",3691,11009],[5,"RollingGroupOptions",4083,11007],[10,"RangeBounds",10923],[6,"IndexOrder",4083,11010],[5,"StructArray",4083,11011],[5,"RecordBatchT",11012],[5,"Duration",4083,11013],[5,"GroupsIdx",3720,10884],[5,"UnitVec",11014],[6,"GroupByMethod",3720,11006],[5,"SlicedGroups",3720,10884],[5,"GroupsProxyParIter",3720,10884],[10,"UnindexedConsumer",11015],[6,"GroupsIndicator",3720,10884],[6,"IRAggExpr",11016],[10,"IntoGroupsProxy",3720,11017],[5,"Copied",11018],[5,"Zip",11019],[5,"GroupsProxyIter",3720,10884],[10,"IsFloat",11020],[10,"NativeType",11021],[10,"AggList",3958,11022],[10,"TakeExtremum",3958,11023],[10,"PhysicalAggExpr",3971,11024],[6,"AnyValueBuffer",3974,11025],[6,"AnyValueBufferTrusted",3974,11025],[5,"Node",11026],[6,"IR",11027],[5,"Arena",11026],[6,"AExpr",11016],[10,"JoinDispatch",4083,11028],[5,"JoinArgs",4083,11029],[10,"DfTake",4083,11030],[10,"DataFrameOps",4083,11031],[5,"CsvReader",4083,11032],[10,"PhysicalIoExpr",11033],[10,"MmapBytesReader",11034],[6,"Expr",4083,11035],[10,"LhsNumOps",10822,10883],[10,"NumOpsDispatch",10822,10883],[5,"LazyGroupBy",4083,11008],[10,"Allocator",11036],[5,"JoinBuilder",4083,11008],[10,"AnonymousScan",4083,11037],[5,"LazyJsonLineReader",4083,11038],[5,"ScanArgsAnonymous",4083,11039],[10,"FunctionOutputField",4083,11040],[5,"SpecialEq",4083,11040],[6,"VisitRecursion",11041],[6,"FunctionExpr",4083,11042],[10,"ArgAgg",4083,11043],[5,"ArrayNameSpace",4083,11044],[5,"ListNameSpace",4083,11045],[10,"SeriesTrait",10380,10920],[5,"FieldsMapper",4083,11046],[5,"IpcStreamReader",4083,11047],[10,"Read",11048],[10,"SeriesUdf",4083,11040],[10,"AsBinary",4083,11049],[10,"StringMethods",9351,11050],[5,"BorrowedFd",11051],[10,"AsFd",11051],[10,"AsList",4083,11052],[10,"AsRawFd",11053],[6,"AggExpr",4083,11035],[10,"SeriesSealed",4083,11054],[10,"AsString",4083,11055],[20,"MaybeUninit",11056],[10,"StringNameSpaceImpl",4083,11057],[5,"OwnedBatchedCsvReader",4083,11058],[5,"CsvWriter",4083,11059],[5,"BatchedWriter",11059],[10,"Write",11048],[5,"IpcWriter",4083,11060],[5,"BatchedWriter",11060],[5,"ParquetReader",4083,11061],[5,"BatchedParquetReader",4083,11062],[5,"ParquetWriter",4083,11063],[5,"BatchedWriter",11064],[5,"BatchedCsvReader",4083,11058],[5,"BinaryNameSpace",9334,11065],[6,"Operator",4083,11035],[10,"RenameAliasFn",4083,11040],[5,"UserDefinedFunction",4083,11066],[10,"SeriesBinaryUdf",4083,11040],[5,"InProcessQuery",4083,11067],[5,"HashMap",11068],[5,"CategoricalNameSpace",4083,11069],[10,"RoundSeries",4083,11070],[10,"TemporalMethods",10263,11071],[10,"NumOpsDispatchChecked",10843,10899],[5,"RollingOptionsDynamicWindow",4083,11072],[5,"Bounds",4083,11073],[6,"ClosedWindow",4083,11074],[6,"Label",4083,11074],[6,"StartBy",4083,11074],[5,"LazyCsvReader",4083,11075],[5,"ScanArgsIpc",4083,11076],[5,"Window",4083,11077],[5,"ScanArgsParquet",4083,11078],[5,"CsvReadOptions",4083,11079],[5,"CsvParseOptions",4083,11079],[6,"CsvEncoding",4083,11079],[6,"CommentPrefix",4083,11079],[6,"NullValues",4083,11079],[5,"CsvWriterOptions",4083,11080],[5,"SerializeOptions",4083,11080],[6,"QuoteStyle",4083,11080],[5,"IpcScanOptions",4083,11081],[5,"IpcWriterOptions",4083,11060],[6,"IpcCompression",4083,11060],[5,"JsonWriterOptions",4083,11082],[6,"JoinCoalesce",4083,11029],[6,"JoinType",4083,11029],[5,"ParquetOptions",4083,11083],[6,"JoinValidation",4083,11029],[6,"ParallelStrategy",4083,11083],[5,"AsOfOptions",4083,11084],[6,"AsofStrategy",4083,11084],[5,"ParquetWriteOptions",4083,11085],[6,"ParquetCompression",4083,11085],[6,"InterpolationMethod",4083,11086],[6,"ClosedInterval",4083,11087],[5,"GzipLevel",4083,11085],[5,"BrotliLevel",4083,11085],[6,"RankMethod",4083,11088],[5,"ZstdLevel",4083,11085],[5,"RankOptions",4083,11088],[6,"DslPlan",4083,11089],[5,"When",4083,11090],[5,"Then",4083,11090],[5,"ChainedWhen",4083,11090],[5,"ChainedThen",4083,11090],[6,"Excluded",4083,11035],[6,"BooleanFunction",4083,11091],[6,"CategoricalFunction",4083,11092],[6,"TemporalFunction",4083,11093],[6,"PowFunction",4083,11094],[6,"StringFunction",4083,11095],[5,"DatetimeArgs",4083,11096],[5,"DurationArgs",4083,11096],[5,"RollingCovOptions",4083,11097],[5,"StrptimeOptions",4083,11097],[5,"JoinOptions",4083,11097],[6,"WindowType",4083,11097],[6,"WindowMapping",4083,11097],[6,"NestedType",4083,11097],[5,"OptState",4083,11098],[6,"LiteralValue",4083,11099],[5,"AnonymousScanOptions",4083,11100],[5,"StatisticsOptions",4083,11101],[5,"UnionArgs",4083,11100],[5,"FileMetaData",4083,11102],[5,"RollingVarParams",4083,11103],[5,"RollingQuantileParams",4083,11103],[6,"NonExistent",4083,11104],[10,"LazyFileListReader",4083,11105],[5,"CloudOptions",9486,11106],[10,"Ord",10991],[6,"ColumnOrder",11107],[10,"BinaryNameSpaceImpl",4083,11108],[5,"PathBuf",11109],[5,"IpcStreamWriterOption",4083,11047],[10,"SerWriter",4083,11110],[5,"IpcWriterOption",4083,11060],[10,"CrossJoin",4083,11111],[10,"ExprEvalExtension",4083,11112],[10,"DateMethods",9351,11113],[10,"DatetimeMethods",9351,11114],[10,"DurationMethods",9351,11115],[10,"BinaryUdfOutputField",4083,11040],[10,"Default",11116],[5,"CStr",11117],[5,"RowGroupMetaData",11118],[5,"ParquetStatistics",4083],[6,"NullBehavior",10849,11119],[5,"Weak",10922],[5,"DateLikeNameSpace",9845,11120],[1,"char"],[10,"FromIterator",10907],[10,"SeriesMethods",4083,11121],[10,"PartialEq",10991],[10,"Scalar",11122],[10,"ListNameSpaceExtension",4083,11123],[10,"Command",11124],[5,"StructNameSpace",4083,11125],[10,"SerReader",4083,11110],[5,"IpcReader",4083,11081],[5,"IpcStreamWriter",4083,11047],[5,"JsonWriter",4083,11082],[5,"JsonReader",4083,11082],[5,"JsonLineReader",4083,11126],[10,"UdfSchema",4083,11127],[6,"RangeFunction",11128],[6,"BinaryFunction",11129],[6,"ArrayFunction",11130],[6,"ListFunction",11131],[6,"StructFunction",11132],[5,"MutableStatistics",11133],[1,"never"],[5,"Path",11109],[5,"OsString",11134],[5,"OsStr",11134],[10,"ToOwned",10893],[5,"CString",11135],[5,"MutableStructArray",11136],[5,"GrowableStruct",11137],[10,"FromData",9839,11138],[5,"Buffer",11139],[10,"FromDataUtf8",9839,11138],[10,"FromDataBinary",9839,11138],[5,"ListArray",11140],[6,"Ambiguous",4083,11104],[10,"NamedFromOwned",4083,11141],[10,"DataFrameJoinOps",4083,11142],[5,"FunctionOptions",11100],[10,"PartialOrd",10991],[6,"Context",11089],[10,"IndexOfSchema",4083,11001],[5,"BoundsIter",4083,11077],[6,"ReaderBytes",11034],[10,"PolarsTemporalGroupby",4083,11007],[10,"PolarsArray",4083,11143],[10,"Hash",10951],[10,"SeriesJoin",4083,11144],[10,"TimeMethods",9351,11145],[5,"NonZero",11146],[10,"IntoListNameSpace",4083,11123],[5,"FileMetaData",11147],[5,"StructValueIter",11148],[10,"AsofJoin",4083,11084],[10,"AsofJoinBy",4083,11149],[10,"ListNameSpaceImpl",4083,11150],[5,"ExprNameNameSpace",4083,11151],[5,"KeyValue",11147],[10,"IntoLazy",4083,11008],[10,"Literal",4083,11099],[5,"Null",4083,11099],[5,"RowIndex",11152],[10,"ChunkAggSeries",4083,11153],[10,"QuantileAggSeries",4083,11154],[10,"IndexToUsize",4083,11155],[10,"NamedFrom",4083,11141],[6,"RowGroupFetcher",11062],[5,"SplitNChars",4083,11156],[5,"Pin",11157],[5,"Request",10970],[10,"SeriesRank",4083,11088],[5,"BorrowedCursor",11158],[10,"VarInt",11159],[5,"IoSliceMut",11048],[10,"SeriesOpsTime",9351,11160],[10,"PolarsRound",4083,11161],[5,"AnonymousScanArgs",4083,11037],[10,"ChunkedSet",4083,10927],[5,"SchemaDescriptor",11162],[6,"SeekFrom",11048],[10,"VarAggSeries",4083,11163],[5,"StringNameSpace",11164],[10,"TakeChunked",4083,11030],[5,"IRPlan",11027],[10,"ToDummies",4083,11165],[10,"PolarsTruncate",4083,11166],[5,"AllocError",11036],[5,"RwLock",11167],[5,"SchemaInferenceResult",10233,11168],[10,"PolarsUpsample",4083,11169],[10,"VecHash",4083,11170],[6,"JsonFormat",4083,11082],[5,"BTreeMap",11171],[5,"IoSlice",11048],[10,"ArrayNameSpace",9315,11172],[10,"AsArray",9315,11173],[10,"AsString",9418,11050],[6,"Pattern",9418,11174],[5,"DatetimeInfer",9456,11175],[10,"StrpTimeParser",9456,11175],[17,"Error"],[10,"TryFromWithUnit",9456,11175],[6,"CloudType",9486,11106],[5,"AnonymousBuilder",9900,11176],[6,"RollingFunction",10132,11177],[6,"RollingFunctionBy",10161,11178],[5,"MutableNullArray",10203,11179],[5,"MutableBitmap",11180],[10,"AsSeries",10263,11071],[5,"Utf8Array",11181],[5,"BinaryArray",11182],[5,"SeriesIter",10380,11183],[5,"Rc",11184],[8,"FillNullLimit",1603],[10,"InitHashMaps",1913],[10,"InitHashMaps2",1913],[5,"TrueT",1913],[8,"PolarsResult",3336],[15,"IO",9247],[15,"Context",9247],[15,"Count",9241],[15,"Slice",9242],[8,"ChunkJoinOptIds",4083],[8,"DynArgs",4083],[8,"AllowedOptimizations",4083],[10,"ListFromIter",4083],[15,"Quantile",9121],[15,"Min",9121],[15,"Max",9121],[15,"IsBetween",10085],[15,"Any",10085],[15,"All",10085],[15,"GroupBy",9131],[15,"Union",9131],[15,"Sort",9131],[15,"Cache",9131],[15,"ExtContext",9131],[15,"DataFrameScan",9131],[15,"IR",9131],[15,"Select",9131],[15,"HStack",9131],[15,"Scan",9131],[15,"MapFunction",9131],[15,"Filter",9131],[15,"Distinct",9131],[15,"Slice",9131],[15,"Sink",9131],[15,"Join",9131],[15,"HConcat",9131],[15,"SortBy",9184],[15,"Filter",9184],[15,"Cast",9184],[15,"Sort",9184],[15,"Gather",9184],[15,"RenameAlias",9184],[15,"Ternary",9184],[15,"Function",9184],[15,"Window",9184],[15,"AnonymousFunction",9184],[15,"Slice",9184],[15,"BinaryExpr",9184],[15,"Round",10088],[15,"RoundSF",10088],[15,"Clip",10088],[15,"BackwardFill",10088],[15,"ForwardFill",10088],[15,"Random",10088],[15,"GatherEvery",10088],[15,"ValueCounts",10088],[15,"Rank",10088],[15,"Replace",10088],[15,"CumCount",10088],[15,"CumSum",10088],[15,"CumProd",10088],[15,"CumMin",10088],[15,"CumMax",10088],[15,"Range",9244],[15,"ConcatHorizontal",10110],[15,"ConcatVertical",10110],[15,"ExtractGroups",10110],[15,"SplitExact",10110],[15,"Contains",10110],[15,"Find",10110],[15,"Replace",10110],[15,"DatetimeFunction",10124],[10,"Utf8FromIter",10376],[10,"BinaryFromIter",10376]],"r":[[1,11185],[2,11185],[3,11185],[4,11185],[6,10993],[7,11185],[8,11185],[9,11185],[13,11185],[14,11185],[16,10993],[17,10877],[18,10877],[19,10877],[112,10877],[135,10877],[136,10877],[161,10877],[163,10877],[217,10877],[270,10877],[412,10877],[461,10877],[561,10877],[564,10877],[699,10877],[824,10936],[852,10937],[853,10937],[854,10944],[855,10944],[856,10946],[857,10941],[858,10942],[859,10938],[860,10940],[861,10943],[862,10939],[863,10942],[864,10941],[865,10947],[866,10948],[867,10944],[1000,10941],[1016,10940],[1044,10941],[1109,10937],[1110,10937],[1111,10942],[1112,10938],[1113,10940],[1114,10943],[1115,10939],[1116,10942],[1124,10940],[1126,10898],[1154,10952],[1155,10952],[1168,10953],[1170,10954],[1171,10954],[1174,10921],[1175,10921],[1176,10921],[1177,10921],[1178,10921],[1224,10921],[1244,11186],[1245,11186],[1257,10903],[1258,10903],[1259,10957],[1260,10903],[1261,10903],[1262,10903],[1477,10885],[1478,10885],[1479,10885],[1480,10885],[1492,10885],[1521,10885],[1552,10964],[1575,10965],[1576,10965],[1577,10965],[1578,10965],[1590,10965],[1591,10965],[1592,10965],[1595,10965],[1597,10965],[1604,10966],[1605,10966],[1606,10966],[1607,10966],[1608,10966],[1609,10966],[1610,10966],[1611,10966],[1612,10966],[1613,10966],[1614,10966],[1615,10966],[1616,10966],[1617,10966],[1618,10966],[1619,10966],[1620,10966],[1621,10966],[1622,10966],[1623,10966],[1624,10966],[1625,10966],[1626,10966],[1627,10966],[1628,10966],[1629,10966],[1630,10966],[1633,10966],[1634,10966],[1643,10966],[1644,10967],[1646,10897],[1647,10897],[1660,10966],[1702,10966],[1705,10966],[1714,10966],[1717,10966],[1760,10966],[1766,10966],[1803,10966],[1805,10968],[1809,10968],[1810,10968],[1811,10968],[1812,10968],[1813,10968],[1814,10968],[1815,10968],[1816,10968],[1817,10968],[1818,10968],[1819,10968],[1820,10968],[1821,10968],[1822,10968],[1823,10968],[1824,10968],[1825,10968],[1826,10968],[1827,10968],[1828,10968],[1829,10968],[1830,10968],[1831,10968],[1832,10968],[1833,10968],[1834,10968],[1835,10968],[1836,10968],[1837,10968],[1838,10968],[1839,10968],[1840,11187],[1841,11187],[1842,11188],[1843,11188],[1844,11188],[1848,10972],[1850,10972],[1868,10972],[1874,10967],[1875,11189],[1876,11189],[1877,11189],[1878,11189],[1881,11190],[1882,11191],[1883,11191],[1884,11191],[1885,11191],[1886,11191],[1887,11191],[1888,11191],[1889,10967],[1890,10897],[1891,10897],[1902,11192],[1903,11193],[1904,11193],[1905,11193],[1906,11192],[1907,11192],[1908,11194],[1909,11192],[1910,11193],[1911,11193],[1912,11193],[1914,10916],[1918,10876],[1919,10981],[1920,10981],[1921,10981],[1922,10961],[1924,10895],[1928,10876],[1930,10876],[1931,10876],[1933,10876],[1938,10876],[1939,10876],[1940,10979],[1943,10979],[1944,10980],[1945,10984],[1946,10983],[1947,10876],[1948,10895],[1949,10895],[1950,10895],[1955,11195],[1956,10876],[1959,11196],[1960,10876],[1965,11197],[1966,10876],[1971,11198],[1972,10876],[1976,10876],[1977,10924],[1978,10924],[1981,10876],[1987,10876],[1988,10876],[1992,10876],[1993,10876],[1994,10916],[1996,10984],[2000,11199],[2001,11155],[2002,11199],[2003,11199],[2004,11200],[2005,11199],[2007,10876],[2008,10876],[2012,10876],[2013,10876],[2017,10876],[2018,10876],[2022,10876],[2023,10876],[2027,10876],[2028,10876],[2038,10876],[2039,10876],[2041,10917],[2042,10917],[2054,10876],[2057,10876],[2059,10876],[2060,10916],[2064,11200],[2065,11200],[2066,11199],[2067,11200],[2068,11200],[2069,10876],[2070,10876],[2071,10876],[2072,10876],[2074,10983],[2075,10916],[2078,10969],[2082,10876],[2084,10876],[2088,10978],[2094,11201],[2095,10876],[2096,10918],[2097,10895],[2100,10876],[2104,10876],[2105,10876],[2109,10876],[2110,10876],[2114,10876],[2115,10876],[2119,10876],[2120,10876],[2124,10895],[2294,10984],[2308,10917],[2397,10895],[2922,10984],[2923,10984],[2927,10895],[3292,10979],[3293,10979],[3294,10980],[3295,10984],[3296,10983],[3298,10984],[3302,10983],[3303,10984],[3305,10984],[3306,10984],[3307,10979],[3308,10979],[3309,10983],[3314,10983],[3315,10993],[3321,10993],[3324,10993],[3332,10993],[3342,10881],[3349,10881],[3350,10881],[3351,10994],[3367,10881],[3380,10881],[3396,10994],[3403,10881],[3404,10881],[3405,10881],[3406,10881],[3407,10881],[3408,10994],[3409,10881],[3428,11202],[3429,11202],[3430,11202],[3432,10992],[3437,10992],[3438,10992],[3440,10992],[3441,10992],[3509,10992],[3543,10992],[3609,10992],[3691,11009],[3720,10884],[3723,11006],[3724,11006],[3726,10884],[3727,10884],[3728,10884],[3729,10884],[3730,10884],[3731,10884],[3734,10884],[3736,11017],[3748,10884],[3757,11006],[3824,11006],[3834,11006],[3958,11022],[3959,11023],[3960,11023],[3961,11023],[3962,11023],[3963,11023],[3964,11023],[3965,11023],[3966,11023],[3967,11023],[3971,11024],[3976,11025],[3977,11025],[3997,11005],[4028,11005],[4049,11005],[4063,11005],[4064,11005],[4065,11005],[4081,11203],[4082,11203],[4085,11035],[4092,11098],[4094,11104],[4097,11037],[4098,11037],[4099,11100],[4105,10916],[4106,10922],[4107,11043],[4110,10936],[4115,10876],[4116,10981],[4118,10981],[4119,10981],[4120,11044],[4121,10887],[4122,10961],[4124,11004],[4126,11049],[4127,11052],[4129,11084],[4130,10895],[4131,11055],[4133,11084],[4134,11149],[4135,11084],[4138,11204],[4144,11058],[4145,11062],[4150,10876],[4151,10944],[4154,11108],[4156,10876],[4157,10876],[4159,10876],[4160,11040],[4167,10876],[4168,10946],[4169,11091],[4170,10876],[4171,10884],[4174,11073],[4175,11077],[4177,11085],[4182,10979],[4186,10979],[4187,10980],[4188,11092],[4189,10984],[4190,11069],[4191,10983],[4192,10876],[4196,11090],[4197,11090],[4198,10966],[4199,11153],[4200,10966],[4201,10966],[4202,10966],[4203,10966],[4204,10966],[4205,10966],[4206,10966],[4207,10966],[4208,10966],[4209,10966],[4210,10966],[4211,10966],[4212,10928],[4213,11029],[4214,10966],[4215,10966],[4216,10966],[4217,10966],[4218,10966],[4219,10966],[4220,10966],[4221,10966],[4222,10966],[4223,10966],[4224,10966],[4225,10966],[4226,10877],[4227,10941],[4228,10952],[4229,10952],[4230,10927],[4232,11087],[4233,11074],[4241,11079],[4253,11111],[4254,11079],[4255,11079],[4256,11079],[4257,11032],[4258,11059],[4259,11080],[4266,10895],[4267,10895],[4268,10992],[4269,11142],[4270,11031],[4274,10895],[4281,11195],[4282,11113],[4284,10876],[4288,11096],[4289,11196],[4291,11114],[4292,10876],[4299,11197],[4300,10876],[4302,11030],[4309,11089],[4313,11013],[4319,11096],[4320,11198],[4321,11115],[4322,10876],[4323,11103],[4324,11007],[4333,11035],[4336,11035],[4337,11112],[4338,11151],[4345,11204],[4346,11204],[4347,10876],[4348,10924],[4350,10924],[4351,11046],[4352,11151],[4353,11102],[4354,11205],[4356,10966],[4357,10966],[4367,10876],[4375,10876],[4376,10876],[4381,10876],[4382,10876],[4390,11138],[4391,11138],[4392,11138],[4396,11042],[4397,11040],[4401,10916],[4403,11040],[4405,10984],[4406,11006],[4408,11006],[4410,10884],[4411,10884],[4412,10884],[4413,10884],[4414,10884],[4415,10884],[4420,11085],[4430,11199],[4431,11204],[4436,11155],[4437,11199],[4438,10884],[4439,10928],[4440,11199],[4443,11067],[4445,11001],[4446,11010],[4447,11155],[4448,11200],[4449,11199],[4451,11029],[4454,10876],[4455,10876],[4460,10876],[4461,10876],[4466,10876],[4467,10876],[4472,10876],[4473,10876],[4478,10876],[4479,10876],[4482,11086],[4484,11017],[4485,11008],[4486,11123],[4487,11002],[4488,10973],[4490,11060],[4491,11081],[4492,11081],[4493,11047],[4494,11047],[4495,11047],[4496,11060],[4497,11060],[4498,11060],[4501,10966],[4505,10966],[4517,11029],[4518,11008],[4519,11029],[4520,11028],[4521,11097],[4523,11029],[4524,11029],[4526,11082],[4527,11126],[4529,11082],[4530,11082],[4531,11082],[4535,11074],[4537,11206],[4539,11206],[4540,11206],[4546,11075],[4547,11105],[4548,11008],[4549,11008],[4550,11038],[4557,11029],[4562,10883],[4569,10942],[4570,10938],[4571,10940],[4572,10876],[4574,11143],[4575,11045],[4576,11123],[4577,11150],[4578,10939],[4579,10942],[4580,10876],[4581,11099],[4583,11099],[4585,10917],[4588,10917],[4613,11009],[4636,11099],[4641,11141],[4642,11141],[4654,11097],[4656,10941],[4658,10973],[4659,11104],[4671,11099],[4679,11079],[4680,10928],[4681,10928],[4682,10883],[4683,10899],[4684,10876],[4687,10876],[4689,10876],[4694,11035],[4695,11098],[4703,11058],[4704,10916],[4706,11204],[4707,11083],[4708,11085],[4709,11083],[4710,11061],[4712,11085],[4713,11063],[4714,11105],[4717,11200],[4718,11200],[4719,11199],[4720,11200],[4721,11200],[4723,11143],[4724,10876],[4725,10881],[4726,10876],[4727,10876],[4728,10921],[4729,10876],[4730,10885],[4731,10881],[4732,11161],[4733,11007],[4734,11166],[4736,11169],[4738,11094],[4739,10948],[4742,11154],[4743,10925],[4745,11080],[4753,11088],[4754,11088],[4755,10966],[4757,11040],[4763,10983],[4772,11097],[4775,11007],[4776,11072],[4777,10926],[4778,11103],[4779,11207],[4780,11103],[4784,11070],[4785,11208],[4790,10916],[4793,11039],[4794,11076],[4795,11078],[4796,11001],[4799,11001],[4800,10972],[4805,11110],[4806,11110],[4807,11080],[4808,10880],[4810,11040],[4811,11144],[4812,11121],[4813,11160],[4814,11088],[4815,11054],[4816,10920],[4817,11040],[4830,10967],[4831,10884],[4839,10897],[4840,10897],[4841,11040],[4845,11156],[4847,11074],[4849,10969],[4850,11101],[4858,10993],[4860,10876],[4861,10944],[4863,11095],[4864,11050],[4865,11057],[4867,10876],[4874,11097],[4878,11011],[4879,10978],[4882,11125],[4890,11030],[4892,11093],[4893,11071],[4895,11090],[4903,11201],[4904,11145],[4906,10876],[4907,10918],[4908,10895],[4912,11165],[4926,10876],[4933,10876],[4934,10876],[4939,10876],[4940,10876],[4945,10876],[4946,10876],[4951,10876],[4952,10876],[4953,11127],[4957,11100],[4959,10992],[4962,10895],[4965,11066],[4974,11163],[4975,11170],[4979,11090],[4981,11077],[4984,11097],[4985,11097],[4994,11085],[5085,11209],[5090,11209],[5100,11210],[5110,11006],[5112,11211],[5114,11212],[5126,11212],[5137,11213],[5143,11214],[5146,11215],[5159,11216],[5164,11216],[5167,10966],[5173,11217],[5198,11218],[5202,11219],[5206,11220],[5214,11214],[5216,11090],[5472,10984],[5477,11219],[5488,11214],[5497,11204],[5498,11204],[5499,11204],[5505,11221],[5508,11222],[5510,11222],[5512,11222],[5698,11223],[5706,11212],[5710,11224],[5711,11211],[5713,11225],[5725,11211],[5736,11225],[5738,11226],[5741,11225],[5742,11225],[5743,11226],[5744,11226],[5753,11143],[5754,11227],[5759,11228],[5760,10895],[5768,11229],[5770,11212],[5771,11229],[5773,11229],[5775,11229],[5777,11212],[5778,11229],[5785,11185],[5787,11215],[5788,11217],[5789,11096],[5791,11215],[5792,11215],[5793,11193],[5794,11193],[5795,11193],[5862,11143],[5863,11028],[6120,11133],[6122,11185],[6124,11230],[6265,11231],[6266,11214],[6271,11211],[6272,11211],[6274,11096],[6283,11013],[6284,11013],[6545,11006],[6571,10966],[6608,11214],[6612,11143],[6615,10966],[6620,11232],[6716,11006],[6720,11212],[6724,11226],[6940,10966],[6949,11214],[6951,10966],[6993,11204],[6995,11204],[7006,11074],[7007,11074],[7086,11233],[7098,11234],[7099,11234],[7101,11235],[7109,11211],[7115,11155],[7116,11168],[7249,11215],[7250,11215],[7252,11236],[7253,11086],[7255,11236],[7256,11237],[7399,11087],[7401,11204],[7402,11238],[7410,11239],[7415,11240],[7418,11241],[7426,11219],[7429,11219],[7435,11227],[7471,11214],[7486,11214],[7498,11099],[7545,10984],[7546,10984],[7551,11213],[7562,11214],[7565,11214],[7573,11242],[7574,11204],[7575,11219],[7585,11219],[7591,11219],[7605,10895],[7616,11219],[7637,11217],[7675,11217],[7686,11243],[7687,11244],[7735,11245],[7758,11219],[7762,11214],[7763,11143],[7817,10881],[7818,10881],[7819,10881],[7820,10881],[7827,11142],[7837,11219],[7868,11212],[7879,11246],[7880,11247],[7882,11248],[7889,11234],[7892,11204],[7986,11249],[7989,10966],[8002,11221],[8042,11143],[8060,10966],[8077,11156],[8079,11156],[8097,11233],[8110,11217],[8111,11250],[8113,11250],[8115,11250],[8117,11250],[8119,11250],[8131,11219],[8154,11090],[8158,11215],[8725,11214],[8746,11143],[8906,11090],[9119,10966],[9267,11022],[9268,11023],[9269,11023],[9270,11023],[9271,11023],[9272,11023],[9273,11023],[9274,11023],[9275,11023],[9276,11023],[9280,10968],[9284,10968],[9285,10968],[9286,10968],[9287,10968],[9288,10968],[9289,10968],[9290,10968],[9291,10968],[9292,10968],[9293,10968],[9294,10968],[9295,10968],[9296,10968],[9297,10968],[9298,10968],[9299,10968],[9300,10968],[9301,10968],[9302,10968],[9303,10968],[9304,10968],[9305,10968],[9306,10968],[9307,10968],[9308,10968],[9309,10968],[9310,10968],[9311,10968],[9312,10968],[9313,10968],[9314,10968],[9315,11172],[9316,11173],[9334,11065],[9350,11069],[9351,11113],[9352,11114],[9353,11115],[9354,11072],[9355,11160],[9356,11050],[9357,11145],[9410,11251],[9418,11050],[9424,11174],[9425,11050],[9447,11050],[9456,11175],[9458,11175],[9459,11175],[9469,11175],[9488,11106],[9489,11106],[9523,11252],[9535,11106],[9536,11106],[9542,10916],[9546,10876],[9547,10981],[9548,10981],[9549,10981],[9550,10961],[9552,10895],[9556,10876],[9558,10876],[9559,10876],[9561,10876],[9566,10876],[9567,10876],[9568,10979],[9571,10979],[9572,10980],[9573,10984],[9574,10983],[9575,10876],[9576,10895],[9577,10895],[9578,10895],[9583,11195],[9584,10876],[9587,11196],[9588,10876],[9593,11197],[9594,10876],[9599,11198],[9600,10876],[9604,10876],[9605,10924],[9606,10924],[9609,10876],[9615,10876],[9616,10876],[9620,10876],[9621,10876],[9622,10916],[9624,10984],[9628,11199],[9629,11155],[9630,11199],[9631,11199],[9632,11200],[9633,11199],[9635,10876],[9636,10876],[9640,10876],[9641,10876],[9645,10876],[9646,10876],[9650,10876],[9651,10876],[9655,10876],[9656,10876],[9666,10876],[9667,10876],[9669,10917],[9670,10917],[9682,10876],[9685,10876],[9687,10876],[9688,10916],[9692,11200],[9693,11200],[9694,11199],[9695,11200],[9696,11200],[9697,10876],[9698,10876],[9699,10876],[9700,10876],[9702,10983],[9703,10916],[9706,10969],[9710,10876],[9712,10876],[9716,10978],[9722,11201],[9723,10876],[9724,10918],[9725,10895],[9728,10876],[9732,10876],[9733,10876],[9737,10876],[9738,10876],[9742,10876],[9743,10876],[9747,10876],[9748,10876],[9752,10895],[9765,10984],[9768,10917],[9773,10895],[9789,10984],[9790,10984],[9791,10895],[9809,10979],[9810,10979],[9811,10980],[9812,10984],[9813,10983],[9815,10984],[9819,10983],[9820,10984],[9822,10984],[9823,10984],[9824,10979],[9825,10979],[9826,10983],[9831,10983],[9832,10993],[9833,10993],[9834,10993],[9835,10993],[9836,11234],[9837,11234],[9838,11234],[9839,11138],[9840,11138],[9841,11138],[9845,11120],[9897,11024],[9900,11176],[9920,11187],[9921,11187],[9936,11091],[9939,11092],[9976,11042],[10017,11094],[10046,11095],[10057,11093],[10081,11042],[10082,11042],[10083,11042],[10084,11042],[10126,11092],[10130,11094],[10136,11177],[10165,11178],[10190,11188],[10191,11188],[10192,11188],[10193,11086],[10196,11086],[10197,11237],[10198,11253],[10199,11254],[10200,11254],[10201,11254],[10202,11254],[10203,11179],[10233,11168],[10247,11168],[10260,10972],[10261,10972],[10262,10972],[10263,11071],[10264,11071],[10285,10967],[10288,10967],[10289,11189],[10290,11189],[10291,11189],[10292,11189],[10295,11190],[10296,11191],[10297,11191],[10298,11191],[10299,11191],[10300,11191],[10301,11191],[10302,11191],[10303,10967],[10304,10897],[10305,10897],[10316,11055],[10317,11156],[10318,11057],[10337,11233],[10345,11156],[10347,11156],[10350,11233],[10356,11250],[10358,11250],[10360,11250],[10362,11250],[10364,11250],[10370,11066],[10376,11255],[10377,11255],[10381,10966],[10383,11002],[10384,10920],[10387,10880],[10388,11183],[10389,11183],[10390,10920],[10399,10880],[10405,10880],[10585,10880],[10703,10880],[10799,10894],[10800,10894],[10822,10883],[10823,10883],[10824,10883],[10826,10883],[10830,10883],[10843,10899],[10844,10899],[10851,11119]],"b":[[26,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[27,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[28,"impl-Add-for-%26ChunkedArray%3CT%3E"],[29,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[30,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[31,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[32,"impl-Add-for-ChunkedArray%3CT%3E"],[33,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[34,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[35,"impl-Add-for-ChunkedArray%3CStringType%3E"],[36,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[37,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[39,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[40,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[41,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[42,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[43,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[44,"impl-AggList-for-ChunkedArray%3CListType%3E"],[45,"impl-AggList-for-ChunkedArray%3CT%3E"],[48,"impl-ChunkedArray%3CListType%3E"],[49,"impl-ChunkedArray%3CFixedSizeListType%3E"],[50,"impl-ChunkedArray%3CFixedSizeListType%3E"],[51,"impl-ChunkedArray%3CListType%3E"],[55,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[56,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[57,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[58,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[59,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[60,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[62,"impl-ChunkedArray%3CListType%3E"],[63,"impl-ChunkedArray%3CFixedSizeListType%3E"],[65,"impl-ChunkedArray%3CFloat64Type%3E"],[66,"impl-ChunkedArray%3CFloat32Type%3E"],[69,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[70,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[71,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[72,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[73,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[74,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[75,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[76,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[77,"impl-ChunkedArray%3CT%3E"],[78,"impl-ChunkedArray%3CBinaryType%3E"],[79,"impl-ChunkedArray%3CStringType%3E"],[82,"impl-ChunkedArray%3CListType%3E"],[83,"impl-ChunkedArray%3CFixedSizeListType%3E"],[84,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[85,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[86,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[87,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[88,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[89,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[90,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[91,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[92,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[93,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[94,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[95,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[97,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[98,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[99,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[100,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[101,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[102,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[103,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[104,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[105,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[106,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[107,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[108,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[109,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[110,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[111,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[114,"impl-ChunkedArray%3CStringType%3E"],[115,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[119,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[120,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[122,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[123,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[124,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[125,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[126,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[127,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[128,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[129,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[130,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[138,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[139,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[140,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[141,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[142,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[143,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[144,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[154,"impl-Container-for-ChunkedArray%3CT%3E"],[155,"impl-ChunkedArray%3CT%3E"],[173,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[174,"impl-Div-for-ChunkedArray%3CT%3E"],[175,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[176,"impl-Div-for-%26ChunkedArray%3CT%3E"],[184,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[185,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[186,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[187,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[188,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[189,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[190,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[191,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[192,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[193,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[194,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[195,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[196,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[197,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[198,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[199,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[200,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[201,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[202,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[203,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[205,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[206,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[207,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[208,"impl-ChunkFilter%3CListType%3E-for-ChunkedArray%3CListType%3E"],[209,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[210,"impl-ChunkFilter%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[211,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[212,"impl-ChunkFilter%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[213,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[214,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[215,"impl-ChunkFilter%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[218,"impl-Debug-for-ChunkedArray%3CT%3E"],[219,"impl-Debug-for-ChunkedArray%3CListType%3E"],[220,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[221,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[222,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[223,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[224,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[226,"impl-ChunkedArray%3CFixedSizeListType%3E"],[227,"impl-ChunkedArray%3CListType%3E"],[236,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[237,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[238,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[239,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[240,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[241,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[242,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[243,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[244,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[245,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[246,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[247,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[248,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[249,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[250,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[251,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[252,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[253,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[254,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[255,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[256,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[257,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[258,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[259,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[260,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[261,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[262,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[263,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[264,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[265,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[266,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[267,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[268,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[269,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[271,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[272,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[273,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[274,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[275,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[276,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[277,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[278,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[280,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[281,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[282,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[283,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[284,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[285,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[286,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[287,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[288,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[289,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[290,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[291,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[294,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[295,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[296,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[297,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[298,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[299,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[300,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[301,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[302,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[303,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[304,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[305,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[306,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[307,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[308,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[309,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[311,"impl-ChunkedArray%3CFixedSizeListType%3E"],[312,"impl-ChunkedArray%3CListType%3E"],[314,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[315,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[316,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[317,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[318,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[319,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[320,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[321,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[322,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[323,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[324,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[325,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[326,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[329,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[330,"impl-ChunkedArray%3CListType%3E"],[331,"impl-ChunkedArray%3CFixedSizeListType%3E"],[335,"impl-ChunkedArray%3CFixedSizeListType%3E"],[336,"impl-ChunkedArray%3CListType%3E"],[342,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[343,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[344,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[345,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[346,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[347,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[348,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[349,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[350,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[351,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[352,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[353,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[355,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[356,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[357,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[358,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[359,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[360,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[361,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[362,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[363,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[364,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[365,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[366,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[367,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[368,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[369,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[370,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[371,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[372,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[378,"impl-ChunkedArray%3CListType%3E"],[379,"impl-ChunkedArray%3CFixedSizeListType%3E"],[387,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[388,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[389,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[390,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[391,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[392,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[393,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[394,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[396,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[397,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[422,"impl-Container-for-ChunkedArray%3CT%3E"],[423,"impl-ChunkedArray%3CT%3E"],[428,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[429,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[430,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[431,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[432,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[433,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[434,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[435,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[436,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[437,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[438,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[439,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[440,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[441,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[442,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[443,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[444,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[445,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[446,"impl-ChunkedArray%3CBooleanType%3E"],[447,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[448,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[449,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[450,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[451,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[452,"impl-ChunkedArray%3CBooleanType%3E"],[453,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[454,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[455,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[456,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[457,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[458,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[459,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[466,"impl-ChunkedArray%3CBooleanType%3E"],[467,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[469,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[470,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[471,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[472,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[473,"impl-ChunkedArray%3CT%3E"],[474,"impl-ChunkedArray%3CBooleanType%3E"],[475,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[476,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[477,"impl-Mul-for-ChunkedArray%3CT%3E"],[478,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[481,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[482,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[483,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[485,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[486,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[487,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[488,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[489,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[490,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[491,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[492,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[493,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[494,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[495,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[496,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[497,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[498,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[499,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[500,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[501,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[502,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[503,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[504,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[505,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[506,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[507,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[508,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[509,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[510,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[511,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[512,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[513,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[514,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[515,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[516,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[517,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[518,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[519,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[520,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[521,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[522,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[523,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[524,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[526,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[527,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[528,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[529,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[530,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[531,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[532,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[533,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[540,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[541,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[542,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[543,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[544,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[545,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[546,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[547,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[548,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[549,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[550,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[551,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[552,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[553,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[554,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[555,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[556,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[557,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[558,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[559,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[562,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[563,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[565,"impl-ChunkedArray%3CStringType%3E"],[566,"impl-ChunkedArray%3CListType%3E"],[567,"impl-ChunkedArray%3CStringType%3E"],[568,"impl-ChunkedArray%3CListType%3E"],[571,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[572,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[573,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[574,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[575,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[576,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[583,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[584,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[585,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[586,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[587,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[588,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[589,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[590,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[591,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[592,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[593,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[594,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[595,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[596,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[597,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[598,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[599,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[600,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[601,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[602,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[603,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[604,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[605,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[606,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[607,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[608,"impl-Rem-for-ChunkedArray%3CT%3E"],[611,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[612,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[613,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[614,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[615,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[616,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[617,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[618,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[623,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[624,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-%26mut+ChunkedArray%3CT%3E"],[625,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[626,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[627,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[628,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[629,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[630,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[631,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[632,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[633,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[634,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[635,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[636,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[637,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[643,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[644,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[645,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[646,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[647,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[648,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[649,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[650,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[651,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[652,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[653,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[654,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[655,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[656,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[657,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[658,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[660,"impl-ChunkedArray%3CT%3E"],[661,"impl-Container-for-ChunkedArray%3CT%3E"],[662,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[663,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[664,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[665,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[666,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[667,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[668,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[669,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[670,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[671,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[672,"impl-ChunkedArray%3CT%3E"],[673,"impl-Container-for-ChunkedArray%3CT%3E"],[675,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[676,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[677,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[678,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[679,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[680,"impl-Sub-for-ChunkedArray%3CT%3E"],[681,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[683,"impl-ChunkedArray%3CBooleanType%3E"],[684,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[685,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[686,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[687,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[689,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[690,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[693,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[694,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[695,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[696,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[697,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[698,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[703,"impl-ChunkedArray%3CListType%3E"],[704,"impl-ChunkedArray%3CFixedSizeListType%3E"],[705,"impl-ChunkedArray%3CListType%3E"],[706,"impl-ChunkedArray%3CT%3E"],[711,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[712,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[713,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[714,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[715,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[716,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[718,"impl-ChunkedArray%3CFixedSizeListType%3E"],[719,"impl-ChunkedArray%3CListType%3E"],[732,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[733,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[734,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[735,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[736,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[741,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[742,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[743,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[744,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[745,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[746,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[747,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[748,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[749,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[750,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[751,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[752,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[753,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[754,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[755,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[756,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[757,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[758,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[759,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[760,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[761,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[762,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[763,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[764,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[765,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[766,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[767,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[768,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[769,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[770,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[771,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[772,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[773,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[774,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[775,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[785,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[786,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[787,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[788,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[789,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[790,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[791,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[792,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[793,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[794,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[795,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[796,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[797,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[798,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[799,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[800,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[801,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[802,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[803,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[804,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[805,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[806,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[807,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[808,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[809,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[810,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[811,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[812,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[813,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[814,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[815,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[816,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[817,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[818,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[819,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[820,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[995,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[996,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1281,"impl-MetadataProperties"],[1282,"impl-Flags-for-MetadataProperties"],[1283,"impl-Flags-for-MetadataFlags"],[1284,"impl-MetadataFlags"],[1351,"impl-LowerHex-for-MetadataProperties"],[1352,"impl-Octal-for-MetadataProperties"],[1353,"impl-Binary-for-MetadataProperties"],[1354,"impl-Debug-for-MetadataProperties"],[1355,"impl-UpperHex-for-MetadataProperties"],[1356,"impl-LowerHex-for-MetadataFlags"],[1357,"impl-Binary-for-MetadataFlags"],[1358,"impl-UpperHex-for-MetadataFlags"],[1359,"impl-Debug-for-MetadataFlags"],[1360,"impl-Octal-for-MetadataFlags"],[1368,"impl-MetadataProperties"],[1369,"impl-Flags-for-MetadataProperties"],[1370,"impl-MetadataFlags"],[1371,"impl-Flags-for-MetadataFlags"],[1483,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1484,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1517,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1518,"impl-ObjectArray%3CT%3E"],[1532,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1533,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1543,"impl-ObjectArray%3CT%3E"],[1544,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1546,"impl-ObjectArray%3CT%3E"],[1547,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1549,"impl-Array-for-ObjectArray%3CT%3E"],[1550,"impl-ObjectArray%3CT%3E"],[1553,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1554,"impl-ObjectChunkedBuilder%3CT%3E"],[1556,"impl-ObjectChunkedBuilder%3CT%3E"],[1557,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[2298,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2299,"impl-Logical%3CDurationType,+Int64Type%3E"],[2301,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2302,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2303,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2304,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2305,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2554,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2555,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2556,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2557,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2558,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2567,"impl-PartialEq-for-DataType"],[2568,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2574,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2575,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2576,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2578,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2579,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2580,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2614,"impl-Display-for-AnyValue%3C\'_%3E"],[2615,"impl-Debug-for-AnyValue%3C\'a%3E"],[2617,"impl-Debug-for-DataType"],[2618,"impl-Display-for-DataType"],[2620,"impl-Debug-for-TimeUnit"],[2621,"impl-Display-for-TimeUnit"],[2627,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2628,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2643,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2644,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2645,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2646,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2647,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2650,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2651,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2652,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2654,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2655,"impl-From%3C%26ArrowField%3E-for-Field"],[2679,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2680,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2703,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2704,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2705,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2706,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2707,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2711,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2712,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2713,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2714,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2715,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2751,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2752,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2753,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2755,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2756,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2757,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2860,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[2861,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[2862,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[2863,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[2864,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[2914,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2915,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2916,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2918,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2919,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2920,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2957,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2958,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2959,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2960,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2961,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2962,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2963,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2964,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2971,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2972,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2973,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2975,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2976,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2977,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2981,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[2982,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[3003,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[3004,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3011,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3012,"impl-Logical%3CDurationType,+Int64Type%3E"],[3018,"impl-Logical%3CTimeType,+Int64Type%3E"],[3019,"impl-Logical%3CDateType,+Int32Type%3E"],[3020,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3035,"impl-Logical%3CDurationType,+Int64Type%3E"],[3036,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3084,"impl-Logical%3CDateType,+Int32Type%3E"],[3085,"impl-Logical%3CTimeType,+Int64Type%3E"],[3086,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3092,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3093,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3382,"impl-Display-for-ErrString"],[3383,"impl-Debug-for-ErrString"],[3384,"impl-Debug-for-PolarsError"],[3385,"impl-Display-for-PolarsError"],[3389,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3390,"impl-From%3CError%3E-for-PolarsError"],[3391,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3392,"impl-From%3CError%3E-for-PolarsError"],[3393,"impl-From%3CError%3E-for-PolarsError"],[3395,"impl-From%3CParquetError%3E-for-PolarsError"],[3518,"impl-Debug-for-DataFrame"],[3519,"impl-Display-for-DataFrame"],[3525,"impl-From%3C%26Schema%3E-for-DataFrame"],[3526,"impl-From%3CStructChunked%3E-for-DataFrame"],[3527,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3554,"impl-Index%3Cusize%3E-for-DataFrame"],[3555,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3556,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3557,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3558,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3559,"impl-Index%3C%26str%3E-for-DataFrame"],[3560,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3561,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3580,"impl-Container-for-DataFrame"],[3581,"impl-DataFrame"],[3590,"impl-DataFrame"],[3591,"impl-Container-for-DataFrame"],[3629,"impl-Container-for-DataFrame"],[3630,"impl-DataFrame"],[3634,"impl-Container-for-DataFrame"],[3635,"impl-DataFrame"],[3657,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3658,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BArrowField%5D)%3E-for-DataFrame"],[3832,"impl-Debug-for-GroupByMethod"],[3833,"impl-Display-for-GroupByMethod"],[3840,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3841,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3842,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3876,"impl-IntoIterator-for-%26GroupsIdx"],[3877,"impl-IntoIterator-for-GroupsIdx"],[3879,"impl-IntoParallelIterator-for-%26GroupsIdx"],[3880,"impl-IntoParallelIterator-for-GroupsIdx"],[5200,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5201,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5839,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[5840,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[5841,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[5852,"impl-Default-for-Arc%3C%5BT%5D%3E"],[5853,"impl-Default-for-Arc%3CT%3E"],[5854,"impl-Default-for-Arc%3CCStr%3E"],[5855,"impl-Default-for-Arc%3Cstr%3E"],[6325,"impl-Expr"],[6326,"impl-PartialEq-for-Expr"],[6329,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[6330,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[6348,"impl-PartialEq-for-Arc%3CT,+A%3E"],[6349,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[6350,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[6353,"impl-PartialEq-for-StructArray"],[6354,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[6629,"impl-Display-for-Duration"],[6630,"impl-Debug-for-Duration"],[6652,"impl-Display-for-JoinType"],[6653,"impl-Debug-for-JoinType"],[6655,"impl-Display-for-JoinValidation"],[6656,"impl-Debug-for-JoinValidation"],[6669,"impl-Debug-for-Expr"],[6670,"impl-Display-for-Expr"],[6672,"impl-Display-for-Operator"],[6673,"impl-Debug-for-Operator"],[6675,"impl-Display-for-BooleanFunction"],[6676,"impl-Debug-for-BooleanFunction"],[6677,"impl-Display-for-CategoricalFunction"],[6678,"impl-Debug-for-CategoricalFunction"],[6679,"impl-Display-for-TemporalFunction"],[6680,"impl-Debug-for-TemporalFunction"],[6681,"impl-Debug-for-PowFunction"],[6682,"impl-Display-for-PowFunction"],[6683,"impl-Display-for-StringFunction"],[6684,"impl-Debug-for-StringFunction"],[6685,"impl-Display-for-FunctionExpr"],[6686,"impl-Debug-for-FunctionExpr"],[6702,"impl-Debug-for-Arc%3CT,+A%3E"],[6703,"impl-Pointer-for-Arc%3CT,+A%3E"],[6704,"impl-Display-for-Arc%3CT,+A%3E"],[6753,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[6754,"impl-From%3CDslPlan%3E-for-LazyFrame"],[6814,"impl-From%3CAggExpr%3E-for-Expr"],[6815,"impl-From%3Ci8%3E-for-Expr"],[6816,"impl-From%3Cu64%3E-for-Expr"],[6817,"impl-From%3Ci16%3E-for-Expr"],[6818,"impl-From%3Cu32%3E-for-Expr"],[6819,"impl-From%3Ci32%3E-for-Expr"],[6820,"impl-From%3Ci64%3E-for-Expr"],[6821,"impl-From%3Cf32%3E-for-Expr"],[6822,"impl-From%3Cf64%3E-for-Expr"],[6823,"impl-From%3Cu8%3E-for-Expr"],[6824,"impl-From%3Cu16%3E-for-Expr"],[6826,"impl-From%3Cbool%3E-for-Expr"],[6827,"impl-From%3C%26str%3E-for-Expr"],[6830,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6831,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6832,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6834,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6835,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6836,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6837,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6838,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6839,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6840,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6846,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[6847,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[6848,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[6849,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[6868,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[6869,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[6872,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[6873,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[6874,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[6875,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[6876,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[6877,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[6878,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[6879,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[6880,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[6881,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[6882,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[6883,"impl-From%3CT%3E-for-Arc%3CT%3E"],[6884,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[6889,"impl-From%3CMutableStructArray%3E-for-StructArray"],[6890,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[6892,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[6893,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[6894,"impl-From%3CArrowSchema%3E-for-Schema"],[6896,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[6897,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[6898,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[6912,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6913,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6921,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6922,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6934,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6935,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[8047,"impl-StructArray"],[8048,"impl-Array-for-StructArray"],[8056,"impl-StructArray"],[8057,"impl-Array-for-StructArray"],[8749,"impl-Array-for-StructArray"],[8750,"impl-StructArray"],[8996,"impl-LazyFileListReader-for-LazyCsvReader"],[8997,"impl-LazyCsvReader"],[8998,"impl-LazyJsonLineReader"],[8999,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9047,"impl-LazyFileListReader-for-LazyCsvReader"],[9048,"impl-LazyCsvReader"],[9049,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9050,"impl-LazyJsonLineReader"],[9087,"impl-Array-for-StructArray"],[9088,"impl-StructArray"],[9475,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[9476,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[9481,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[9482,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[10149,"impl-Debug-for-RollingFunction"],[10150,"impl-Display-for-RollingFunction"],[10178,"impl-Display-for-RollingFunctionBy"],[10179,"impl-Debug-for-RollingFunctionBy"],[10395,"impl-Add%3CT%3E-for-Series"],[10396,"impl-Add-for-%26Series"],[10397,"impl-Add-for-Series"],[10398,"impl-Add%3CT%3E-for-%26Series"],[10414,"impl-AsSeries-for-Series"],[10415,"impl-SeriesSealed-for-Series"],[10461,"impl-Div-for-%26Series"],[10462,"impl-Div%3CT%3E-for-%26Series"],[10463,"impl-Div-for-Series"],[10464,"impl-Div%3CT%3E-for-Series"],[10474,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10475,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10476,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10478,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10479,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10480,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10496,"impl-Debug-for-Series"],[10497,"impl-Display-for-Series"],[10502,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[10503,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[10504,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[10505,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[10506,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[10513,"impl-FromIterator%3Ci8%3E-for-Series"],[10514,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[10515,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[10516,"impl-FromIterator%3Cf64%3E-for-Series"],[10517,"impl-FromIterator%3Cu32%3E-for-Series"],[10518,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[10519,"impl-FromIterator%3C%26u16%3E-for-Series"],[10520,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[10521,"impl-FromIterator%3C%26i64%3E-for-Series"],[10522,"impl-FromIterator%3Ci32%3E-for-Series"],[10523,"impl-FromIterator%3C%26bool%3E-for-Series"],[10524,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[10525,"impl-FromIterator%3C%26f64%3E-for-Series"],[10526,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[10527,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[10528,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[10529,"impl-FromIterator%3C%26u64%3E-for-Series"],[10530,"impl-FromIterator%3C%26i16%3E-for-Series"],[10531,"impl-FromIterator%3C%26str%3E-for-Series"],[10532,"impl-FromIterator%3C%26f32%3E-for-Series"],[10533,"impl-FromIterator%3Cbool%3E-for-Series"],[10534,"impl-FromIterator%3Cu64%3E-for-Series"],[10535,"impl-FromIterator%3CString%3E-for-Series"],[10536,"impl-FromIterator%3C%26u32%3E-for-Series"],[10537,"impl-FromIterator%3Cu16%3E-for-Series"],[10538,"impl-FromIterator%3Ci64%3E-for-Series"],[10539,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[10540,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[10541,"impl-FromIterator%3C%26i32%3E-for-Series"],[10542,"impl-FromIterator%3Cf32%3E-for-Series"],[10543,"impl-FromIterator%3Ci16%3E-for-Series"],[10544,"impl-FromIterator%3C%26i8%3E-for-Series"],[10545,"impl-FromIterator%3Cu8%3E-for-Series"],[10546,"impl-FromIterator%3C%26u8%3E-for-Series"],[10547,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[10548,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[10549,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[10550,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[10551,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[10552,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[10553,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[10554,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[10555,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[10556,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[10557,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[10570,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10571,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10572,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10574,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10575,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10576,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10615,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10616,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10617,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10619,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10620,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10621,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10630,"impl-Mul%3CT%3E-for-%26Series"],[10631,"impl-Mul%3CT%3E-for-Series"],[10632,"impl-Mul-for-%26Series"],[10633,"impl-Mul-for-Series"],[10638,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[10639,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[10640,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[10641,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[10642,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[10643,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[10644,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[10645,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[10646,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[10647,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[10648,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[10649,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[10650,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[10651,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[10652,"impl-NamedFrom%3CT,+T%3E-for-Series"],[10653,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[10654,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[10655,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[10656,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[10657,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[10658,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[10659,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[10660,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[10661,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[10662,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[10663,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[10664,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[10665,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[10666,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[10667,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[10668,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[10669,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[10670,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[10671,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[10672,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[10673,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[10674,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[10675,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[10676,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[10677,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[10678,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[10679,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[10680,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[10681,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[10682,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[10683,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[10684,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[10685,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[10686,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[10687,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[10688,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[10694,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10695,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10696,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10698,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10699,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10700,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10708,"impl-Rem-for-%26Series"],[10709,"impl-Rem%3CT%3E-for-%26Series"],[10710,"impl-Rem%3CT%3E-for-Series"],[10739,"impl-Sub%3CT%3E-for-%26Series"],[10740,"impl-Sub%3CT%3E-for-Series"],[10741,"impl-Sub-for-%26Series"],[10742,"impl-Sub-for-Series"],[10767,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[10768,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[10770,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[10771,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAAK0O9A4xDzQPNQ82DzcPOA89D0APRQ9GD2sP","e":"OzAAAAEAAOseJQQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUABoAOAAFAEIAAgBGAAoAVQAHAF4ACQBpAAAAbAAEAHIAFgCLABAAnwACAKMAAQCpAA0AuQATAM4ACgDaAAsA6AABAOwAHQAQARQAJwESADsBFABSAQEAVwEeAHgBAgB/ARAAkQEDAJgBAgCdAQEAoAEHAK0BIQDTAQYA3AEIAOYBMgAdAhMAMgICADYCBAA8AgUARgIAAEgCGgBkAgcAcAIRAIQCDwCWAgoAogIOALQCAQC7AgAAvQIBAMQCAADIAgYA0AIAANICAQDVAgwA4wIAAOUCKAAQAwAAEgMjADgDNABvAwgAfAMRAJEDWAD3AxIAFQQHAB4ESQBrBA0AegQBAH0EGQCYBAAAmwQUALQEAwC8BAMAwgQ1AAMFAQAKBRIAIQUMADAFBwA6BQIAPwUCAEQFDQBaBQAAXAUAAF8FAQBlBQsAfAUBAIAFAACDBQIAigUDAI8FAQCXBQsAqQUDAK8FDgDABQcAygUVAOEFBwDqBQAA7QUBAPAFAQD0BRAABgYAAAkGAAALBgMAEAYCABQGAAAWBggAIAYAACIGBQAqBgEALQYAAC8GAQAyBgMANwYDADwGAgBABgMARgYAAEkGAABRBgAAVgYAAFkGAQBeBgEAYQYAAGQGAABsBgAAcgYCAH0GBgCHBg0AlwYFAJ8GCACqBgMArwYBALMGAAC1BgEAuwYFAMQGAQDNBgEA2QYAANsGAQDeBgAA4QYAAOMGAADnBgAA6QYAAO4GDAD9BgIADAcAAA4HBwAXBwIAHQcAAB8HAwAkBwEAJwcFADMHFQBKBwEATgcEAFQHAwBbBwYAbwcDAHQHCAB+BwQAhQcCAIkHBQCRBwAAkwcMAKQHAQCoBwEArgcBALEHAQC0BwMAuQcAALsHAAC+BwEAwgcAAMQHAQDHBwAAyQcCAM0HDADbBwAA3QcBAOAHAADiBwEA5QcAAOcHAQDqBwAA7AcBAO8HAADzBwAA9wcBAPsHAAD+BwAAAAgAAAIIAwAHCAAACggIABQIAQAXCAUAHwgBACMIAAAlCAIAKggAAC8IAwA0CAEANwgAADkIAQA8CAAAPggBAEEIAABDCAEARggAAEgIAQBLCAAATQgAAFAIJgB4CBgAkghnAP0IWABXCQcAYQmYAPsJBwAECigALgoBADEKDwBECgEAVAoEAFsKAgBfCgIAeAoBAHsKAACDCgAAhgoAAIgKBgCQCgQAlgoAAJgKBACeCgEAoQoZAMAKDwDSCisA/woAACsLCQA3CwAAOQsBADwLBABCCwEARwsAAEkLBQBQCwAAUwsCAFgLBABeCwAAYQsQAHQLAAB3Cw8AiAsAAIsLDQCaCw0AqQsAAKsLAQCvCw8AwAsAAMgLAADKCwAAzwsQAOILAADkCwIA6QshABAMZQB3DC8AqAwCAKwMNQDjDAEA5gwIAPAMAADyDAEA9QwEAPsMAQAADQAAAg0CAAYNAAAJDQQADw0EABUNEgApDREAPA0AAD4NBABEDQQATA0EAFINFQBrDQAAbg0KAHoNAgCCDREAlg0QAK4NAQCyDQIAtg0AALgNAAC9DQMAxg0DANgNAADaDQAA3A0BAOMNDAD2DQIA/Q0AAAEOAAAIDgAADA4BABkOAQAdDgAAIw4AACwOAgAwDgAAMw4AADUOAQA8DgAAPg4EAEYOBgBPDgkAWg4AAF0OAQBhDgQAbQ4NAHwOAgCBDgoAjQ4BAJAOAwCVDgMAmg4JAKUOBwCuDgEAsQ4YAMsOKAD1DgYAAQ8DAAcPAAAJDwMADw8AABMPBwAjDw0AMg8BADkPAwA+DwEAQg8CAEcPAABJDx8AbA8MAHsPBQCCDwcAiw8jALEPCwC+Dw8Azw8AANIPAwDZDwYA4w8OAPQPBQD8DwAA/w8IAAkQAQANEAQAExAFABoQAAAfEAkAKhABAC4QBAA0EAEANxAKAEMQAABGEAAASBAJAFMQAABVEAkAYBAEAGkQAABsEAAAdBACAHsQAAB+EAEAhBAKAJAQEQClEAcArhABALEQBAC6EAQAwhAEAMwQAwDREAAA0xALAOEQCgDuEAEA8hAAAPUQAAD3EAUA/hADAAMRBAAJEQMAEBECABYRAAAYEQEAHBEAAB4RBAAlEQ8ANhEAADkRAQA8EQMAQhECAEgRFQBfEQkAaxEAAG0RAQBxEQAAcxEBAHcRAAB5EQEAfREAAH8RBACGEQEAiREBAI0RAACQEQAAkhEDAJcRAgCbEQgAphEHALARAAC0EQEAuBEAALoRAAC8EQEAvxEBAMIRAQDHEQAAyRENANoRBQDhEQcA6xECAO8RBgD6EQEA/REAAP8RAQACEgMABxIAAAkSAwAOEgIAEhIAABQSBAAaEgAAHBIEACISBAAoEgEAKxIBAC4SAQAxEgEANBIAADYSAAA5EgAAPBICAEESAwBGEgcAUBICAFcSAABZEgUAYBIEAGYSAABpEgAAaxIEAHESAwB2EgIAehIAAHwSDQCLEhMAoBISALQSCAC+EgQAxhIBAMoSAADMEgUA0xIEANkSAADbEgIA4BIAAOISAADmEgEA6xIHAPQSAwD8EgYABBMJABETAQAUEwYAHBMCACETAgAoEwUALxMSAEQTAABGEwEAShMAAEwTAQBQEwAAUhMBAFYTAABYEwMAXhMDAGMTAgBqEwkAdRMAAHgTBQCAEwIAhBNbAOETBADqEwAA7BMAAO8TBQD3EwAA/hMAAAAUAAADFAAABRQAAAkUBQATFAAAFxQAAB4UAAAiFAAALhQCADIUBAA4FAAAOhQCAD4UAQBEFAEARxQEAE0UAQBVFAoAYhT2AFoVAABcFQEAXxUAAGEVAgBnFQAAaxUAAG8VAABxFQAAcxUAAHkVAAB8FQAAfhUBAIEVAACLFU0A2hUKAOYVWQBBFgEARRYBAEkWAABNFgIAUxYKAGEWBABrFgAAbRYAAHcWAQB7FgAAgRYAAIMWAQCIFgEAlxYAAJ0WAACiFgIAqBYAAKoWBQCyFioA4Rb+AOIXAADnFwEA6hcDAPAXAADyFwMA+hccABgYTwBpGAwAehgBAH8YAACCGAAAhhgDAIsYKgC3GBUAzhgKANwYqgCLGQAAjxkAAJEZBACXGQAAmxkAAKEZAACjGQAArBkAAK8ZAAC3GQAAuhkCAL8ZAwDEGQEAyBkBAMsZAADNGQMA1RkAANgZAQDdGWEAQBoAAEMaAABiGgEAdBoAAHwaAACHGgAAnxoKAKsaAQCvGgIAsxoGAL8aAwDJGgAA0RoAANgaAADqGgEA7RoCAPEaAgD1GgAA+xoAAP4aBAAEGwAAChsBAA4bAgAUGwUAGxsCAB8bAQAjGwEAJhsAACgbAAAqGwAALxsAADgbAAA7GwEAPhsCAEMbAABFGwIASxsBAE8bBABYGwEAXBsAAGcbAABpGz8ArBsCALMbAAC1GwAAtxsEAL4bAADAGwAAwxsAAMobAgDPG30ATxwAAFQcAgBYHAEA1RwAANccBgDhHAEA5BwFAOwcAQDvHAIA8xwBAPYcAAD4HAAA+xwBAAgdAAAKHQAADR0BABAdAwAWHQIAJx0BACodAQAzHQAANR0BADgdAAA8HQIAQh0BAEUdAABIHQAATR0CAFIdAQBWHQIAWh0DAGAdDgB0HQAAeh0BAIEdAACEHQUAjR0AAJUdAgChHQAAqx0AALIdAQC2HQAAuh0BAL0dAADAHQAAxR0AAMcdAADJHQAAzh0AANIdAADUHQIA2x0GAOgdCAD2HQAA+B0AAPwdAAACHgAABB4EAA0eAQAQHgEAEx4AABYeBwAgHgMAJR4AACgeAQA4HgAAOx4BAD4eAQBIHgYAVB4CAFweAQBjHgIAZx4AAHAeAAByHgMAdx4FAH8eBQCKHgMAjx4AAJMeAgCZHgAAnB4AAKgeAACrHgEArh4BALEeAwC3HgUAvh4EAMkeAADLHgAAzx4AANIeAADUHgEA2R4AAN0eAADfHgAA4R4BAAQfAAAJHwAAEx8DABgfBQAfHwAAIR8AACofAQAvHwIAMx8DADofAAA8HwEAPx8BAEIfAQBFHwAASh8DAFEfAABcHwAAXh8AAGAfAABnHwQAcR8BAHYfAAB4HwAAeh8AAH0fAAB/HwAAhR8DAIofBwCTHwAAlR8AAJkfAACfHwAAoh8AAKgfAACvHwoAvB8CAMEfAgDMHwAA2x8AAN0fAADgHwIA5B8DAOofAQDtHwAA8B8AAPQfWwBSIAsAXyAAAGUgEAB3IAAAeSABAHwgiAAHIQAACyF5AIghAACKIQMAlSEAAJghAACcIXgAFiIAACIiAAApIgUAMCIAADMiAAA1IgAANyIAADsiAABBIgAAQyIAAEUieQDGIgMAzyIAANIiAADVIgAA1yIBANwiAADeIgAA5iIAAO8iAAD1IgAAACMAAAYjAAATIwEAJSMAACgjAQAsIwAALyMAADYjAwA7IwQAUCMAAFgjAABaIwAAYyMAAGgjAAB3IwAAeSMBAIAjAACCIwAAhiMUAJ8jAQCiI0cA7CMAAO4jAADwIwEA8yMBAPYjBgD+IzcAOCQFAD8kCQBKJAIAUCQAAFIkAwBXJAEAWiQFAGQkEgB4JAEAeyQCAIAkAACDJAMAiCQGAJ8kAACtJAIAwyQAAMskCADYJAAA2iQLAOckAgDrJBEA/iQBAAElDwASJRcALCUAAC4lAgAzJQwAQSUHAEolBABRJQIAVSUFAF0lAABfJQwAcCUBAHQlAQB6JQEAfSUBAIAlAwCFJQAAhyUAAIolAQCOJQAAkCUBAJMlAACVJQIAmSUMAKclAACpJQEArCUAAK4lAQCxJQAAsyUBALYlAAC4JQEAuyUAAL8lAADDJQEAxyUAAMolAADMJQAAziUDANMlAADWJQgA4CUBAOMlBQDrJQEA7yUAAPElAgD2JQAA+yUDAAAmAQADJgAABSYBAAgmAAAKJgEADSYAAA8mAQASJgAAFCYBABcmAAAZJgAAHCYSADAmBgA5JgAAPCYQAE4mCABYJgEAWyYIAGUmAABnJgEAbSYAAG8mBAB4JgEAgSYCAIcmAACJJgAAkyYAAKImAwCqJgoAtiYAALgmCADDJuQAqScBAKwnGADGJwEAyScOANonEQDtJwAA7ycVAAYoAQAJKAAACygLABgoAgAfKAAAMigDADkoBgBNKAUAVSgAAF4oAABgKAEAZygGAG8oAAB1KAoAiSgEAI8oAACRKAIAlSgEAJwoBACiKAEApigAAKwoBAC1KAIAuSgHAMQoAgDIKAAAzCgCANAoAQDWKA4A6CgBAOwoAQDvKAAA8SgAAPQoAgAAKQMABykEAA4pAQARKS4AQykAAEUpAQBLKQEATykBAFMpAABZKQEAXCkCAGIpAwBtKQIAcSkAAHMpAAB2KQAAeCkAAHopAAB8KQEAgikAAIcpAwCMKQAAjykXAKgpGQDEKQEAxykBAMspAADNKQAA0CkBANUpAgDaKQEA3SkAAOApAgDmKQEA6SkAAOspAADtKQAA8SkAAPQpAwD9KQAABSoAAAcqAQAKKhAAHCoEACcqAAAqKgIALioAADEqCgA9KgAAPyoAAEEqBABHKhYAYCoBAGQqDgB0KgEAdyoEAA=="}],\
["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNCCNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCPTTTTTTPTTTFKFFGFPTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNMNNNNNNNNNNNNNNNNNNNCNNNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPPPNMMMMMMNMCNNNMMNNNNNNMMNMCMMCNNCMMCMMMMNNNNNMMNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHKFFNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPFPFPPPPIFPPPFPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIKKKKRGFPIKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNHHNNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHQQQQHHNNNNNNNNNOOOOJJJEEEEEEEEGPPNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFFEEPFFFKGKFEEEEPPPEPIPPPKKKPFPPIIGKEEPIIIPPEPEEEKEEPPEPKKPEPGPPPIFEKPPPKGEEIEKGPPGFFFPPPPEEPKPFPEPEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOOONNONMMNNNNNNNNNNNNCNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHKFINNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPEPPKGGPPFFIKNNNNNNNNCNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNMNNNNNNNMMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNKKKKKKFFFNHHHHHHHNHHEHNNNNNNMNNHHNNHHNNNNNNNNNNNNNHHNNNNCNNNNNNNMNNNNNHHHNNNNNNNNNMNNMMHMNNNNENMHHHMHNNNNNHNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_data_type_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","add","add","add","add","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_slice","apply_values","apply_values_generic","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","collect","collect_cheap_metadata","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","drop_nulls","dtype","effective_metadata","equal","equal","equal_missing","equal_missing","extend","fill_null_with_values","filter","first_non_null","float","fmt","fmt","for_each","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","gt","gt_eq","gt_eq","has_validity","head","init","init","init_rand","inner_dtype","into","into","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt_eq","lt_eq","max","max","max_reduce","mean","mean","median","median_reduce","merge_metadata","metadata","metadata","metadata_arc","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_compute_len","new_with_dims","none_to_nan","not_equal","not_equal","not_equal_missing","not_equal_missing","null_count","object","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","rem","rem","rem","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","slice","sort","sort_with","split_at","split_at","std","std_reduce","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","tail","take","take","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","vzip","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_null","append_null","append_null","append_null","append_null","append_option","append_option","append_value","append_value","append_value","append_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finish","finish","finish","finish","finish","finish","finish","finish","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","init","init","init","init","into","into","into","into","list","new","new","new","new","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","from","from","from","from","from","from","from","get_list_builder","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_values_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","new","next","next","next_back","next_back","par","size_hint","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","list","string","Conflict","DEFAULT","DISTINCT_COUNT","ENABLED","EXTENSIVE_USE","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","Keep","LOG","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","New","SORTED","SORTED_ASC","SORTED_DSC","__clone_box","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","collect_cheap_metadata","complement","complement","contains","contains","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","disabled","distinct_count","distinct_count_opt","drop","drop","drop","drop","drop","empty","empty","enabled","eq","eq","extend","extend","extensive_use","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_max_value","get_min_value","get_sorted_flag","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_sorted","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","log","logfile","max_value","max_value_opt","merge","min_value","min_value_opt","not","not","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sorted","sorted_opt","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","vzip","vzip","vzip","vzip","vzip","with_cheap_metadata","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","descending","descending","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","into","into","maintain_order","maintain_order","multithreaded","multithreaded","new","new","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_nulls_last_multi","with_order_descending","with_order_descending","with_order_descending_multi","with_order_reversed","with_order_reversed","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_to_buffer","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any_value","as_binary","as_borrowed","as_ref","as_ref","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","bitand","bitor","bitor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","call_categorical_merge_operation","cast","cast","cast","cast_leaf","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode_and_offsets","field","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_amortized","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_owned","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","implode","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_enum","is_float","is_float","is_integer","is_integer","is_known","is_list","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter_offsets","last","leaf_dtype","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max","max_reduce","max_reduce","max_reduce","mean","median","median","median_reduce","median_reduce","merge_dtypes","min","min_reduce","min_reduce","min_reduce","mmap_slice","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","n_unique","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_logical","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","offsets","par_iter","par_iter","par_iter_indexed","par_iter_indexed","partial_cmp","partial_cmp","precision","precision","quantile","quantile","quantile_reduce","quantile_reduce","rand_bernoulli","remainder","remainder","remainder","remainder","remainder","remainder","remainder","reverse","reverse","reverse","reverse","reverse","reverse","revmap","scale","scale","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","set","set","set","set_fast_explode","set_inner_dtype","set_name","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","std_reduce","std_reduce","strict_cast","string_cache","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","sum","sum_reduce","sum_reduce","take_unchecked","take_unchecked","take_unchecked","take_unchecked","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","try_zip_and_apply_amortized","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unique","unique","unique","update","value","value","value_unchecked","value_within_range","values_iter","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_nullable_idx","with_validity_typed","zero","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","append","append_null","append_value","arg_sort","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cast_with_options","clone","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drain_iter_and_finish","drop","drop","drop","drop","dtype","equal","equal","equal","equal_missing","equal_missing","equal_missing","finish","finish","finish","from","from","from","from","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","gt","gt","gt_eq","gt_eq","gt_eq","init","init","init","init","into","into","into","into","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","new","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","uses_lexical_ordering","value_counts","vzip","vzip","vzip","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","build_local","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","find","fmt","fmt","from","from","get","get_categories","get_optional","init","init","into","into","is_global","is_local","len","same_src","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow_mut","borrow_mut","constants","deref","deref","deref","deref_mut","deref_mut","drop","drop","feature_gated","fmt","fmt","fmt","from","from","from","get_warning_function","init","init","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","ahash","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","add","add","add","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks","iter_chunks_physical","len","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","mul","mul","mul","n_chunks","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","rem","rem","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice","slice_par","sort","sort_in_place","split_at","split_at","split_chunks","split_chunks_by_n","sub","sub","sub","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Float32","Float32","Float64","Float64","Int32","Int32","Int64","Int64","Null","Null","Row","String","String","UInt32","UInt32","UInt64","UInt64","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","finish","fmt","from","from","hash","hash","idx","init","init","into","into","populate_multiple_key_hashmap","try_from","try_from","try_into","try_into","type_id","type_id","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vzip","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","Earliest","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","MeltArgs","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","None","Null","Null","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PolarsArray","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","Raise","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","Some","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","VarAggSeries","VecHash","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocator","as_fd","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","context","context_trace","convert_inner_type","data_type","data_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default_arrays","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","df","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fields","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_str","from_vec","ge","get_mut","get_mut_unchecked","get_names","get_unchecked","gt","has_validity","hash","hash","hash","hash","hash","idx","increment_strong_count","increment_strong_count_in","index_of","indexes_to_usizes","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_mut","interpol","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_raw","into_raw_with_allocator","into_series","is_empty","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","le","len","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","max_reduce","median_reduce","metadata","metadata","min_periods","min_reduce","min_reduce","name","ne","negative_to_usize","new","new","new","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","null","null","partial_cmp","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","prod_reduce","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","sum_reduce","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_or_clone","utf8","var_reduce","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","weights","window_size","with_metadata","with_metadata","write","write_vectored","error","error","msg","msg","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","set_global_random_seed","IndexOfSchema","Schema","SchemaRef","__clone_box","borrow","borrow_mut","clone","clone_into","contains","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","get","get_at_index","get_at_index_mut","get_field","get_full","get_names","get_names","hash","index_of","index_of","init","insert_at_index","into","into_iter","is_empty","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","len","merge","merge_from_ref","new","new_inserting_at_index","remove","rename","reserve","set_dtype","set_dtype_at_index","shift_remove","shift_remove_index","to_arrow","to_owned","to_supertype","try_from","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","type_id","vzip","with_capacity","with_column","Ascending","Ascending","ChunkCompare","Descending","Descending","IntoSeries","IsSorted","IsSorted","Not","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","amortized_iter","append","arg_sort","arg_sort","arg_unique","arg_unique","arithmetic","array_ref","as_any","as_any_mut","as_any_mut","as_list","as_mut","as_ref","as_ref","as_single_ptr","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitand","bitor","bitor","bitxor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","dot","drop","drop","drop","drop_nulls","drop_nulls","dtype","dtype","eq","eq","equal","equal","equal","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","field","fill_null","filter","fmt","fmt","fmt","fmt_list","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata_max_value","get_metadata_max_value","get_metadata_min_value","get_metadata_min_value","get_object","get_object","get_object_chunked_unchecked","get_object_chunked_unchecked","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_series","is_sorted_flag","iter","iter_chunks","len","len","limit","limit","list","lt","lt","lt","lt_eq","lt_eq","lt_eq","max","max_reduce","max_reduce","mean","mean","mean_reduce","median","median","median_reduce","median_reduce","min","min_reduce","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_chunks","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape_list","reverse","reverse","rolling_map","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","slice","sort","sort_with","sort_with","split_at","split_at","std","std","std_reduce","std_reduce","str","str_value","strict_cast","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","to_arrow","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_add_owned","try_div","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_mul","try_mul_owned","try_rem","try_set_metadata","try_sub","try_sub_owned","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique","unique_stable","unpack","var","var","var_reduce","var_reduce","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","add_to","add_to","checked","div","divide","divide","divide","mul","multiply","multiply","multiply","rem","remainder","remainder","remainder","sub","subtract","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div","checked_div_num","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","Arg","Container","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","TrustMyLength","Wrap","__clone_box","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all_equal","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clone","clone_into","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","concat_df","concat_df_unchecked","contains","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","dtypes_to_schema","dtypes_to_supertype","eq","equivalent","equivalent","equivalent","flatten","fold_options","from","from","from","from_fallible_iter","from_iter","from_iter","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_par_iter","from_trusted_len_iter_rev","from_trusted_len_iter_rev","get_supertype","get_time_units","handle_casting_failures","hash","init","init","init","into","into","into","into_inner","into_iter","into_vec","into_vec","into_vec","iter_chunks","len","materialize_dyn_int","n_chunks","new","new","next","next_back","rayon","size_hint","slice","slice_slice","split","split_and_flatten","split_at","split_df_as_ref","to_owned","trust_my_length","try_from","try_from","try_from","try_get_supertype","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[39,"polars_core::chunked_array"],[437,"polars_core::chunked_array::arithmetic"],[465,"polars_core::chunked_array::builder"],[569,"polars_core::chunked_array::builder::list"],[723,"polars_core::chunked_array::cast"],[751,"polars_core::chunked_array::collect"],[765,"polars_core::chunked_array::float"],[767,"polars_core::chunked_array::from_iterator_par"],[771,"polars_core::chunked_array::iterator"],[808,"polars_core::chunked_array::iterator::par"],[810,"polars_core::chunked_array::metadata"],[1041,"polars_core::chunked_array::object"],[1116,"polars_core::chunked_array::object::builder"],[1139,"polars_core::chunked_array::object::registry"],[1167,"polars_core::chunked_array::ops"],[1291,"polars_core::chunked_array::ops::arity"],[1326,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1328,"polars_core::chunked_array::ops::gather"],[1331,"polars_core::chunked_array::ops::search_sorted"],[1360,"polars_core::chunked_array::ops::sort"],[1367,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1368,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1375,"polars_core::chunked_array::ops::sort::options"],[1450,"polars_core::chunked_array::temporal"],[1451,"polars_core::chunked_array::temporal::conversion"],[1454,"polars_core::config"],[1458,"polars_core::datatypes"],[2867,"polars_core::datatypes::categorical"],[3007,"polars_core::datatypes::categorical::revmap"],[3059,"polars_core::datatypes::categorical::string_cache"],[3078,"polars_core::datatypes::revmap"],[3084,"polars_core::datatypes::string_cache"],[3088,"polars_core::error"],[3153,"polars_core::error::PolarsError"],[3157,"polars_core::error::constants"],[3160,"polars_core::export"],[3168,"polars_core::fmt"],[3198,"polars_core::frame"],[3467,"polars_core::frame::explode"],[3496,"polars_core::frame::group_by"],[3731,"polars_core::frame::group_by::GroupByMethod"],[3732,"polars_core::frame::group_by::GroupsProxy"],[3734,"polars_core::frame::group_by::aggregations"],[3747,"polars_core::frame::group_by::expr"],[3750,"polars_core::frame::row"],[3844,"polars_core::functions"],[3846,"polars_core::hashing"],[3894,"polars_core::prelude"],[4458,"polars_core::prelude::PolarsError"],[4462,"polars_core::prelude::default_arrays"],[4468,"polars_core::prelude::list"],[4491,"polars_core::prelude::null"],[4521,"polars_core::prelude::revmap"],[4527,"polars_core::prelude::slice"],[4530,"polars_core::prelude::string_cache"],[4534,"polars_core::prelude::utf8"],[4538,"polars_core::random"],[4539,"polars_core::schema"],[4613,"polars_core::series"],[5013,"polars_core::series::amortized_iter"],[5036,"polars_core::series::arithmetic"],[5061,"polars_core::series::arithmetic::checked"],[5069,"polars_core::series::ops"],[5095,"polars_core::utils"],[5212,"polars_core::utils::flatten"],[5217,"dyn_clone::sealed"],[5218,"num_traits"],[5219,"num_traits::cast"],[5220,"polars_error"],[5221,"polars_core::series::arithmetic::borrowed"],[5222,"polars_core::frame::group_by::proxy"],[5223,"core::option"],[5224,"core::iter::traits::iterator"],[5225,"core::ops::function"],[5226,"core::marker"],[5227,"polars_core::datatypes::dtype"],[5228,"alloc::string"],[5229,"polars_core::datatypes::aliases"],[5230,"polars_core::series::arithmetic::borrowed::checked"],[5231,"polars_arrow::array"],[5232,"alloc::vec"],[5233,"core::iter::traits::double_ended"],[5234,"core::fmt"],[5235,"core::iter::traits::collect"],[5236,"core::result"],[5237,"polars_utils::iter::fallible"],[5238,"polars_arrow::bitmap::immutable"],[5239,"rayon::iter"],[5240,"polars_arrow::trusted_len"],[5241,"polars_core::datatypes::any_value"],[5242,"polars_utils::index"],[5243,"polars_core::chunked_array::logical::decimal"],[5244,"core::iter::traits::exact_size"],[5245,"polars_core::series::series_trait"],[5246,"core::slice::iter"],[5247,"core::iter::adapters::map"],[5248,"alloc::sync"],[5249,"core::convert"],[5250,"core::ops::range"],[5251,"polars_core::datatypes::field"],[5252,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5253,"polars_core::chunked_array::ops::rolling_window"],[5254,"ahash::random_state"],[5255,"polars_utils::hashing"],[5256,"ndarray::aliases"],[5257,"either"],[5258,"core::any"],[5259,"polars_core::chunked_array::arithmetic::numeric"],[5260,"polars_core::chunked_array::builder::string"],[5261,"polars_arrow::array::binview"],[5262,"polars_core::chunked_array::builder::boolean"],[5263,"polars_core::chunked_array::builder::null"],[5264,"polars_core::chunked_array::builder::primitive"],[5265,"core::clone"],[5266,"polars_core::chunked_array::builder::list::anonymous"],[5267,"polars_core::chunked_array::builder::list::boolean"],[5268,"polars_core::chunked_array::builder::list::primitive"],[5269,"polars_core::chunked_array::builder::list::binary"],[5270,"polars_core::chunked_array::builder::list::null"],[5271,"alloc::boxed"],[5272,"core::hash"],[5273,"polars_arrow::array::boolean"],[5274,"polars_core::chunked_array::metadata::env"],[5275,"bitflags::iter"],[5276,"std::fs"],[5277,"std::sync::mutex"],[5278,"polars_arrow::datatypes"],[5279,"polars_arrow::bitmap::utils::iterator"],[5280,"polars_arrow::bitmap::utils::zip_validity"],[5281,"polars_arrow::offset"],[5282,"polars_arrow::array::static_array"],[5283,"core::error"],[5284,"polars_arrow::array::primitive"],[5285,"polars_arrow::legacy::array::slice"],[5286,"polars_row::row"],[5287,"chrono::naive::datetime"],[5288,"alloc::borrow"],[5289,"polars_arrow::array::static_array_collect"],[5290,"bytemuck::zeroable"],[5291,"polars_core::chunked_array::logical::categorical"],[5292,"polars_core::chunked_array::logical::categorical::merge"],[5293,"polars_core::chunked_array::logical"],[5294,"polars_core::datatypes::time_unit"],[5295,"polars_arrow::datatypes::physical_type"],[5296,"polars_arrow::types"],[5297,"core::borrow"],[5298,"polars_arrow::pushable"],[5299,"core::cmp"],[5300,"polars_core::chunked_array::logical::categorical::builder"],[5301,"polars_core::chunked_array::logical::categorical::revmap"],[5302,"polars_core::chunked_array::logical::categorical::string_cache"],[5303,"polars_error::warning"],[5304,"polars_core::series::from"],[5305,"polars_utils::aliases"],[5306,"polars_arrow::datatypes::schema"],[5307,"polars_core::chunked_array::ndarray"],[5308,"polars_arrow::array::struct_"],[5309,"polars_arrow::record_batch"],[5310,"polars_utils::idx_vec"],[5311,"rayon::iter::plumbing"],[5312,"polars_core::frame::group_by::into_groups"],[5313,"core::iter::adapters::copied"],[5314,"core::iter::adapters::zip"],[5315,"polars_arrow::legacy::kernels::rolling"],[5316,"polars_utils::float"],[5317,"polars_arrow::types::native"],[5318,"polars_core::frame::group_by::aggregations::agg_list"],[5319,"polars_core::frame::row::av_buffer"],[5320,"polars_arrow::array::binary"],[5321,"polars_core::hashing::identity"],[5322,"hashbrown::map"],[5323,"polars_core::hashing::vector_hasher"],[5324,"core::alloc"],[5325,"std::os::fd::owned"],[5326,"std::os::fd::raw"],[5327,"core::mem::maybe_uninit"],[5328,"polars_arrow::legacy::kernels::time"],[5329,"core::default"],[5330,"core::ffi::c_str"],[5331,"polars_arrow::scalar"],[5332,"std::io::error"],[5333,"regex::error"],[5334,"simdutf8::basic"],[5335,"alloc::collections"],[5336,"std::path"],[5337,"alloc::ffi::c_str"],[5338,"std::ffi::os_str"],[5339,"polars_arrow::legacy::array::default_arrays"],[5340,"polars_arrow::buffer::immutable"],[5341,"polars_arrow::array::list"],[5342,"polars_core::named_from"],[5343,"polars_arrow::legacy::array"],[5344,"polars_core::chunked_array::ops::aggregate"],[5345,"polars_core::chunked_array::ops::aggregate::quantile"],[5346,"polars_arrow::legacy::index"],[5347,"core::pin"],[5348,"core::io::borrowed_buf"],[5349,"std::io"],[5350,"polars_core::chunked_array::ops::aggregate::var"],[5351,"alloc::collections::btree::map"],[5352,"polars_arrow::legacy::array::list"],[5353,"polars_arrow::legacy::array::null"],[5354,"polars_arrow::bitmap::mutable"],[5355,"polars_arrow::array::utf8"],[5356,"polars_core::series::iterator"],[5357,"alloc::rc"],[5358,"polars_arrow::legacy::utils"],[5359,"polars_arrow::legacy::trusted_len::rev"],[5360,"smartstring::config"],[5361,"smartstring"],[5362,"polars_error::constants"],[5363,"polars_arrow::legacy::prelude"],[5364,"polars_arrow::legacy::array::utf8"],[5365,"polars_core::utils::any_value"],[5366,"polars_core::utils::schema"],[5367,"polars_core::utils::supertype"],[5368,"polars_core::utils::series"]],"if":"`````````````{{}b}``0``````````````{{}d}``````````````{{{f{c}}h}b{}}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}{f{Aj}}}Adn}{{{f{{l{Al}}}}}d}{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{{l{j}}}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Bh{l{c}}}}{f{{l{c}}}}}b{{Bn{}{{Bj{Bl}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{An}{{C`{An}}}}Cd}}{{{f{{l{j}}}}c}{{l{j}}}{{Ch{Cf}{{C`{Ad}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{{l{Cj}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{Cl}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{}{{Ch{An}{{C`{{An{e}}}}}}}Bn}{{{l{c}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}{f{Cb}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}}{{l{e}}}nBn}{{{f{Bh{l{c}}}}e}bn{{Cb{}{{C`{}}}}Cd}}{{{f{{l{Cn}}}}c}{{l{Cn}}}{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{{l{D`}}}}c}{{l{D`}}}{{Ch{{f{{Dd{Db}}}}}{{C`{{f{{Dd{Db}}}}}}}}}}{{{f{{l{c}}}}Dfg}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{Cn}}}}c}{{l{Cn}}}{{Ch{{f{Bf}}{f{BhDh}}}}}}{{{f{{l{j}}}}{f{Cb}}}{{Af{Dj}}}}{{{f{{l{c}}}}g{f{Bh{Dd{e}}}}}bn{}{{Cb{An{f{e}}}{{C`{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}g}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{c}}}}Dl}Dnn}{{{f{{l{c}}}}{f{{Dd{Ad}}}}{f{E`}}}{{Af{Dn}}}n}{{{f{{l{c}}}}}{{Af{Dn}}}n}`{{{f{{l{Cn}}}}}Eb}{{{f{{l{c}}}}}{{f{{l{c}}}}}Bn}{{{f{{l{c}}}}}{{f{Df}}}Bn}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}BnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEd{}}00{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0``{{{f{{l{c}}}}e}{{l{g}}}n{{Cb{}{{C`{}}}}Cd}n}{{{f{{l{c}}}}{f{Df}}}{{Af{Ad}}}n}{{{f{{l{c}}}}{f{Df}}Ef}{{Af{Ad}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Eh}{{{f{{l{c}}}}e}{{Af{Ad}}}EhAb}{{{f{{l{c}}}}}EjBn}{{{f{{l{c}}}}}{{`{{Bd{}{{B`{El}}}}}}}Bn}{{{f{{l{c}}}}}{{f{{F`{En}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{F`{En}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Bn}0{{{f{c}}{f{Bhe}}}b{}{}}`{{{f{Bh{l{c}}}}}b{Bnn}}`{{{f{{l{c}}}}}{{Af{{f{Dd}}}}}n}{{{f{Bh{l{c}}}}{f{{l{c}}}}Fb}bBn}{{{f{Bh{l{c}}}}{f{{l{e}}}}Fb}bBnBn}{{{f{{l{c}}}}}{{`{{Fd{}{{B`{{f{Dd}}}}}}}}}n}{{}{{l{c}}}Bn}{El{{f{c}}}{}}0{El{{f{Bhc}}}{}}0{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bh{l{c}}}}}bBn}{Elb}0{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Df}}}Bn}{{{f{{l{c}}}}}{{f{{Ff{c}}}}}Bn}{{{f{{l{c}}}}{f{{l{c}}}}}Fhn}{{{f{{l{c}}}}e}FhnAb}10{{{f{Bh{l{c}}}}{f{{l{c}}}}}bn}{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Fh}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}}{{An{El}}}Bn}`{{{f{{l{c}}}}{f{BhFj}}}Fln}{{{f{{l{Al}}}}{f{BhFj}}}Fl}{{{f{{l{c}}}}e}bBn{{Ch{An}}}}{{{f{{l{j}}}}c}b{{Ch{{An{Cf}}}}}}{c{{l{e}}}Fn{{Bn{}{{G`{c}}}}}}{cc{}}0{{{f{Bf}}c}{{l{e}}}Gb{{Bn{}{{G`{}}}}Bn}}{{{f{{l{c}}}}e}{{l{c}}}{{Bn{}{{G`{}}}}Bn}Gb}{{{f{Bf}}{F`{En}}}{{l{c}}}Bn}{{{f{Bf}}{F`{En}}Df}{{l{c}}}Bn}{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{c{{l{e}}}{{Gb{}{{B`{{Gj{F`{An{Gh}}}}}}}}}n}{c{{l{Al}}}{{Gb{}{{B`{{An{d}}}}}}}}{c{{l{e}}}{{Gb{}{{B`{An}}}}}n}{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{An}}}}}n}12{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{}}}}}n}`{c{{l{e}}}{{Gl{}{{B`{An}}}}}n}{{{f{Bf}}{f{Dd}}}{{l{c}}}n}{{{f{Bf}}{f{{Dd{An}}}}}{{l{c}}}n}{c{{l{e}}}{{Gn{}{{B`{An}}}}}n}{{{f{Bf}}F`}{{l{c}}}n}{{{f{Bf}}F`{An{Gh}}}{{l{c}}}n}{{{f{Bf}}El}{{l{c}}}n}0{{{f{{l{c}}}}El}{{l{c}}}Bn}{{{f{Bf}}El{f{Df}}}Dj}{{{f{{l{c}}}}El}AnBn}{{{f{{l{c}}}}El}{{Af{H`}}}n}{{{f{{l{c}}}}El}H`n}{{{f{{l{j}}}}El}{{An{Ad}}}}{{{f{{l{c}}}}}{{An{Hb}}}Bn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}HdBn}{{{f{{l{j}}}}}Ad}{{{f{{l{c}}}}}{{An{f}}}Bn}0{{{f{{l{{Hf{c}}}}}}El}{{An{{f{Hh}}}}}Hj}09{{{f{{l{c}}}}dd}{{Af{Aj}}}n}{{{f{{l{c}}}}EldEl}AjEd}{{{f{{l{c}}}}{f{{l{c}}}}}Fhn}{{{f{{l{c}}}}e}FhnAb}018{{{f{{l{c}}}}{An{El}}}{{l{c}}}Bn}{{}El}0{{ElHl{An{Hn}}}{{l{c}}}n}{{{f{{l{j}}}}}{{f{Df}}}}{ce{}{}}0{{{l{I`}}{An{El}}El}{{Af{Ib}}}}{{{l{I`}}{An{El}}El}Ib}{{{f{{l{c}}}}}en{}}{{{f{{l{c}}}}}{{`{IdIf{Ih{}{{B`{}}}}FdGn}}}n}{{{l{c}}}AdBn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}FhIj}000{{{f{{l{c}}}}}FhBn}02{{{f{{l{c}}}}}IlBn}{{{f{{l{c}}}}}{{`{{In{}{{B`{An}}}}}}}Bn}{{{f{{l{c}}}}}{{`{{Bd{}{{B`{{l{c}}}}}}}}}Bn}{{{f{{l{j}}}}}{{`{{Bd{}{{B`{J`}}}}}}}}{{{f{{l{c}}}}}{{Jf{{Jb{En}}{Jd{{f{En}}}{{C`{{An{{f{Gh}}}}}}}}}}}Bn}`{{{f{{l{c}}}}}AnBn}{{{f{{l{c}}}}}{{An{El}}}Bn}{{{f{{l{c}}}}}{{Jh{c}}}Bn}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}{{{f{{l{c}}}}}ElBn}0{{{f{{l{c}}}}e}{{l{c}}}n{A`Jj}}00{{{f{{l{c}}}}El}{{l{c}}}Bn}{{{f{{l{c}}}}{f{{l{c}}}}}Fhn}{{{f{{l{c}}}}e}FhnAb}10{{{f{{l{c}}}}}Ann}{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{c}}}}}Jln}{{{f{{l{c}}}}}{{An{Jn}}}n}{{{f{{l{Al}}}}}{{An{Jn}}}}{{{f{{l{c}}}}}{{An{Jn}}}Ed}{{{f{{l{c}}}}}JlEd}{{{f{Bh{l{c}}}}{Ff{c}}}bBn}`{{{f{{l{c}}}}}{{An{{f{{Ff{c}}}}}}}Bn}{{{f{{l{c}}}}}{{An{{f{{K`{{Ff{c}}}}}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{K`{{Ff{c}}}}}}}Bn}{{{f{{l{c}}}}}{{K`{{Ff{c}}}}}Bn}:;{{{f{{l{c}}}}}{{An{Gj}}}n}:{{{f{Bf}}{f{{Dd{Db}}}}ElEl}{{l{Al}}}}{{{f{Bf}}{f{Dd}}}{{l{c}}}n}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}ElBn}{{{f{{l{c}}}}}{{Af{El}}}n}{{{f{{l{c}}}}}{{f{Bf}}}Bn}{{{f{Bf}}c}{{l{Kb}}}{{Kf{{Dd{{An{Kd}}}}}}}}{{{f{Bf}}c}{{l{D`}}}{{Kf{{Dd{{F`{Db}}}}}}}}{{{f{Bf}}c}{{l{Kb}}}{{Kf{{Dd{Kd}}}}}}{{{f{Bf}}c}{{l{Cl}}}{{Kf{{Dd{Jn}}}}}}{{{f{Bf}}{Kh{Kd}}}{{l{Kb}}}}{{{f{Bf}}c}{{l{Kj}}}{{Kf{{Dd{{An{J`}}}}}}}}{{{f{Bf}}{Kh{J`}}}{{l{Kj}}}}{{{f{Bf}}{Kh{Hn}}}{{l{Kl}}}}{{{f{Bf}}c}{{l{Kn}}}{{Kf{{Dd{L`}}}}}}{{{f{Bf}}c}{{l{Kn}}}{{Kf{{Dd{{An{L`}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Kf{{Dd{d}}}}}}{{{f{Bf}}c}{{l{Cl}}}{{Kf{{Dd{{An{Jn}}}}}}}}{{{f{Bf}}c}{{l{D`}}}{{Kf{{Dd{{An{{F`{Db}}}}}}}}}}{{{f{Bf}}c}{{l{Cj}}}{{Kf{{Dd{Hl}}}}}}{{{f{Bf}}c}{{l{Kl}}}{{Kf{{Dd{{An{Hn}}}}}}}}{{{f{Bf}}c}{{l{Cn}}}{{Kf{{Dd{{An{Dh}}}}}}}}{{{f{Bf}}c}{{l{Cn}}}{{Kf{{Dd{Dh}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Kf{{Dd{{An{d}}}}}}}}{{{f{Bf}}{Kh{L`}}}{{l{Kn}}}}{{{f{Bf}}c}{{l{Kj}}}{{Kf{{Dd{J`}}}}}}{{{f{Bf}}c}{{l{Cj}}}{{Kf{{Dd{{An{Hl}}}}}}}}{{{f{Bf}}c}{{l{Kl}}}{{Kf{{Dd{Hn}}}}}}{{{f{Bf}}}{{l{{Hf{c}}}}}Hj}{{{f{{l{c}}}}ElEl}{{l{c}}}n}{{{f{Bf}}{F`{c}}}{{l{{Hf{c}}}}}Hj}{{{f{Bf}}{F`{c}}Gh}{{l{{Hf{c}}}}}Hj}{{{f{Bf}}F`}{{l{c}}}n}{{{K`{Lb}}{F`{En}}}{{l{c}}}Bn}{{{K`{Lb}}{F`{En}}HbHb}{{l{c}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Ij}{{{f{{l{c}}}}e}FhnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fhn}10{{{f{{l{c}}}}}ElBn}``{{{f{{l{Cn}}}}}{{`{{Ld{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{{l{j}}}}}{{`{{Ld{}{{B`{{An{Ad}}}}}}}}}}{{{f{Bh{l{j}}}}}{{`{{Lf{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{Cn}}}}}{{`{{Lf{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{{l{c}}}}}Jln}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}JnLh}{{Af{{An{Jn}}}}}Ed}{{{f{{l{c}}}}JnLh}{{Af{Jl}}}Ed}{{{f{Bf}}ElJn}{{Af{{l{Al}}}}}}{{{f{Bf}}ElJnJn}{{Af{{l{c}}}}}n}{{{f{Bf}}El}{{l{c}}}n}{{{f{Bf}}ElJnJn}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Lb}}}Bn}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bh{l{c}}}}{f{Bf}}}bBn}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}Lj}{{Af{Ad}}}n}{{{f{{l{c}}}}Ele}{{Af{{l{c}}}}}Ij{{Ch{{f{Bh{l{c}}}}}{{C`{An}}}}}}{{{f{{l{c}}}}Jndd{An{Hn}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}Eldd{An{Hn}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}eAn}{{Af{{l{c}}}}}n{{Gb{}{{B`{Hb}}}}}}{{{f{{l{c}}}}eg}{{Af{{l{c}}}}}n{{Gb{}{{B`{Hb}}}}}{{Cb{An}{{C`{An}}}}}}{{{f{{l{c}}}}{f{Fh}}An}{{Af{{l{c}}}}}n}{{{f{Bh{l{j}}}}}b}{{{f{Bh{l{c}}}}d}bBn}{{{f{Bh{l{j}}}}Df}b}{{{f{Bh{l{c}}}}Hb}bBn}{{{f{Bh{l{c}}}}Il}bBn}{{{f{{l{c}}}}J`}{{l{c}}}n}{{{f{{l{c}}}}J`An}{{l{c}}}n}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}J`El}{{l{c}}}Bn}0{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{c}}}}Dl}{{l{c}}}n}{{{f{{l{c}}}}J`}{{Gj{{l{c}}{l{c}}}}}Bn}0{{{f{{l{c}}}}Db}{{An{Jn}}}n}{{{f{{l{c}}}}Db}JlEd}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{Al}}}}}{{An{Hb}}}}{{{f{{l{c}}}}}Ann}{{{f{{l{c}}}}}Jln}{{{f{{l{c}}}}{An{El}}}{{l{c}}}Bn}{{{f{{l{c}}}}{f{e}}}{{Af{{l{c}}}}}Bn{{Kf{{Dd{Hb}}}}Ll}}{{{f{{l{c}}}}{f{Dn}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Bn{}{{Ln{Bl}}}}Bn}{{Kf{{Dd{Hb}}}}Ll}}{{{f{{l{c}}}}{f{Dn}}}{{l{c}}}{{Bn{}{{Ln{Bl}}}}Bn}}`{{{f{{l{c}}}}dM`}{{F`{{F`{Mb}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Ij}{{{f{{l{Cn}}}}El}{{Af{Ad}}}}{{{f{Bh{l{j}}}}Df}b}{{{f{{l{j}}}}}{{Af{Md}}}}{{{f{{l{c}}}}}{{Af{Mf}}}n}{{{f{c}}}e{}{}}{{{f{{l{D`}}}}}Mh}{{{f{{l{c}}}}}{{F`{An}}}n}{{{f{{l{c}}}}}{{Mj{F`{F`{An}}}}}n}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}{{{f{{l{j}}}}c}{{Af{{l{j}}}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{{l{j}}}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{{{f{{l{c}}}}i}{{Gd{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Gd{{An{e}}g}}}}}}Cd}Bn}{{{f{{l{c}}}}i}{{Gd{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Gd{eg}}}}}}}Bn}{c{{Gd{e}}}{}{}}0{{{f{Bf}}g}{{Gd{{l{i}}e}}}Fn{}{{Gb{}{{B`{{Gd{ce}}}}}}}{{Bn{}{{G`{c}}}}Bn}}11{{{f{{l{j}}}}{f{{l{c}}}}e}{{Af{{l{j}}}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Ml{}}0{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}El}{}Bn}{{{f{{l{c}}}}Db}{{An{Jn}}}n}{{{f{{l{c}}}}Db}JlEd}{ce{}{}}0{{{f{Bf}}c}{{l{e}}}Fn{{Bn{}{{G`{c}}}}Bn}}{{{f{{l{e}}}}c}{{l{e}}}Fn{{Bn{}{{G`{c}}}}Bn}}{{{f{{l{c}}}}{F`{En}}}{{l{c}}}Bn}{{{l{c}}{f{Bf}}}{{l{c}}}Bn}{{{f{{Dd{Mn}}}}e}c{}{{N`{{f{Dn}}}{{C`{c}}}}}}{{{f{{l{c}}}}Il}{{l{c}}}Bn}{{{l{c}}}en{}}{{{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}2310{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}543210542376542310542301{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Bn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{Fh}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}````{{{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}}e{}{}{}}{{{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}c}e{}{}{}}{{c{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}}e{}{}{}}{{{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}}g{}{}{}}{{{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}c}g{}{}{}}{{c{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}}g{}{}{}}{{{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}}e{}{}{}}65654654650654654````````{{{f{c}}h}b{}}000{{{f{BhNj}}}b}{{{f{Bh{Nl{c}}}}}b{NnLl}}{{{f{BhO`}}}b}{{{f{BhOb}}}b}{{{f{Bh{Od{c}}}}}bn}{{{f{Bh{Nl{c}}}}{An{e}}}b{NnLl}{{Kf{c}}}}{{{f{BhNj}}{An{c}}}b{}}{{{f{BhNj}}c}b{}}{{{f{Bh{Nl{c}}}}e}b{NnLl}{{Kf{c}}}}{{{f{BhO`}}d}b}5{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{{Nl{c}}}}}{{Nl{c}}}{NnLl}}{{{f{O`}}}O`}{{{f{Ob}}}Ob}{{{f{{Od{c}}}}}{{Od{c}}}{nOf}}{{{f{c}}{f{Bhe}}}b{}{}}000{El{{f{c}}}{}}000{El{{f{Bhc}}}{}}000{Elb}000{Nj{{l{c}}}Bn}{{{Nl{{Dd{Db}}}}}Eb}{{{Nl{Bf}}}Mh}{OhMh}{OjEb}{O`Fh}`{{{Od{c}}}{{l{c}}}n}{cc{}}000{{{f{Bf}}e}Ol{}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}Ol{}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}{f{{Dd{c}}}}}Ol{}}{{{f{Bf}}{f{{Dd{{An{c}}}}}}}Ol{}}{{}El}000{ce{}{}}000`{{{f{Bf}}El}{{Nl{c}}}{NnLl}}{{{f{Bf}}El}O`}{{{f{Bf}}El}Ob}{{{f{Bf}}El}{{Od{c}}}n}{{{f{BhNj}}}b}{{{f{BhO`}}}b}{{{f{BhOb}}}b}{{{f{Bh{Od{c}}}}}bn}{{{f{c}}}e{}{}}000{c{{Gd{e}}}{}{}}0000000{{{f{c}}}Ml{}}000;;;;````````{{{f{BhOn}}{f{Fn}}}b}{{{f{BhOn}}}b}{{{f{BhA@`}}}b}{{{f{BhA@b}}c}b{{Bd{}{{B`{{An{d}}}}}}Gn}}{{{f{Bh{A@d{c}}}}e}bn{{Bd{}{{B`{An}}}}Gn}}{{{f{Bh{A@d{c}}}}e}bn{{Bd{}{{B`{}}}}Gn}}{{{f{BhA@f}}}b}54{{{f{BhA@h}}}b}{{{f{BhA@j}}}b}{{{f{BhA@b}}}b}{{{f{BhA@l}}}b}{{{f{Bh{A@d{c}}}}}bn}{{{f{BhOn}}{An{{f{Fn}}}}}b}{{{f{BhOn}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{BhA@f}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{Bh{A@d{c}}}}{An{{f{Dd}}}}}bn}{{{f{BhA@f}}{f{Ad}}}{{Af{b}}}}{{{f{BhOn}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@`}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@h}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@j}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@b}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@l}}{f{Ad}}}{{Af{b}}}}{{{f{Bh{A@d{c}}}}{f{Ad}}}{{Af{b}}}n}{{{f{Bh{A@d{c}}}}{f{Dd}}}bn}{{{f{BhA@h}}c}b{{Bd{}{{B`{{An{{f{Bf}}}}}}}}Gn}}{{{f{BhA@j}}c}b{{Bd{}{{B`{{An{{f{{Dd{Db}}}}}}}}}}Gn}}{{{f{BhA@h}}c}b{{Bd{}{{B`{{f{Bf}}}}}}}}{{{f{BhA@j}}c}b{{Bd{}{{B`{{f{{Dd{Db}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000`{{}On}{{}A@`}{El{{f{c}}}{}}000000{El{{f{Bhc}}}{}}000000{Elb}000000{{{f{A@h}}}d}{{{f{A@j}}}d}{{{f{A@b}}}d}{{{f{{A@d{c}}}}}dn}{{{f{A@f}}}d}{{{f{A@h}}}{{f{Lb}}}}{{{f{A@j}}}{{f{Lb}}}}{{{f{A@b}}}{{f{Lb}}}}{{{f{{A@d{c}}}}}{{f{Lb}}}n}{{{f{A@f}}}{{f{Lb}}}}{{{f{BhOn}}}Dj}{{{f{BhA@`}}}Dj}{{{f{BhA@l}}}Dj}{{{f{BhA@f}}}Dj}{cc{}}000000{{{f{Df}}ElEl{f{Bf}}}{{Af{{A@n{A@f}}}}}}{{}El}000000{{{f{BhA@h}}}En}{{{f{BhA@j}}}En}{{{f{BhA@b}}}En}{{{f{Bh{A@d{c}}}}}Enn}{{{f{BhA@f}}}En}{ce{}{}}000000{{{f{Bf}}El{An{Df}}}On}{{{f{Bf}}El{An{Df}}}A@`}{{{f{Bf}}ElEl}A@h}{{{f{Bf}}ElEl}A@j}{{{f{Bf}}ElEl}A@b}{{{f{Bf}}El}A@l}{{{f{Bf}}ElElDf}{{A@d{c}}}n}{{{f{Bf}}ElElDfDf}{{A@d{c}}}n}{c{{Gd{e}}}{}{}}0000000000000{{{f{c}}}Ml{}}000000:::::::````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Ef}}}Ef}{{{f{c}}{f{Bhe}}}b{}{}}{{}Ef}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{Ef}}{f{Ef}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{Ef}}{f{BhFj}}}Fl}{cc{}}{{{f{Ef}}{f{Bhc}}}bAA`}{{}El}{ce{}{}}{{{f{Ef}}}d}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}4``{{AAb{f{Bf}}}{{l{c}}}Bn}{{AAd{f{{l{c}}}}}{{l{c}}}Bn}10{{AAd{f{Bf}}Df}{{l{c}}}Bn}0{{AAb{f{Bf}}}{{Gd{{l{c}}e}}}Bn{}}{{AAd{f{{l{c}}}}}{{Gd{{l{c}}e}}}Bn{}}10{{AAd{f{Bf}}Df}{{Gd{{l{c}}e}}}Bn{}}0`{AAfAAf}``{{AAh{f{Bf}}Df}e{}{{AAj{c}}}}{{e{f{Bf}}Df}AAj{}{{Gl{}{{B`{c}}}}}}```{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{El{{f{c}}}{}}0{El{{f{Bhc}}}{}}0{Elb}0{cc{}}0{{}El}0{ce{}{}}000{{{f{AAl}}}AAn}{{{f{BhAAn}}}{{An{c}}}{}}{{{f{Bh{AB`{c}}}}}{{An{e}}}Bd{}}1{{{f{Bh{AB`{c}}}}}{{An{e}}}Fd{}}`{{{f{AAn}}}{{Gj{El{An{El}}}}}}{{{f{{AB`{c}}}}}{{Gj{El{An{El}}}}}Bd}{c{{Gd{e}}}{}{}}000{{{f{c}}}Ml{}}088```````````````````````{{{f{c}}h}b{}}000{{}Fb}{{}Hd}{{FbFb}Fb}{{HdHd}Hd}{{{f{BhFb}}Fb}b}{{{f{BhHd}}Hd}b}3210{{{f{Fb}}}L`}0{{{f{Hd}}}Db}05432{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000{{{f{{Ff{c}}}}}{{Ff{c}}}Bn}{{{f{ABb}}}ABb}{{{f{Fb}}}Fb}{{{f{Hd}}}Hd}{{{f{c}}{f{Bhe}}}b{}{}}000{{{f{BhABd}}}b}{FbFb}{HdHd}{{{f{Fb}}Fb}d}{{{f{Hd}}Hd}d}{{}{{Ff{c}}}Bn}{{}Fb}{{}Hd}{El{{f{c}}}{}}0000{El{{f{Bhc}}}{}}0000{{FbFb}Fb}{{HdHd}Hd}{{}d}{{{Ff{c}}Hb}{{Ff{c}}}Bn}{{{Ff{c}}{An{Hb}}}{{Ff{c}}}Bn}{Elb}0000983{{{f{Fb}}{f{Fb}}}d}{{{f{Hd}}{f{Hd}}}d}{{{f{BhFb}}c}b{{Gb{}{{B`{Fb}}}}}}{{{f{BhHd}}c}b{{Gb{}{{B`{Hd}}}}}}7{{{Ff{c}}d}{{Ff{c}}}Bn}{{{Ff{c}}{An{d}}}{{Ff{c}}}Bn}{{{f{{Ff{c}}}}Fb}{{Ff{c}}}Bn}{{{f{{Ff{c}}}}Fb}{{Ff{e}}}BnBn}{{{Ff{c}}Hd}{{Ff{c}}}Bn}{{{Ff{c}}{An{Hd}}}{{Ff{c}}}Bn}{{{f{{Ff{c}}}}{f{BhFj}}}FlBn}{{{f{ABb}}{f{BhFj}}}Fl}{{{f{Fb}}{f{BhFj}}}Fl}0000{{{f{Hd}}{f{BhFj}}}Fl}0000{cc{}}0000{L`{{An{Fb}}}}{Db{{An{Hd}}}}{L`Fb}0{DbHd}010{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}0{cFb{{Gb{}{{B`{Fb}}}}}}{cHd{{Gb{}{{B`{Hd}}}}}}{{{f{Bf}}}{{An{Fb}}}}{{{f{Bf}}}{{An{Hd}}}}{{{f{{Ff{c}}}}}{{An{Hb}}}Bn}{{{f{{Ff{c}}}}}dBn}{{{f{Hd}}}d}{{{f{{Ff{c}}}}}HdBn}{{{f{{Ff{c}}}}}{{An{f}}}Bn}0{{{f{Hd}}}Il}{{}El}0000{{{f{BhFb}}Fb}b}{{{f{BhHd}}Hd}b}{{FbFb}Fb}{{HdHd}Hd}{{{f{Fb}}Fb}d}{{{f{Hd}}Hd}d}{ce{}{}}0000{Fbc{}}{Hdc{}}{{{f{Fb}}}d}>?0>{{{f{{Ff{c}}}}}IlBn}{{{f{{Ff{c}}}}}dBn}0{{{f{Fb}}}{{ABf{Fb}}}}{{{f{Hd}}}{{ABf{Hd}}}}{{{f{Fb}}}{{ABh{Fb}}}}{{{f{Hd}}}{{ABh{Hd}}}}{{}d}{{}{{f{{ABl{ABj}}}}}}{{{Ff{c}}}{{Ff{c}}}Bn}{{{Ff{c}}An}{{Ff{c}}}Bn}{{{f{{Ff{c}}}}{Ff{c}}}{{ABn{c}}}Bn}21{FbFb}{HdHd}{{{f{BhFb}}Fb}b}{{{f{BhHd}}Hd}b}{{{f{BhFb}}Fbd}b}{{{f{BhHd}}Hdd}b}{{{f{Bh{Ff{c}}}}{An{Hb}}}bBn}{{{f{Bh{Ff{c}}}}d}bBn}{{{f{BhHd}}d}b}{{{f{Bh{Ff{c}}}}Hd}bBn}{{{f{Bh{Ff{c}}}}An}bBn}033{{{f{Bh{Ff{c}}}}Il}bBn}{{{f{BhHd}}Il}b}{{{Ff{c}}Il}{{Ff{c}}}Bn}{{{Ff{c}}{An{Il}}}{{Ff{c}}}Bn}{{FbFb}Fb}{{HdHd}Hd}>=10{{{f{c}}}e{}{}}000?>{c{{Gd{e}}}{}{}}000000000{{{f{c}}}Ml{}}000043{ce{}{}}0000{ABdABd}````{{{f{c}}h}b{}}{{{f{{AC`{c}}}}El}{{Gj{{AC`{c}}{AC`{c}}}}}Hj}{e{{AC`{c}}}Hj{{Gb{}{{B`{{f{c}}}}}}}}{e{{AC`{c}}}Hj{{Gb{}{{B`{{An{{f{c}}}}}}}}}}{{ACbe}g{}{{Gb{}{{B`{c}}}}}{}}0{{{f{Hh}}}{{f{ACd}}}}{{{f{{AC`{c}}}}}{{f{ACd}}}Hj}{{{f{Bh{AC`{c}}}}}{{f{BhACd}}}Hj}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`{{{f{{AC`{c}}}}El}dHj}{{{f{{AC`{c}}}}}{{AC`{c}}}{HjOf}}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{{AC`{c}}}}}{{f{ACb}}}Hj}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{{f{Hh}}}}{f{{f{Hh}}}}}d}{{{f{Hh}}{f{Hh}}}d}{{{f{{AC`{c}}}}{f{BhFj}}}Fl{HjACf}}{cc{}}{{ElACb}{{AC`{c}}}Hj}{{{f{{AC`{c}}}}El}{{An{{f{c}}}}}Hj}{{}ACb}{{{f{Gh}}{f{{AC`{c}}}}{f{{AC`{c}}}}}{{AC`{c}}}Hj}{{ACb{f{Gh}}cc}{{AC`{e}}}{}Hj}{{{f{Gh}}{f{{AC`{c}}}}e}{{AC`{c}}}Hj{}}{{{f{Gh}}c{f{{AC`{e}}}}}{{AC`{e}}}{}Hj}{{}El}{ce{}{}}{{{f{{AC`{c}}}}}eHj{}}{{{f{{AC`{c}}}}El}dHj}0{{{f{c}}El}d{}}{{{f{{AC`{c}}}}}{{ACl{{f{c}}{ACh{c}}ACj}}}Hj}{{{f{{AC`{c}}}}}{{ACl{egACj}}}Hj{}{}}{{{f{{AC`{c}}}}}ElHj}0`{{{f{Bh{AC`{c}}}}{An{Gh}}}bHj}{{{f{Bh{AC`{c}}}}ElEl}bHj}{{{f{c}}ElEl}e{}{}}01{{{f{{AC`{c}}}}El}{{Gj{{A@n{Fn}}{A@n{Fn}}}}}Hj}0{{{f{Hh}}}{{A@n{Hh}}}}{{{f{{AC`{c}}}}}{{A@n{Fn}}}Hj}{{{f{c}}}e{}{}}{g{{Gd{{AC`{c}}e}}}Hj{}{{Gb{}{{B`{{Gd{{An{{f{c}}}}e}}}}}}}}{g{{Gd{{AC`{c}}e}}}Hj{}{{Gb{}{{B`{{Gd{{f{c}}e}}}}}}}}{{ACbg}{{Gd{ie}}}{}{}{{Gb{}{{B`{{Gd{ce}}}}}}}{}}0{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}{{{f{Hh}}}{{f{Bf}}}}{{}{{f{Bf}}}}{{{f{{AC`{c}}}}}{{An{{f{Gh}}}}}Hj}{{{f{{AC`{c}}}}El}{{f{c}}}Hj}{{{f{{AC`{c}}}}El}eHj{}}1{{{f{{AC`{c}}}}}{{f{{K`{{F`{c}}}}}}}Hj}{{{f{{AC`{c}}}}}{{ACh{c}}}Hj}{{{f{{AC`{c}}}}}eHj{}}{ce{}{}}{{{AC`{c}}{An{Gh}}}{{AC`{c}}}Hj}{{{f{{AC`{c}}}}{An{Gh}}}{{A@n{Fn}}}Hj}1`{{{f{Bh{ACn{c}}}}}bHj}0{{{f{Bh{ACn{c}}}}{An{c}}}bHj}{{{f{Bh{ACn{c}}}}{f{ACd}}}bHj}{{{f{Bh{ACn{c}}}}c}bHj}{{{f{Bh{ACn{c}}}}{f{ACd}}}{{Af{b}}}Hj}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}{{ACn{c}}}Hj}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{ACn{c}}}{{AD`{c}}}Hj}{cc{}}{{}El}{ce{}{}}{{{f{Bf}}El}{{ACn{c}}}Hj}{{{f{Bh{ACn{c}}}}}AdHj}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}4````{{{f{BhADb}}}b}{{{f{BhADb}}{An{{f{ACd}}}}}b}{{{f{BhADb}}{f{ACd}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`?>={{{f{ADd}}{f{BhFj}}}Fl}<{{{f{Bf}}El}{{A@n{ADb}}}}{{}ADf}{{}ACb}>={{}d}`{{ADhADfACb}b}{{{f{BhADb}}}Ad}==<{ce{}{}}``````````````````````````````````````````{{{f{c}}h}b{}}{{{f{{ADl{}{{ADj{c}}}}}}g}{{ADl{}{{ADj{c}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{c}}}}}}Cd}}{{{f{ADn}}{f{Cb}}}ADn}{{{f{ADn}}{f{Cb}}}{{l{c}}}Bn}{{{f{{ADl{}{{ADj{c}}}}}}i{f{Bh{Dd{g}}}}}b{}{}{}{{Cb{{An{e}}{f{g}}}{{C`{g}}}}}}{{{f{{ADl{}{{ADj{c}}}}}}g}{{ADl{}{{ADj{c}}}}}{}{}{{Cb{e}{{C`{c}}}}Cd}}{{{f{AE`}}Dl}Dn}{{{f{AE`}}{f{{Dd{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{AEb}}}{{Af{Dn}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AEd}}{f{Df}}}{{Af{Ad}}}}0{{{f{AEd}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{AEf}}}AEf}{{{f{c}}{f{Bhe}}}b{}{}}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{AEf}}{f{AEf}}}d}{{{f{{AEh{}{{B`{c}}}}}}e}c{}{}}0{{{f{AEj}}}{{Af{Ad}}}}{{{f{AEj}}}{{Af{{Gj{Ad{AEl{J`}}}}}}}}`{{{f{AEn}}c}{{Af{AEn}}}{}}{{{f{AF`}}{f{Fh}}}{{Af{{l{c}}}}}Bn}`{{{f{AEf}}{f{BhFj}}}Fl}{cc{}}`{{{f{Bf}}cEl}AFb{}}{{{f{Bf}}El}AFd}`{{{f{AFf}}El}{{Af{H`}}}}{{{f{AFf}}El}H`}::{{{f{AEf}}{f{Bhc}}}bAA`}{{}El}{ce{}{}}{{{f{AFh}}}{{Af{Fh}}}}{{{f{AFj}}}{{Af{Fh}}}}??{{{f{AFl}}}{{An{c}}}{}}{{{f{AFl}}}{{An{Jn}}}}{{{f{AFn}}}{{An{c}}}{}}2{{{f{AFl}}}{{An{{Gj{cc}}}}}{}}{{{f{AEb}}}{{Af{El}}}}{{{f{AG`}}ElEl}{{l{c}}}Bn}{{{f{{AEh{}{{B`{c}}}}}}e}c{}{}}0{{{f{AEj}}}{{Af{{AEl{J`}}}}}}{{{f{AFn}}JnLh}{{Af{{An{c}}}}}{}}{{{f{AGb}}}AGb}{{{f{AGd}}{f{Cb}}Lj}{{Af{Ad}}}}{{{f{AGf}}c{An{e}}}{{Af{AGf}}}{{Gb{}{{B`{Hb}}}}}{}}{{{f{AGf}}ci}{{Af{AGf}}}{{Gb{}{{B`{Hb}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{g}}}}}}}}`{{{f{AGf}}{f{Fh}}{An{c}}}{{Af{AGf}}}{}}{{{f{AGh}}J`}{{l{c}}}Bn}{{{f{AGj}}J`c}{{l{e}}}{}Bn}`{{{f{AE`}}d}{{l{c}}}Bn}{{{f{AE`}}Dl}{{l{c}}}Bn}{{{f{AGl}}Db}{{An{Jn}}}}{{{f{AFl}}}{{An{c}}}{}}{{{f{AGn}}{f{c}}}{{Af{AGn}}}Ll}{{{f{AH`}}{f{c}}}AH`Ll}{{{f{AHb}}}{{F`{{f{{Dd{Db}}}}}}}}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}{{{f{AEb}}}{{Af{AEb}}}}8{ce{}{}}`{{{f{AHd}}{f{Fh}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}BnBn{{Cb{ff}{{C`{}}}}}{{Cb{f}{{C`{}}}}}{{Cb{f}{{C`{}}}}}Bn}{{{l{c}}{l{e}}gik}{{l{m}}}BnBn{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBnFn{{Ch{ff}{{C`{g}}}}}{{Bn{}{{G`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}BnBn{{AHf{AnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}g}bBnBn{{Ch{AnAn}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBn{}{{Ch{}{{C`{g}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBn{FnAHh}{{Ch{ff}{{C`{g}}}}}{{Bn{}{{G`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBnFn{{Ch{ff}{{C`{g}}}}}{{Bn{}{{G`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}BnBnFn{{Ch{}{{C`{g}}}}}{{Bn{}{{G`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Af{Ad}}}BnBn{{Ch{ff}{{C`{{A@n{Fn}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}BnBn{{Ch{ff}{{C`{{A@n{Fn}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Gd{{l{m}}i}}}BnBn{}{}{{Ch{AnAn}{{C`{{Gd{{An{g}}i}}}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}BnBnBn{{AHj{AnAnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Gd{{l{m}}i}}}BnBnFnAHl{{Ch{ff}{{C`{{Gd{gi}}}}}}}{{Bn{}{{G`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bf}}}{{Gd{{l{m}}i}}}BnBnFnAHl{{Ch{ff}{{C`{{Gd{gi}}}}}}}{{Bn{}{{G`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Gd{{l{c}}g}}}BnBnAHl{{Ch{ff}{{C`{{Gd{{A@n{Fn}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Gd{{l{o}}k}}}BnBnBn{}{}{{Ch{AnAnAn}{{C`{{Gd{{An{i}}k}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gd{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Gd{{An{e}}g}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gd{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Gd{eg}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gd{{l{k}}g}}}Bn{FnAHh}AHl{{Ch{f}{{C`{{Gd{eg}}}}}}}{{Bn{}{{G`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Bn{{AHn{An}}}Bn}{{{f{{l{c}}}}e}{{l{g}}}BnAHnBn}{{{f{{l{c}}}}g}{{l{i}}}BnFn{{Ch{f}{{C`{e}}}}}{{Bn{}{{G`{e}}}}}}{{{l{c}}g}{{l{i}}}BnFn{{Ch{}{{C`{e}}}}}{{Bn{}{{G`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{FnAHh}{{Ch{f}{{C`{e}}}}}{{Bn{}{{G`{e}}}}}}0{{{f{{l{c}}}}}Eln}0{{IlIl}Il}{{{f{Dn}}Hb}{{Af{b}}}}{{{f{{AI`{Hb}}}}Hb}{{Af{b}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAIbd}{{F`{Hb}}}Bn{{Bd{}{{B`{An}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AIb}}}AIb}{{{f{c}}{f{Bhe}}}b{}{}}{{}AIb}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{AIb}}{f{AIb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AIb}}{f{BhFj}}}Fl}{cc{}}{{{f{AIb}}{f{Bhc}}}bAA`}{{}El}{ce{}{}}{{{f{{Dd{f}}}}cHbe}{{F`{Hb}}}{{Bd{}{{B`{An}}}}}{{Cb{fElf}{{C`{d}}}}}}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}4`{{El{f{Bh{F`{d}}}}}b}```{{{f{AId}}ElEl}AId}0{{El{f{{Dd{Ad}}}}{f{BhE`}}}{{Af{{AIf{Dn}}}}}}{{{f{{Dd{Ad}}}}{f{{Dd{d}}}}{f{{Dd{d}}}}}{{Af{AIh}}}}{{{f{Bf}}{f{{Dd{Ad}}}}{f{{Dd{d}}}}{f{{Dd{d}}}}}{{Af{AIj}}}}{{{f{Bf}}{f{{Dd{Ad}}}}}{{Af{AIj}}}}{{{f{Ad}}}{{Af{En}}}}{{{f{{Dd{Ad}}}}}{{Af{AIh}}}}{{{f{{Dd{Ad}}}}}{{Af{AIj}}}}0```{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{{f{Dl}}}Dl}{{{f{E`}}}E`}{{{f{c}}{f{Bhe}}}b{}{}}0{{}Dl}{{}E`}{El{{f{c}}}{}}0{El{{f{Bhc}}}{}}0``{Elb}0{{{f{Dl}}{f{Dl}}}d}{{{f{E`}}{f{E`}}}d}{{{f{c}}{f{e}}}d{}{}}00000{{{f{Dl}}{f{BhFj}}}Fl}{{{f{E`}}{f{BhFj}}}Fl}{cc{}}{{{f{E`}}}Dl}1{{{f{Dl}}}E`}{{{f{Dl}}{f{Bhc}}}bAA`}{{{f{E`}}{f{Bhc}}}bAA`}{{}El}0{ce{}{}}0````{{}Dl}{{}E`}``{{{f{AId}}ElEl}AId}0{{{f{c}}}e{}{}}0{c{{Gd{e}}}{}{}}000{{{f{c}}}Ml{}}066{{Dld}Dl}{{E`d}E`}1010{{E`c}E`{{Gb{}{{B`{d}}}}}}210{DlDl}{E`E`}`{AIlJ`}00{{}d}>>0``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000{{{f{Dj}}}d}{{{f{Ib}}{f{Ib}}}c{}}{{FhFh}c{}}{{{f{Fh}}{f{Fh}}}c{}}{{{f{Mh}}{f{Bf}}}c{}}{{MhMh}c{}}{{{f{Mh}}{f{Mh}}}c{}}{{{f{Eb}}{f{{Dd{Db}}}}}c{}}{{EbEb}c{}}{{{f{Eb}}{f{Eb}}}c{}}{{{f{H`}}{f{H`}}}H`}{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAIn}}}{}}000000{{{f{Mh}}{f{Ad}}}{{Af{Ad}}}}{{{f{Eb}}{f{Ad}}}{{Af{Ad}}}}{{{f{Fh}}{f{Ad}}}{{Af{Ad}}}}{{{f{Dj}}{f{Aj}}}Ad}{{{f{Fh}}{f{Aj}}}Ad}{{{f{Mh}}{f{Aj}}}Ad}{{{f{Eb}}{f{Aj}}}Ad}{{{f{{AD`{c}}}}{f{Aj}}}AdHj}{{{f{Fh}}}d}{{{f{Fh}}}{{An{d}}}}{{{f{Dj}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{Dj}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Dj}}c}Dj{{Cb{{An{Ad}}}{{C`{{An{Ad}}}}}}Cd}}{{{f{Fh}}c}Fh{{Cb{{An{d}}}{{C`{{An{d}}}}}}Cd}}{{{f{Mh}}c}Mh{{Cb{{An{{f{Bf}}}}}{{C`{{An{{AJ`{Bf}}}}}}}}Cd}}{{{f{Eb}}c}Eb{{Cb{{An{{f{{Dd{Db}}}}}}}{{C`{{An{{AJ`{{Dd{Db}}}}}}}}}}Cd}}{{{f{{AD`{c}}}}e}{{AD`{c}}}Hj{{Cb{{An{{f{c}}}}}{{C`{{An{c}}}}}}Cd}}{{{f{Dj}}c}Dj{{Ch{Cf}{{C`{Ad}}}}}}{{{f{Dj}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{AJb}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{AJd}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{Fh}}{f{Cb}}}Fh}{{{f{Mh}}{f{Cb}}}Mh}{{{f{Eb}}{f{Cb}}}Eb}{{{f{Fh}}{f{Cb}}}{{l{c}}}Bn}{{{f{Mh}}{f{Cb}}}{{l{c}}}Bn}{{{f{Eb}}{f{Cb}}}{{l{c}}}Bn}{{{f{Mh}}c}Mh{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{Eb}}c}Eb{{Ch{{f{{Dd{Db}}}}}{{C`{{f{{Dd{Db}}}}}}}}}}{{{f{Mh}}c}Mh{{Ch{{f{Bf}}{f{BhDh}}}}}}{{{f{Dj}}{f{Cb}}}{{Af{Dj}}}}{{{f{Dj}}e{f{Bh{Dd{c}}}}}b{}{{Cb{{An{Ad}}{f{c}}}{{C`{c}}}}}}{{{f{Fh}}e{f{Bh{Dd{c}}}}}b{}{{Cb{{An{d}}{f{c}}}{{C`{c}}}}}}{{{f{Mh}}e{f{Bh{Dd{c}}}}}b{}{{Cb{{An{{f{Bf}}}}{f{c}}}{{C`{c}}}}}}{{{f{Eb}}e{f{Bh{Dd{c}}}}}b{}{{Cb{{An{{f{{Dd{Db}}}}}}{f{c}}}{{C`{c}}}}}}{{{f{{AD`{c}}}}g{f{Bh{Dd{e}}}}}bHj{}{{Cb{{An{{f{c}}}}{f{e}}}{{C`{e}}}}}}{{{f{Dj}}c}Dj{{Cb{Ad}{{C`{Ad}}}}Cd}}{{{f{Fh}}c}Fh{{Cb{d}{{C`{d}}}}Cd}}{{{f{Mh}}c}Mh{{Cb{{f{Bf}}}{{C`{{AJ`{Bf}}}}}}Cd}}{{{f{Eb}}c}Eb{{Cb{{f{{Dd{Db}}}}}{{C`{{AJ`{{Dd{Db}}}}}}}}Cd}}{{{f{{AD`{c}}}}e}{{AD`{c}}}Hj{{Cb{{f{c}}}{{C`{c}}}}Cd}}{{{f{Fh}}Dl}Dn}{{{f{Mh}}Dl}Dn}{{{f{Eb}}Dl}Dn}{{{f{AIj}}Dl}Dn}{{{f{Fh}}{f{{Dd{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Mh}}{f{{Dd{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Eb}}{f{{Dd{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{AIj}}{f{{Dd{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Fh}}}{{Af{Dn}}}}{{{f{Mh}}}{{Af{Dn}}}}{{{f{Eb}}}{{Af{Dn}}}}{{{f{{AD`{c}}}}}{{Af{Dn}}}Hj}{eAJf{}{{Gb{}{{B`{c}}}}}}0{{ACbe}AJh{}{{Gb{}{{B`{c}}}}}}0{{{f{Jl}}}H`}{{{f{Mh}}}Eb}{{{f{H`}}}H`}{{{f{Df}}}{{f{Df}}}}{{{f{Lb}}}{{f{Df}}}}{{{f{AJj}}}{{f{Df}}}}{{{f{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}}}}{{An{{f{{Dd{c}}}}}}}Of{AKb{AKd{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Dj}}{f{{l{c}}}}{f{{l{e}}}}g}DjBnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{FhFh}c{}}{{{f{Fh}}{f{Fh}}}c{}}1001{{{f{c}}}{{f{e}}}{}{}}0000000000000000000000000000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000000000000000000000000000000{Df{{A@n{Df}}}}{{{f{AKf}}{f{AKf}}c}{{Af{AKf}}}AKh}{{{f{AKj}}{f{Df}}}{{Af{Ad}}}}0{{{f{H`}}{f{Df}}}H`}{{{f{Df}}Df}Df}{{{f{Dj}}{f{Df}}}{{Af{Ad}}}}{{{f{Fh}}{f{Df}}}{{Af{Ad}}}}{{{f{Mh}}{f{Df}}}{{Af{Ad}}}}{{{f{Eb}}{f{Df}}}{{Af{Ad}}}}{{{f{AIj}}{f{Df}}}{{Af{Ad}}}}{{{f{AKj}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ib}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Dj}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Fh}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Mh}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Eb}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{AIj}}{f{Df}}Ef}{{Af{Ad}}}}`{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAIn}}}{}}0000{{{f{AJb}}{f{Ad}}}{{Af{Ad}}}}{{{f{AJd}}{f{Ad}}}{{Af{Ad}}}}{{{f{{AKl{ce}}}}}{{AKl{ce}}}BnBn}{{{f{Jl}}}Jl}{{{f{AKn}}}AKn}{{{f{H`}}}H`}{{{f{AL`}}}AL`}{{{f{Df}}}Df}{{{f{Lb}}}Lb}{{{f{ALb}}}ALb}{{{f{ALd}}}ALd}{{{f{ALf}}}ALf}{{{f{Kn}}}Kn}{{{f{Kl}}}Kl}{{{f{ALh}}}ALh}{{{f{ALj}}}ALj}{{{f{Kb}}}Kb}{{{f{Kj}}}Kj}{{{f{Cj}}}Cj}{{{f{Cl}}}Cl}{{{f{ALl}}}ALl}{{{f{ALn}}}ALn}{{{f{Cn}}}Cn}{{{f{D`}}}D`}{{{f{AM`}}}AM`}{{{f{Al}}}Al}{{{f{AMb}}}AMb}{{{f{AMd}}}AMd}{{{f{AMf}}}AMf}{{{f{AMh}}}AMh}{{{f{ACb}}}ACb}{{{f{AMj}}}AMj}{{{f{c}}{f{Bhe}}}b{}{}}00000000000000000000000000000{{{f{BhLb}}Df}b}{AMle{}{{AJf{c}}AHh}}0{{AMlACb}e{}{{AJh{c}}AHh}}0{{{f{Df}}}d}00{AMnDf}{{{f{Lb}}}{{f{Df}}}}{{}H`}{{}AL`}{{}Df}{{}ACb}{{{f{{AKl{ce}}}}}{{f{g}}}BnBn{}}{El{{f{c}}}{}}0000000000000000000000000000000000{{{f{Bh{AKl{ce}}}}}{{f{Bhg}}}BnBn{}}{El{{f{Bhc}}}{}}0000000000000000000000000000000000{{{f{Ib}}{f{Ib}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAIn}}}{}}000000{Elb}0000000000000000000000000000000000{{{f{AKj}}}{{f{Df}}}}{{{f{Ib}}}{{f{Df}}}}{{{f{Jl}}}{{f{Df}}}}{{{f{H`}}}Df}`{{{f{H`}}{f{H`}}}d}{{{f{AL`}}{f{AL`}}}d}{{{f{Df}}{f{ACb}}}d}{{{f{Df}}{f{Df}}}d}{{{f{Lb}}{f{Lb}}}d}{{{f{ALb}}{f{ALb}}}d}{{{f{ACb}}{f{ACb}}}d}{{{f{AMj}}{f{AMj}}}d}{{{f{H`}}{f{H`}}d}d}{{{f{Dj}}{f{Dj}}}Fh}{{{f{Fh}}{f{Fh}}}Fh}{{{f{Mh}}{f{Bf}}}Fh}{{{f{Mh}}{f{Mh}}}Fh}{{{f{Eb}}{f{Eb}}}Fh}{{{f{Eb}}{f{{Dd{Db}}}}}Fh}543210{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{Dj}}}{{Af{{Gj{Ad{AEl{J`}}}}}}}}{{{f{{AKl{ce}}}}}LbBnBn}{{{f{Fh}}d}{{Af{Fh}}}}{{{f{Eb}}{f{{Dd{Db}}}}}{{Af{Eb}}}}{{{f{Dj}}{f{Fh}}}{{Af{Dj}}}}{{{f{Fh}}{f{Fh}}}{{Af{{l{Al}}}}}}{{{f{Mh}}{f{Fh}}}{{Af{{l{Cn}}}}}}{{{f{Eb}}{f{Fh}}}{{Af{{l{D`}}}}}}{{{f{AIj}}{f{Fh}}}{{Af{AIj}}}}{{{f{{AD`{c}}}}{f{Fh}}}{{Af{{l{{Hf{c}}}}}}}Hj}{{AKh{f{AN`}}{f{AN`}}}{{Af{AN`}}}}{{{f{Dj}}{f{BhFj}}}Fl}{{{f{Mh}}{f{BhFj}}}Fl}{{{f{Eb}}{f{BhFj}}}Fl}{{{f{{AD`{c}}}}{f{BhFj}}}FlHj}{{{f{AKn}}{f{BhFj}}}Fl}{{{f{H`}}{f{BhFj}}}Fl}0{{{f{AL`}}{f{BhFj}}}Fl}{{{f{Df}}{f{BhFj}}}Fl}0{{{f{Lb}}{f{BhFj}}}Fl}{{{f{ALb}}{f{BhFj}}}Fl}0{{{f{ACb}}{f{BhFj}}}{{Gd{bANb}}}}{{{f{AMj}}{f{BhFj}}}{{Gd{bANb}}}}{{{f{Dj}}c}b{{Ch{{An{Cf}}}}}}{cc{}}0000000{cH`ANd}{dH`}{{{f{Bf}}}H`}{{{f{{Dd{Db}}}}}H`}4{{{An{c}}}H`{{ANf{H`}}}}5{H`Df}{{{f{H`}}}Df}7{{{f{ACb}}}Df}{{{f{H`}}}Lb}{{{f{ANh}}}Lb}::{{{f{AMj}}}ALb};;;;;;;;;;;;;;;;;;;;{ANjACb}<{ANlACb}={{{f{ACb}}d}Df}{cDj{{Gb{}{{B`{{An{{A@n{Fn}}}}}}}}}}{eDj{{ANn{Ad}}}{{Gb{}{{B`{c}}}}}}{cDj{{Gb{}{{B`{{An{Ad}}}}}}}}{cFh{{Gb{}{{B`{d}}}}}}{eMh{{Kf{Bf}}}{{Gb{}{{B`{{An{c}}}}}}}}{eMh{{`{Bf}}}{{Gb{}{{B`{c}}}}}}{eEb{{Kf{{Dd{Db}}}}}{{Gb{}{{B`{{An{c}}}}}}}}{eEb{{`{{Dd{Db}}}}}{{Gb{}{{B`{c}}}}}}{e{{AD`{c}}}Hj{{Gb{}{{B`{{An{c}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{{An{d}}}}}}}}{{{f{Bf}}e}Mh{{Kf{Bf}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}Eb{{Kf{{Dd{Db}}}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}{{AD`{c}}}Hj{{Bd{}{{B`{{An{c}}}}}}}}:;97856{eAIj{{Kf{{Dd{Db}}}}}{{Gb{}{{B`{{An{c}}}}}}}}{eAIj{{`{{Dd{Db}}}}}{{Gb{}{{B`{c}}}}}}6{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{d}}}}}}{{{f{Bf}}e}Mh{{Kf{Bf}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}Eb{{Kf{{Dd{Db}}}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}{{AD`{c}}}Hj{{Bd{}{{B`{c}}}}}}{{AO`Df}Lb}{cDj{{Gl{}{{B`{{An{Ad}}}}}}}}{cFh{{Gl{}{{B`{d}}}}}}{cFh{{Gl{}{{B`{{An{d}}}}}}}}{eMh{{Kf{Bf}}IdIf}{{Gl{}{{B`{{An{c}}}}}}}}{eMh{{`{Bf}}IdIfAOb}{{Gl{}{{B`{c}}}}}}{eEb{{`{{Dd{Db}}}}IdIfAOb}{{Gl{}{{B`{c}}}}}}{eEb{{Kf{{Dd{Db}}}}IdIf}{{Gl{}{{B`{{An{c}}}}}}}}{{c{f{Bf}}Df}Dj{{Gl{}{{B`{{An{Ad}}}}}}}}{{{f{Bf}}{f{{Dd{d}}}}}Fh}{{{f{Bf}}{f{{Dd{c}}}}}Mh{{Kf{Bf}}}}{{{f{Bf}}{f{{Dd{c}}}}}Eb{{Kf{{Dd{Db}}}}}}{{{f{Bf}}{f{{Dd{c}}}}}{{AD`{c}}}Hj}{{{f{Bf}}{f{{Dd{{An{d}}}}}}}Fh}{{{f{Bf}}{f{{Dd{{An{c}}}}}}}Mh{{Kf{Bf}}}}{{{f{Bf}}{f{{Dd{{An{c}}}}}}}Eb{{Kf{{Dd{Db}}}}}}{{{f{Bf}}{f{{Dd{{An{c}}}}}}}{{AD`{c}}}Hj}{cFh{{Gn{}{{B`{{An{d}}}}}}}}{{{F`{c}}ACb}{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}}Of{AKb{AKd{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{F`{c}}ACb}{{AHh{}{{AJl{e}}{AJn{c}}{AK`{g}}}}}{AKb{AKd{e}}}Of{{Fd{}{{B`{e}}}}GnIdIf}}{{ElcACb}{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}}Of{AKb{AKd{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Bf}}{f{Ad}}El}Dj}{{{f{Bf}}dEl}Fh}{{{f{Bf}}{f{Bf}}El}Mh}{{{f{Bf}}{f{{Dd{Db}}}}El}Eb}{{{f{Bf}}{f{{Dd{Db}}}}El}AIj}{{{f{Bf}}cEl}{{AD`{c}}}Hj}{{ElACb}{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}}Of{AKb{AKd{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Bf}}El}Dj}{{{f{Bf}}El}Fh}{{{f{Bf}}El}Mh}{{{f{Bf}}El}Eb}{{{f{Bf}}El}AIj}{{{f{Bf}}El}{{AD`{c}}}Hj}{{{f{Bf}}El{f{Df}}}Dj}{{{f{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}}}El}{{An{c}}}Of{AKb{AKd{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Ib}}El}{{Af{H`}}}}{{{f{AKj}}El}{{Af{H`}}}}0{{{f{Dj}}El}{{Af{H`}}}}{{{f{Fh}}El}{{Af{H`}}}}{{{f{Mh}}El}{{Af{H`}}}}{{{f{Eb}}El}{{Af{H`}}}}{{{f{AIj}}El}{{Af{H`}}}}{{{f{{AD`{c}}}}El}{{Af{H`}}}Hj}{{{f{Ib}}El}H`}{{{f{AKj}}El}H`}0{{{f{Dj}}El}H`}{{{f{Fh}}El}H`}{{{f{Mh}}El}H`}{{{f{Eb}}El}H`}{{{f{AIj}}El}H`}{{{f{{AD`{c}}}}El}H`Hj}{{{f{Dj}}El}{{An{Ad}}}}{{}Df}00000000000000000000000{{{f{Dj}}}Ad}{{{f{{AD`{c}}}}El}{{An{{f{Hh}}}}}Hj}0{{{f{H`}}}{{An{{f{Bf}}}}}}{{{f{AOd}}El}H`}{{{f{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}}}El}{{An{c}}}Of{AKb{AKd{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Dj}}}El}{{{f{Mh}}}El}{{{f{AIj}}}El}{{{f{Dj}}dd}{{Af{Aj}}}}{{{f{Fh}}dd}{{Af{Aj}}}}{{{f{Mh}}dd}{{Af{Aj}}}}{{{f{Eb}}dd}{{Af{Aj}}}}{{{f{AIj}}dd}{{Af{Aj}}}}{{{f{{AD`{c}}}}dd}{{Af{Aj}}}Hj}{{{f{Dj}}{f{Dj}}}Fh}{{{f{Fh}}{f{Fh}}}Fh}{{{f{Mh}}{f{Bf}}}Fh}{{{f{Mh}}{f{Mh}}}Fh}{{{f{Eb}}{f{{Dd{Db}}}}}Fh}{{{f{Eb}}{f{Eb}}}Fh}542310{{{f{H`}}{f{Bhc}}}bAA`}{{{f{AL`}}{f{Bhc}}}bAA`}{{{f{Df}}{f{Bhc}}}bAA`}{{{f{Lb}}{f{Bhc}}}bAA`}{{{f{ALb}}{f{Bhc}}}bAA`}{{{f{ACb}}{f{Bhc}}}bAA`}{{{f{AMj}}{f{Bhc}}}bAA`}{{{f{H`}}{f{Bhc}}d}bAA`}{DfDf}{{}El}0000000000000000000000000000000000{{{f{Dj}}}{{f{Df}}}}{{{f{Df}}}{{An{{f{Df}}}}}}{{{f{ACb}}}{{An{{f{ACb}}}}}}{ce{}{}}0000000000000000000000000000000000{{AOf{An{El}}El}{{Af{Ib}}}}{{AOf{An{El}}El}Ib}{{{f{Dj}}}c{}}{{{f{Fh}}}c{}}{{{f{Mh}}}c{}}{{{f{Eb}}}c{}}{{{f{AIj}}}c{}}{{{f{{AD`{c}}}}}eHj{}}{IbAd}{AOfAd}{{Jl{f{Bf}}}Ad}{H`{{Af{H`}}}}{{{f{Df}}}d}00{{{f{H`}}}d}111010111110101011110111101{{{f{ACb}}}d}{{{f{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}}}}{{ACl{cgACj}}}Of{AKb{AKd{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Dj}}}{{`{{Bd{}{{B`{J`}}}}}}}}{{{f{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}}}}{{An{c}}}Of{AKb{AKd{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Df}}}{{f{Df}}}}{{{f{Dj}}{f{Dj}}}Fh}{{{f{Fh}}{f{Fh}}}Fh}{{{f{Mh}}{f{Bf}}}Fh}{{{f{Mh}}{f{Mh}}}Fh}{{{f{Eb}}{f{Eb}}}Fh}{{{f{Eb}}{f{{Dd{Db}}}}}Fh}542310{{{f{AKf}}{f{AKf}}}{{Af{{Gj{AKfAKf}}}}}}{{DjDj}{{Af{{Gj{DjDj}}}}}}{{{f{Df}}{f{Df}}}{{Af{d}}}}{{{f{AL`}}}{{An{Df}}}}{{{f{Fh}}}{{An{d}}}}{{{f{Fh}}}Jl}{{{f{Mh}}}Jl}{{{f{Eb}}}Jl}{{{f{Fh}}}{{An{Jn}}}}{{{f{AJb}}}{{An{Hl}}}}{{{f{AJd}}}{{An{Jn}}}}{{{f{AJb}}}Jl}{{{f{AJd}}}Jl}{{{f{Df}}{f{Df}}}{{Af{Df}}}}9876{{{f{Bf}}{f{{Dd{Db}}}}ElEl}Fh}{{{f{Ib}}{f{Ib}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAIn}}}{}}000000{{{f{Mh}}}{{Af{El}}}}{{{f{Eb}}}{{Af{El}}}}{{{f{Lb}}}{{f{AO`}}}}`{{}c{}}00{{{f{Bf}}c}Mh{{Kf{{Dd{{f{Bf}}}}}}}}{{{f{Bf}}c}Mh{{Kf{{Dd{{AJ`{Bf}}}}}}}}{{{f{Bf}}c}Mh{{Kf{{Dd{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Mh{{Kf{{Dd{{An{{AJ`{Bf}}}}}}}}}}{{{f{Bf}}c}Eb{{Kf{{Dd{{An{{AJ`{{Dd{Db}}}}}}}}}}}}{{{f{Bf}}c}Eb{{Kf{{Dd{{f{{Dd{Db}}}}}}}}}}{{{f{Bf}}c}Eb{{Kf{{Dd{{An{{f{{Dd{Db}}}}}}}}}}}}{{{f{Bf}}c}Eb{{Kf{{Dd{{AJ`{{Dd{Db}}}}}}}}}}{{{f{Bf}}{f{{Dd{c}}}}}{{AD`{c}}}Hj}{{{f{Bf}}e}{{AD`{c}}}Hj{{Kf{{Dd{{An{c}}}}}}}}{{DfH`}Jl}{{{f{Bf}}Df}Lb}{{{f{Bf}}}{{AD`{c}}}Hj}{{{f{Dj}}ElEl}Dj}{{{f{Fh}}ElEl}Fh}{{{f{Mh}}ElEl}Mh}{{{f{Eb}}ElEl}Eb}{{{f{AIj}}ElEl}AIj}{{{f{{AD`{c}}}}ElEl}{{AD`{c}}}Hj}{{{f{Bf}}{F`{c}}}{{AD`{c}}}Hj}{{{f{Bf}}{F`{c}}Gh}{{AD`{c}}}Hj}{{{l{c}}}{{AKl{ec}}}BnBn}{{{f{Fh}}}c{}}{Fhc{}}{{{f{Dj}}{f{Dj}}}Fh}{{{f{Fh}}{f{Fh}}}Fh}{{{f{Mh}}{f{Mh}}}Fh}{{{f{Mh}}{f{Bf}}}Fh}{{{f{Eb}}{f{Eb}}}Fh}{{{f{Eb}}{f{{Dd{Db}}}}}Fh}543210{{{f{Dj}}}{{Af{{AEl{J`}}}}}}{{{f{Dj}}}{{`{{Ld{}{{B`{{An{Ad}}}}}}}}}}{{{f{Mh}}}{{`{{Ld{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{BhDj}}}{{`{{Lf{}{{B`{{An{Ad}}}}}}}}}}{{{f{Mh}}}{{`{{Lf{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{H`}}{f{H`}}}{{An{AOh}}}}{{{f{ALb}}{f{ALb}}}{{An{AOh}}}}{{{f{Ib}}}{{An{El}}}}{{{f{{AKl{AMbI`}}}}}{{An{El}}}}{{{f{AJb}}JnLh}{{Af{{An{Hl}}}}}}{{{f{AJd}}JnLh}{{Af{{An{Jn}}}}}}{{{f{AJb}}JnLh}{{Af{Jl}}}}{{{f{AJd}}JnLh}{{Af{Jl}}}}{{{f{Bf}}ElJn}{{Af{Fh}}}}{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAIn}}}{}}000000{{{f{Dj}}}Dj}{{{f{Fh}}}Fh}{{{f{Mh}}}Mh}{{{f{Eb}}}Eb}{{{f{AIj}}}AIj}{{{f{{AD`{c}}}}}{{AD`{c}}}Hj}`{{{f{Ib}}}El}{{{f{{AKl{AMbI`}}}}}El}{{{f{Fh}}c{An{d}}}{{Af{Fh}}}{{Gb{}{{B`{Hb}}}}}}{{{f{Mh}}c{An{{f{Bf}}}}}{{Af{Mh}}}{{Gb{}{{B`{Hb}}}}}}{{{f{Eb}}c{An{{f{{Dd{Db}}}}}}}{{Af{Eb}}}{{Gb{}{{B`{Hb}}}}}}{{{f{Fh}}ce}{{Af{Fh}}}{{Gb{}{{B`{Hb}}}}}{{Cb{{An{d}}}{{C`{{An{d}}}}}}}}{{{f{Mh}}ce}{{Af{Mh}}}{{Gb{}{{B`{Hb}}}}}{{Cb{{An{{f{Bf}}}}}{{C`{{An{Dh}}}}}}}}{{{f{Eb}}ce}{{Af{Eb}}}{{Gb{}{{B`{Hb}}}}}{{Cb{{An{{f{{Dd{Db}}}}}}}{{C`{{An{{F`{Db}}}}}}}}}}{{{f{Fh}}{f{Fh}}{An{d}}}{{Af{Fh}}}}{{{f{Mh}}{f{Fh}}{An{{f{Bf}}}}}{{Af{Mh}}}}{{{f{Eb}}{f{Fh}}{An{{f{{Dd{Db}}}}}}}{{Af{Eb}}}}{{{f{BhDj}}}b}{{{f{BhDj}}Df}b}{{{f{BhLb}}AO`}b}{{{f{Dj}}J`}Dj}{{{f{Fh}}J`}Fh}{{{f{Mh}}J`}Mh}{{{f{Eb}}J`}Eb}{{{f{AIj}}J`}AIj}{{{f{{AD`{c}}}}J`}{{AD`{c}}}Hj}{{{f{Dj}}J`{An{{f{Ad}}}}}Dj}{{{f{Fh}}J`{An{d}}}Fh}{{{f{Mh}}J`{An{{f{Bf}}}}}Mh}{{{f{Eb}}J`{An{{f{{Dd{Db}}}}}}}Eb}{{{f{AIj}}J`{An{{f{{Dd{Db}}}}}}}AIj}{{{f{{AD`{c}}}}J`{An{{Hf{c}}}}}{{l{{Hf{c}}}}}Hj}{{{f{Fh}}d}Fh}{{{f{Mh}}d}Mh}{{{f{Eb}}d}{{l{D`}}}}{{{f{AIj}}d}AIj}{{{f{Fh}}Dl}{{l{Al}}}}{{{f{Mh}}Dl}{{l{Cn}}}}{{{f{Eb}}Dl}{{l{D`}}}}{{{f{AIj}}Dl}AIj}{{{f{AJb}}Db}Jl}{{{f{AJd}}Db}Jl}{{{f{H`}}{f{Df}}}{{An{H`}}}}`{{{f{Ib}}{f{Ib}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAIn}}}{}}000000{{{f{Fh}}}{{An{Hb}}}}{{{f{Fh}}}Jl}{{{f{Eb}}}Jl}{{{f{Mh}}{f{c}}}Mh{{Kf{{Dd{Hb}}}}Ll}}{{{f{Mh}}{f{Dn}}}Mh}{{{f{Eb}}{f{c}}}Eb{{Kf{{Dd{Hb}}}}Ll}}{{{f{Eb}}{f{Dn}}}Eb}{{{f{Df}}d}ACb}{{{f{Lb}}d}ANh}{ALbAMj}{{{f{Df}}{f{Bf}}d}ANh}{ALb{{f{Bf}}}}{{{f{Mh}}El}{{Af{Ad}}}}{{{f{BhDj}}Df}b}{{{f{ACb}}}{{f{ACb}}}}{{{f{Dj}}}{{Af{Md}}}}{{{f{c}}}e{}{}}00000000000000000000000000000{{{f{Df}}}Df}{{{f{ACb}}}AOj}{{{f{c}}}Dh{}}00{{{f{Eb}}}Mh}{{{f{H`}}{f{H`}}}d}{{{f{Dj}}c}{{Af{Dj}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{Dj}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{g{{Gd{AJfe}}}{}{}{{Gb{}{{B`{{Gd{ce}}}}}}}}0{{ACbg}{{Gd{AJhe}}}{}{}{{Gb{}{{B`{{Gd{ce}}}}}}}}0{AMl{{Gd{eg}}}{}{{AJf{c}}AHh}{}}0{{AMlACb}{{Gd{eg}}}{}{{AJh{c}}AHh}{}}0{{{f{H`}}}{{Af{c}}}Jj}{c{{Gd{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000{{{f{H`}}{f{Df}}}{{Af{H`}}}}{{{f{Df}}d}{{Af{ACb}}}}{{{f{Dj}}{f{{l{c}}}}e}{{Af{Dj}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Ml{}}0000000000000000000000000000000000{{{f{ACb}}}ACb}{{{f{Fh}}}{{Af{Fh}}}}{{{f{Mh}}}{{Af{Mh}}}}{{{f{Eb}}}{{Af{Eb}}}}{{{f{{AD`{c}}}}}{{Af{{l{{Hf{c}}}}}}}Hj}{{{f{BhJl}}H`}b}{{{f{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}}}El}cOf{AKb{AKd{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Jl}}}{{f{H`}}}}1{{{f{Df}}H`}d}{{{f{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}}}}gOf{AKb{AKd{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{AJb}}Db}Jl}{{{f{AJd}}Db}Jl}{{{f{Fh}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{AOl}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{AOn}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{AN`}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{B@`}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{B@b}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{B@d}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{B@f}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{B@h}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{AOf}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{AJb}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{AJd}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{Mh}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{Eb}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{AIj}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{{AD`{c}}}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}Hj}{{{f{Fh}}M`{f{Bh{Dd{Hn}}}}}{{Af{b}}}}{{{f{AOl}}M`{f{Bh{Dd{Hn}}}}}{{Af{b}}}}{{{f{AOn}}M`{f{Bh{Dd{Hn}}}}}{{Af{b}}}}{{{f{AN`}}M`{f{Bh{Dd{Hn}}}}}{{Af{b}}}}{{{f{B@`}}M`{f{Bh{Dd{Hn}}}}}{{Af{b}}}}{{{f{B@b}}M`{f{Bh{Dd{Hn}}}}}{{Af{b}}}}{{{f{B@d}}M`{f{Bh{Dd{Hn}}}}}{{Af{b}}}}{{{f{B@f}}M`{f{Bh{Dd{Hn}}}}}{{Af{b}}}}{{{f{B@h}}M`{f{Bh{Dd{Hn}}}}}{{Af{b}}}}{{{f{AOf}}M`{f{Bh{Dd{Hn}}}}}{{Af{b}}}}{{{f{AJb}}M`{f{Bh{Dd{Hn}}}}}{{Af{b}}}}{{{f{AJd}}M`{f{Bh{Dd{Hn}}}}}{{Af{b}}}}{{{f{Mh}}M`{f{Bh{Dd{Hn}}}}}{{Af{b}}}}{{{f{Eb}}M`{f{Bh{Dd{Hn}}}}}{{Af{b}}}}{{{f{AIj}}M`{f{Bh{Dd{Hn}}}}}{{Af{b}}}}{{{f{{AD`{c}}}}M`{f{Bh{Dd{Hn}}}}}{{Af{b}}}Hj}{ce{}{}}0000000000000000000000000000000000{Elc{}}0{El{{B@j{ce}}}{}{}}{{{f{{Dd{Mn}}}}e}c{}{{N`{{f{Dn}}}{{C`{c}}}}}}{{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}{An{Gh}}}{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}}Of{AKb{AKd{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Df}}}H`}{{{f{Dj}}{f{{l{c}}}}e}DjBn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}```````````{{{f{c}}h}b{}}{{{f{AKf}}}d}{{AKfd}AKf}{{{f{BhB@l}}{An{{f{Bf}}}}}b}{{{f{BhAKf}}{f{AKf}}}{{Af{b}}}}{{{f{BhB@l}}}b}{{{f{BhB@l}}{f{Bf}}}b}{{{f{AKf}}Dl}Dn}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{AKf}}{f{AKf}}c}{{Af{AKf}}}AKh}{{{f{AKf}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{AKf}}}AKf}{{{f{c}}{f{Bhe}}}b{}{}}{{}B@n}{El{{f{c}}}{}}000{El{{f{Bhc}}}{}}000{{B@lc}AKf{{Gb{}{{B`{{An{{f{Bf}}}}}}}}}}{Elb}000{{{f{AKf}}}{{f{Df}}}}{{{f{AKf}}{f{Bf}}}c{}}{{{f{AKf}}{f{AKf}}}c{}}{{{f{AKf}}{f{Mh}}}c{}}201{{AKh{f{AN`}}{f{AN`}}}{{Af{AN`}}}}{B@lAKf}{B@n{{K`{BA`}}}}{cc{}}000{{AN`{K`{BA`}}dBAb}AKf}{{AN`BAb}AKf}{{{f{Mh}}{f{AMn}}BAb}{{Af{AKf}}}}{{{f{Bf}}dElBAb}AKf}{{{f{AKf}}El}{{Af{H`}}}}{{{f{AKf}}El}H`}{{{f{AKf}}}{{f{{K`{BA`}}}}}}<=;=;<{{}El}000{ce{}{}}0000{AKfAd}{{{f{AKf}}}d}0{{{f{AKf}}}BAd}{{{f{AKf}}}El}{{{f{AKf}}{f{AKf}}}c{}}{{{f{AKf}}{f{Mh}}}c{}}{{{f{AKf}}{f{Bf}}}c{}}210{{{f{AKf}}{f{AKf}}}{{Af{{Gj{AKfAKf}}}}}}{{DjDj}{{Af{{Gj{DjDj}}}}}}{{{f{AKf}}}Jl}{{{f{BhB@n}}{f{{K`{BA`}}}}}{{Af{b}}}}1{{{f{AKf}}}{{Af{El}}}}{{{f{AKf}}}{{f{Bf}}}}{{{f{Bf}}ElBAb}B@l}{{{K`{BA`}}}B@n}{{{f{BhBAd}}}{{An{c}}}{}};:99;:<{{{f{AKf}}}{{f{AN`}}}}{{{f{BhB@l}}{f{Bf}}}{{Gj{L`d}}}}`{{{f{BAd}}}{{Gj{El{An{El}}}}}}{{{f{AKf}}d}AKf}{{{f{AKf}}Dl}AKf}`{{{f{AKf}}dd}En}{{{f{AKf}}{f{AMn}}BAf}AKf}{{{f{AKf}}}{{Af{AKf}}}}{{{f{AKf}}}AKf}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0000000{{{f{c}}}Ml{}}0004{{{f{AKf}}}d}{{{f{AKf}}}{{Af{BAh}}}}{ce{}{}}000``````{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{AMnBA`}{{{f{BAb}}}BAb}{{{f{BA`}}}BA`}{{{f{c}}{f{Bhe}}}b{}{}}0{{}BAb}{{}BA`}{El{{f{c}}}{}}0{El{{f{Bhc}}}{}}0{Elb}0{{{f{BAb}}{f{BAb}}}d}{{{f{BA`}}{f{Bf}}}{{An{L`}}}}{{{f{BAb}}{f{BhFj}}}Fl}{{{f{BA`}}{f{BhFj}}}Fl}{cc{}}0{{{f{BA`}}L`}{{f{Bf}}}}{{{f{BA`}}}{{f{AMn}}}}{{{f{BA`}}L`}{{An{{f{Bf}}}}}}{{}El}0{ce{}{}}0{{{f{BA`}}}d}0{{{f{BA`}}}El}{{{f{BA`}}{f{BA`}}}d}{{{f{c}}}e{}{}}0{c{{Gd{e}}}{}{}}000{{{f{c}}}Ml{}}066`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}BAj}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{{}b}{{{f{BhBAj}}}b}{Elb}2{cc{}}6{{}El}{ce{}{}}<<;{{}d}1```````660````````````````````````{{{f{BAl}}}{{f{Bf}}}}<<;;`99{{{f{BAl}}}f}9966`{{{f{BAn}}{f{BhFj}}}{{Gd{bANb}}}}{{{f{BAl}}{f{BhFj}}}{{Gd{bANb}}}}077{cBAl{{ANf{{AJ`{Bf}}}}}}{{}{{Jd{{f{Bf}}BAn}{{C`{b}}}}}}8877{cAInAHl}````{{{Jd{{f{Bf}}BAn}{{C`{b}}}}}b}{cAInBB`}{{{f{c}}}Dh{}}{c{{Gd{e}}}{}{}}000{{{f{c}}}Ml{}}0==``````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BBb}}}BBb}{{{f{c}}{f{Bhe}}}b{}{}}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{BhFj}}BBdEl}Fl}{cc{}}{{}BBf}{{}BBb}{{}{{An{El}}}}{{}Dh}{{}d}{{}El}{ce{}{}}{{{An{BBf}}}b}{BBbb}{{{An{El}}}b}2{{{An{d}}}b}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}7```````````{{{f{c}}h}b{}}00{{{f{BhBAh}}{F`{Ad}}{f{BBh}}}{{Af{b}}}}{{{f{BAh}}{f{Cb}}}{{F`{Ad}}}}0{{{f{BAh}}{f{Fh}}}{{Af{BAh}}}}{{{f{BAh}}{f{{Dd{AO`}}}}}{{Af{BAh}}}}0{{{f{BAh}}J`El}BAh}{{BAh{f{Ad}}}c{}}{{{f{BAh}}{f{Ad}}}c{}}{{{f{BAh}}{f{BAh}}}c{}}{{{f{BhBAh}}}{{f{BhBAh}}}}{{{f{BhBAh}}{f{Bf}}e}{{Af{{f{BhBAh}}}}}BBj{{N`{{f{Ad}}}{{C`{c}}}}}}{{{f{BhBAh}}Ele}{{Af{{f{BhBAh}}}}}BBj{{N`{{f{Ad}}}{{C`{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000{{{f{BAh}}}{{`{{Bd{}{{B`{El}}}}}}}}{{{f{BAh}}}BAh}{{{f{BBl}}}BBl}{{{f{BBn}}}BBn}2{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{BAh}}{f{Bf}}}{{Af{{f{Ad}}}}}}{{{f{BAh}}e}{{Af{{F`{{f{Ad}}}}}}}{{Kf{Bf}}}{{Gb{}{{B`{c}}}}}}{{}BBn}{{}BAh}{El{{f{c}}}{}}0000{El{{f{Bhc}}}{}}0000{{BAh{f{Ad}}}c{}}{{{f{BAh}}{f{BAh}}}c{}}{{{f{BAh}}{f{Ad}}}c{}}{Elb}0000{{{f{BAh}}{f{Bf}}}{{Af{BAh}}}}{{{f{BhBAh}}{f{Bf}}}{{Af{Ad}}}}{{{f{BAh}}{f{{Dd{c}}}}}BAh{{Kf{Bf}}}}{{{f{BAh}}{f{{BC`{{f{Bf}}}}}}}BAh}{{{f{BAh}}{An{{f{{Dd{c}}}}}}}{{Af{BAh}}}{{Kf{Bf}}}}{{{f{BAh}}}{{F`{Df}}}}<{{{f{BBn}}{f{BBn}}}d}{{{f{BAh}}{f{BAh}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{BAh}}}El}`{{{f{BAh}}e}{{Af{BAh}}}{{Kf{Bf}}}{{Gb{}{{B`{c}}}}}}{{{f{BAh}}{F`{Ad}}}{{Af{BAh}}}}{{{f{BhBAh}}{f{BAh}}}{{Af{b}}}}{{{f{BAh}}}{{F`{Lb}}}}{{{f{BAh}}AEf}{{Af{BAh}}}}{{{f{BAh}}{f{Fh}}}{{Af{BAh}}}}{{{f{BBl}}{f{BhFj}}}Fl}{{{f{BBn}}{f{BhFj}}}Fl}{{{f{BAh}}{f{BhFj}}}Fl}0{cc{}}000{{{f{BCb}}}BAh}{{{f{BBh}}}BAh}2{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{cBAh{{Gb{}{{B`{Ad}}}}}}{{{f{{Dd{BCd}}}}}{{Af{BAh}}}}{{{f{{Dd{BCd}}}}{f{BBh}}}{{Af{BAh}}}}{{c{f{BBh}}}{{Af{BAh}}}{{Bd{}{{B`{{f{BCd}}}}}}}}{{{f{BAh}}El}{{An{{F`{H`}}}}}}{{{f{BAh}}{f{Bf}}}{{An{El}}}}{{{f{BAh}}}{{F`{{f{Bf}}}}}}{{{f{BAh}}}{{F`{AO`}}}}{{{f{BAh}}}{{f{{Dd{Ad}}}}}}{{{f{BhBAh}}}{{f{Bh{F`{Ad}}}}}}{{{f{BAh}}El}{{Af{BCd}}}}{{{f{BAh}}El{f{BhBCd}}}{{Af{b}}}}{{{f{BAh}}El{f{BhBCd}}}b}{{{f{BAh}}}{{An{{Af{Df}}}}}}`{{{f{BAh}}e}{{Af{BCf}}}{{Kf{Bf}}}{{Gb{}{{B`{c}}}}}}0{{{f{BAh}}{F`{Ad}}dd}{{Af{BCf}}}}{{{f{BBn}}{f{Bhc}}}bAA`}{{{f{BhBAh}}{An{M`}}}{{Af{B@`}}}}{{{f{BAh}}{An{El}}}BAh}{{{f{BAh}}}El}{{{f{BAh}}{f{{Dd{Ad}}}}}{{Af{BAh}}}}{{{f{BhBAh}}{f{{Dd{Ad}}}}}{{Af{{f{BhBAh}}}}}}{{{f{BhBAh}}{f{{Dd{Ad}}}}}{{f{BhBAh}}}}{{{f{BAh}}{f{Bf}}}{{f{c}}}{}}{{{f{BAh}}{BCh{El}}}{{f{c}}}{}}{{{f{BAh}}{BCj{El}}}{{f{c}}}{}}{{{f{BAh}}{Kh{El}}}{{f{c}}}{}}{{{f{BAh}}El}{{f{c}}}{}}{{{f{BAh}}{BCl{El}}}{{f{c}}}{}}{{{f{BAh}}BCn}{{f{c}}}{}}{{{f{BAh}}{BD`{El}}}{{f{c}}}{}}{{}El}0000{{{f{BhBAh}}Elc}{{Af{{f{BhBAh}}}}}BBj}{ce{}{}}000000{{{f{BAh}}}{{Af{Fh}}}}{{{f{BAh}}}d}1{{{f{BAh}}}{{Jb{Ad}}}}{{{f{BAh}}}{{`{{Bd{}{{B`{BAh}}}}}}}}{{{f{BAh}}d}BDb}{{{f{BAh}}}BDd}{{{f{BAh}}}El}{{{f{BAh}}}{{Af{{An{Ad}}}}}}{{{f{BAh}}BBl}{{Af{{An{Ad}}}}}}{{{f{BAh}}ce}{{Af{BAh}}}{{BDf{AO`}}}{{BDf{AO`}}}}{{{f{BAh}}BDh}{{Af{BAh}}}}3{{{f{BAh}}{f{BAh}}}c{}}{{BAh{f{Ad}}}c{}}{{{f{BAh}}{f{Ad}}}c{}}77{{{F`{c}}}{{Af{BAh}}}BBj}{{{F`{Ad}}}BAh}{{{F`{Ad}}}{{Af{BAh}}}}{{{f{BhBDb}}}{{An{c}}}{}}{{{f{BhBDd}}}{{An{c}}}{}}{{{f{BAh}}}BAh}{{{f{BAh}}cd}{{Af{{F`{BAh}}}}}{{BDf{Dh}}}}0{{BAhe}{{Af{c}}}{}{{Cb{BAh}{{C`{{Af{c}}}}}}}}{{{f{BhBAh}}e}{{Af{c}}}{}{{Cb{{f{BhBAh}}}{{C`{{Af{c}}}}}}}}{{BAhgc}{{Af{e}}}{}{}{{Cb{BAhc}{{C`{{Af{e}}}}}}}}{{{f{BhBAh}}}{{An{Ad}}}}{{{f{BAh}}{f{BAh}}}d}=><{{{f{BhBAh}}{f{Bf}}{f{Bf}}}{{Af{{f{BhBAh}}}}}}{{{f{BhBAh}}{f{Bf}}c}{{Af{{f{BhBAh}}}}}BBj}{{{f{BhBAh}}Elc}{{Af{{f{BhBAh}}}}}BBj}19`{{{f{BAh}}{f{Ad}}dd{An{Hn}}}{{Af{BAh}}}}0{{{f{BAh}}Eldd{An{Hn}}}{{Af{BAh}}}}{{{f{BAh}}}BBh}{{{f{BAh}}{f{BAh}}}{{Af{b}}}}{{{f{BAh}}e}{{Af{BAh}}}{{Kf{Bf}}}{{Gb{}{{B`{c}}}}}}{{{f{BAh}}El}{{An{{f{Ad}}}}}}{{{f{BAh}}c}{{Af{BAh}}}{{BDj{El}}}}2{{{f{BAh}}c}{{Af{{F`{Ad}}}}}{{BDf{AO`}}}}{{{f{BAh}}e{f{BDl}}}{{Af{BAh}}}{{Kf{Bf}}}{{Gb{}{{B`{c}}}}}}{{{f{BAh}}e{f{BBh}}}{{Af{BAh}}}{{Kf{Bf}}}{{Gb{}{{B`{c}}}}}}{{{f{BhBAh}}{f{{Dd{c}}}}}{{Af{b}}}{{Kf{Bf}}}}{{{f{BAh}}}{{Gj{ElEl}}}}{{{f{BAh}}J`}BAh}{{{f{BAh}}}d}{{{f{BhBAh}}}b}{{{f{BDb}}}{{Gj{El{An{El}}}}}}{{{f{BDd}}}{{Gj{El{An{El}}}}}}{{{f{BAh}}J`El}BAh}00{{{f{BAh}}cE`}{{Af{BAh}}}{{BDf{AO`}}}}{{{f{BhBAh}}cE`}{{Af{{f{BhBAh}}}}}{{BDf{AO`}}}}{{{f{BAh}}J`}{{Gj{BAhBAh}}}}0{{{f{BhBAh}}}{{`{{Bd{}{{B`{BAh}}}}}}}}{{BAhEld}{{F`{BAh}}}}{{BAh{f{Ad}}}c{}}{{{f{BAh}}{f{Ad}}}c{}}{{{f{BAh}}{f{BAh}}}c{}}{{{f{BAh}}BBl}{{Af{{An{Ad}}}}}}{{{f{BAh}}{An{El}}}BAh}{{{f{BAh}}{f{Dn}}}{{Af{BAh}}}}{{{f{BAh}}{f{Dn}}}BAh}{{{f{BAh}}{f{Dn}}d}BAh}{{{f{BAh}}BDn}{{Af{Md}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Dh{}}{{{f{BAh}}ElcE`}{{Af{BAh}}}{{BDf{AO`}}}}{{{f{BhBAh}}{An{{f{Bf}}}}{An{{Mj{Dh{F`{Dh}}}}}}}{{Af{BAh}}}}{{{f{BhBAh}}{f{Bf}}e}{{Af{{f{BhBAh}}}}}BBj{{N`{{f{Ad}}}{{C`{{Af{c}}}}}}}}{{{f{BhBAh}}Ele}{{Af{{f{BhBAh}}}}}BBj{{N`{{f{Ad}}}{{C`{{Af{c}}}}}}}}{c{{Gd{e}}}{}{}}000{BE`{{Af{BAh}}}}1{{{Gj{BEb{f{{Dd{ANh}}}}}}}{{Af{BAh}}}}{{c{f{BBh}}}{{Af{BAh}}}{{Bd{}{{B`{{Af{{f{BCd}}}}}}}}}}{{{f{BAh}}{f{Bf}}}{{Af{El}}}}44444{{{f{c}}}Ml{}}0000{{{f{BAh}}{An{{f{{Dd{Dh}}}}}}BBn{An{{Gj{J`El}}}}}{{Af{BAh}}}}{{{f{BAh}}d{An{{f{{Dd{Dh}}}}}}BBn{An{{Gj{J`El}}}}}{{Af{BAh}}}}1{{{f{BAh}}{f{BAh}}}{{Af{BAh}}}}{{{f{BhBAh}}{f{BAh}}}{{Af{{f{BhBAh}}}}}}{ce{}{}}0000{{{f{BAh}}}El}{{{f{BhBAh}}c}{{Af{{f{BhBAh}}}}}BBj}{{{f{BhBAh}}c{f{BBh}}}{{Af{{f{BhBAh}}}}}BBj}{{{f{BhBAh}}Ad}{{f{BhBAh}}}}{{{f{BAh}}{f{Bf}}{An{Hb}}}{{Af{BAh}}}}{{{f{BhBAh}}{f{Bf}}{An{Hb}}}{{f{BhBAh}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BDh}}}BDh}{{{f{c}}{f{Bhe}}}b{}{}}{{}BDh}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{BDh}}{f{BDh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BDh}}{f{BhFj}}}Fl}{cc{}}{{{f{BDh}}{f{Bhc}}}bAA`}`{{}El}{ce{}{}}`{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}```3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BCf}}}{{Af{BAh}}}}`{{{f{BEd}}}{{f{{Dd{BEf}}}}}}{{{f{BCf}}c}{{Af{BAh}}}{{Ch{BAh}{{C`{{Af{BAh}}}}}}IdIf}}{{{f{Aj}}}Dj}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000{{{f{BEd}}}BEd}{{{f{Aj}}}Aj}{{{f{BCf}}}BCf}{{{f{BEh}}}BEh}{{{f{c}}{f{Bhe}}}b{}{}}000:{{}BEd}{{}Aj}{El{{f{c}}}{}}00{{{f{BEj}}}{{f{c}}}{}}11111{El{{f{Bhc}}}{}}0000000`{{BEle}{}{}{{BEn{c}}}}{Elb}0000{{{f{BhBEd}}}b}111{{{f{BEd}}{f{BEd}}}d}{{{f{Aj}}{f{Aj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BF`}}}Hb}{{{f{BEd}}}{{f{{Dd{Hb}}}}}}{{{f{BCf}}}{{Af{BAh}}}}{{{f{BhBEd}}}{{f{Bh{F`{Hb}}}}}}{{{f{BEd}}{f{BhFj}}}Fl}{{{f{Aj}}{f{BhFj}}}Fl}{{{f{BCf}}{f{BhFj}}}Fl}{{{f{BEh}}{f{BhFj}}}Fl}0{{{f{Bf}}BEh}Dh}{cc{}}000{{{F`{BFb}}}BEd}1{{{F`{{F`{BFb}}}}}BEd}{{{F`{{Gj{{F`{Hb}}{F`{BEf}}}}}}}BEd}{BEdAj}444{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{cBEd{{Gb{}{{B`{BFb}}}}}}{cBEd{{Gl{}{{B`{BFb}}}}}}{{{f{Aj}}El}BF`}{{{f{BCf}}}{{f{Aj}}}}{{{f{BhBCf}}}{{f{BhAj}}}}{{{f{Aj}}}Dn}{{{f{BFd}}dd}{{Af{Aj}}}}0{{{f{BCf}}}{{Af{BAh}}}}{{{f{BhAj}}}{{f{BhBEd}}}}{{}El}0000000{ce{}{}}0000000{AjBEd}1{{{f{BEd}}}c{}}{BEdc{}}301{{{f{BF`}}}d}{{{f{Aj}}}d}{{{f{BEd}}}d}{{{f{BEd}}}{{BFh{{BFf{{Jb{Hb}}}}{Jb{BEf}}}}}}{{{f{Aj}}}BFj}{{{f{BCf}}}{{F`{Ad}}}}{{{f{BCf}}{An{{Gj{J`El}}}}}{{F`{Ad}}}}={{{f{BF`}}}El}{{{f{Aj}}}El}?????{{{F`{Hb}}{F`{BEf}}d}BEd}{{{f{BAh}}{F`{Ad}}Aj{An{{F`{Dh}}}}}BCf}{{{f{BhBFj}}}{{An{c}}}{}}{{{f{BhBFj}}El}{{An{c}}}{}}{{{f{BCf}}c}{{Af{BAh}}}{{Cb{BAh}{{C`{{Af{BAh}}}}}}IdIf}}{{{f{c}}}{}{}}{{{f{Aj}}}BEl}{{{f{BCf}}JnLh}{{Af{BAh}}}}{{BCfe}BCf{{Kf{Bf}}}{{Gb{}{{B`{c}}}}}}{{{f{Aj}}J`El}BEj}{{{f{BhBEd}}}b}{{{f{BhAj}}}b}{{{f{BCf}}Db}{{Af{BAh}}}}{{{f{BCf}}}{{Af{BAh}}}}{Aj{{F`{Hb}}}}0{BCfAj}{{{f{BhBCf}}}Aj}{{{f{c}}}e{}{}}000{{{f{c}}}Dh{}}{c{{Gd{e}}}{}{}}000000000000000{{{f{c}}}Ml{}}0000000{AjAj}{{{f{Aj}}}{{f{BEd}}}}{{{f{Aj}}}{{f{BFl}}}};{ce{}{}}0000000`````{{{f{BEd}}c}Ad{{Cb{{Gj{Hb{f{BEf}}}}}{{C`{An}}}}IdIf}}{{{f{BEd}}c}Ad{{Cb{{Gj{Hb{f{BEf}}}}}{{C`{}}}}IdIf}}{{{f{{Dd{{BFn{Hb}}}}}}c}Ad{{Cb{{BFn{Hb}}}{{C`{An}}}}IdIf}}{{{f{{Dd{{BFn{Hb}}}}}}c}Ad{{Cb{{BFn{Hb}}}{{C`{}}}}IdIf}}{{{f{{Dd{c}}}}eBG`}{{AI`{c}}}{BGbBGd}{{Bd{}{{B`{{Gj{HbHb}}}}}}Gn}}{{{f{{Dd{c}}}}{f{Gh}}eBG`}{{AI`{c}}}{BGbBGd}{{Bd{}{{B`{{Gj{HbHb}}}}}}Gn}}{{{f{{l{c}}}}HbHb}{{l{c}}}Bn}{{{f{BFl}}{f{{Dd{En}}}}}d}{{{f{BGf}}{f{Aj}}}Ad}{{BGhBGh}BGh}0`{{{f{BGj}}{f{BAh}}{f{Aj}}}{{Af{Ad}}}}{{{f{BGj}}}{{Af{{f{Bf}}}}}}```````````````````````{{{f{c}}h}b{}}00{{{f{BhBGl}}H`}{{An{b}}}}{{{f{BhBGn}}{f{H`}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{BGl}}}BGl}{{{f{BGn}}}BGn}{{{f{BCd}}}BCd}{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{{Dd{c}}}}}Df{{ANn{Df}}}}{{}BCd}{El{{f{c}}}{}}00{El{{f{Bhc}}}{}}00{Elb}00{{{f{BCd}}{f{BCd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCd}}{f{BhFj}}}Fl}{cc{}}{{{Gj{{f{Df}}El}}}BGl}{{{Gj{{f{Df}}El}}}BGn}22{{eEl}BBh{{ANf{Df}}}{{Bd{}{{B`{{F`{{Gj{Dhc}}}}}}}}}}{{}El}00{ce{}{}}00{BGlAd}{BGnAd}{{{f{Df}}El}BGl}{{{f{Df}}El}BGn}{{{F`{H`}}}BCd}{{{f{BhBGl}}El}Ad}{{{f{BhBGn}}El}Ad}{{{f{{Dd{BCd}}}}{An{El}}}{{Af{BBh}}}}0{{{f{{Dd{BCd}}}}{An{El}}}{{Af{{F`{Df}}}}}}{{{f{c}}}e{}{}}00{c{{Gd{e}}}{}{}}00000{{{f{c}}}Ml{}}00<<<{{{f{{Dd{BAh}}}}}{{Af{BAh}}}}0`````{{HnHn}Hn}{{{f{{Dd{BAh}}}}{An{M`}}}{{Af{{Gj{{F`{B@`}}M`}}}}}}{{{f{{BH`{J`}}}}M`{f{Bh{F`{Hn}}}}}b}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{}BHb}{El{{f{c}}}{}}0{El{{f{Bhc}}}{}}0{Elb}0{{{f{BHb}}}Hn}{{{f{BHd}}{f{BhFj}}}Fl}{cc{}}0{{{f{BHd}}{f{Bhc}}}bAA`}``{{}El}0{ce{}{}}0{{{f{Bh{BHf{BHdce}}}}HbHn{f{BAh}}gi}b{}BHh{{Cb{}{{C`{c}}}}}{{Ch{{f{Bhc}}}}}}{c{{Gd{e}}}{}{}}000{{{f{c}}}Ml{}}0{{{f{BHj}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}0{{{f{BHj}}M`{f{Bh{Dd{Hn}}}}}{{Af{b}}}}055{{{f{BhBHb}}{f{{Dd{Db}}}}}b}{{{f{BhBHb}}Kd}b}{{{f{BhBHb}}J`}b}{{{f{BhBHb}}L`}b}{{{f{BhBHb}}Hn}b}```````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000{{{f{{K`{ce}}}}}{{f{e}}}{}BHl}{{{f{{K`{c}}}}}BHn{BI`Ll}}{{{f{{K`{ce}}}}}{}LlBHl}{{{f{{K`{c}}}}}KdBIb}{{{f{{K`{ce}}}}}{{f{c}}}LlBHl}{{{K`{{BId{c}}e}}}{{K`{ce}}}{}BHl}{{{K`{{Dd{{BId{c}}}}e}}}{{K`{{Dd{c}}e}}}{}BHl}{{{f{c}}}{{f{e}}}{}{}}0030000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000000000{{{f{AKf}}{f{AKf}}c}{{Af{AKf}}}AKh}{{{f{{K`{c}}}}}{{An{{f{AHl}}}}}{AHlLl}}`{{{f{BIf}}{f{Ad}}}{{Af{Ad}}}}{{{f{BIf}}c}{{Af{Ad}}}Ab}{{{f{Mn}}}Mn}{{{f{BIh}}}BIh}{{{f{{K`{ce}}}}}{{K`{ce}}}Ll{BHlOf}}{{{f{Lj}}}Lj}{{{f{BDn}}}BDn}{{{f{ANh}}}ANh}{{{f{BCb}}}BCb}{{{f{Lh}}}Lh}{{{f{BIj}}}BIj}{{{f{BIl}}}BIl}{{{f{BIn}}}BIn}{{{f{c}}{f{Bhe}}}b{}{}}0000000000{{{f{{K`{ce}}}}{f{{K`{ce}}}}}AOh{BJ`Ll}BHl}{AMle{}{{AJf{c}}AHh}}0{{AMlACb}e{}{{AJh{c}}AHh}}0{{{f{c}}{f{e}}}AOh{}{}}{{AInBAl}AIn}{AInAIn}{{{f{Fn}}{f{ACb}}}{{A@n{Fn}}}}{{{f{ANh}}}{{f{ACb}}}}```{{}b}{cbBHl}{{}{{K`{Bf}}}}{{}{{K`{c}}}BJb}{{}{{K`{{Dd{c}}}}}{}}{{}{{K`{BJd}}}}{{}Lj}{{}BDn}{{}ANh}{{}BCb}{{}Lh}`{El{{f{c}}}{}}000{{{f{{K`{ce}}}}}{{f{c}}}LlBHl}111111111{El{{f{Bhc}}}{}}000000000000{{{f{{K`{c}}}}}{{f{Bf}}}{AHlLl}}`{{{K`{ACdc}}}{{Gd{{K`{ec}}{K`{ACdc}}}}}BHl{ACdIdIf}}{{{K`{ACdc}}}{{K`{ec}}}BHl{ACdIdIf}}{{{f{{K`{ce}}}}}{{BJf{ce}}}Ll{OfBHl}}{Elb}000{{{f{Bh{K`{ce}}}}}bLlBHl}111111111{{{f{Mn}}{f{Mn}}}d}{{{f{{K`{ce}}}}{f{{K`{ce}}}}}d{BJhLl}BHl}{{{f{{K`{BJj}}}}{f{BJj}}}d}{{{f{{K`{Fn}}}}{f{Fn}}}d}{{{f{Lj}}{f{Lj}}}d}{{{f{BDn}}{f{BDn}}}d}{{{f{ANh}}{f{ANh}}}d}{{{f{BCb}}{f{BCb}}}d}{{{f{Lh}}{f{Lh}}}d}{{{f{BIn}}{f{BIn}}}d}{{{f{c}}{f{e}}}d{}{}}00000000000000000000{BIh{{Gj{L`L`}}}}`{{BCbc}BCb{{Cb{El{f{ANh}}}{{C`{d}}}}}}{{AKh{f{AN`}}{f{AN`}}}{{Af{AN`}}}}{{{f{Bh{K`{ABj}}}}}{{Gd{bBJl}}}}{{{f{AIn}}{f{BhFj}}}{{Gd{bANb}}}}0{{{f{Mn}}{f{BhFj}}}{{Gd{bANb}}}}{{{f{BIh}}{f{BhFj}}}{{Gd{bANb}}}}{{{f{{K`{ce}}}}{f{BhFj}}}{{Gd{bANb}}}LlBHl}{{{f{{K`{ce}}}}{f{BhFj}}}{{Gd{bANb}}}{BB`Ll}BHl}{{{f{{K`{ce}}}}{f{BhFj}}}{{Gd{bANb}}}{ACfLl}BHl}{{{f{Lj}}{f{BhFj}}}Fl}{{{f{BDn}}{f{BhFj}}}Fl}{{{f{ANh}}{f{BhFj}}}{{Gd{bANb}}}}{{{f{BCb}}{f{BhFj}}}{{Gd{bANb}}}}{{{f{Lh}}{f{BhFj}}}{{Gd{bANb}}}}{{{f{BIj}}{f{BhFj}}}{{Gd{bANb}}}}{{{f{BIl}}{f{BhFj}}}{{Gd{bANb}}}}{{{f{BIn}}{f{BhFj}}}{{Gd{bANb}}}}`{cc{}}{BJnAIn}{BK`AIn}{BKbAIn}{BJlAIn}4{L`Mn}5{{{BFn{c}}}{{K`{{Dd{c}}}}}{}}{{{AJ`{c}}}{{K`{c}}}{BKdLl}}{{{f{BJd}}}{{K`{BJd}}}}{BKf{{K`{BKh}}}}{{{f{Bf}}}{{K`{Bf}}}}{{{F`{ce}}}{{K`{{Dd{c}}e}}}{}{BHlOf}}{Dh{{K`{Bf}}}}{{{f{{Dd{c}}}}}{{K`{{Dd{c}}}}}Of}{c{{K`{c}}}{}}{BKj{{K`{BJd}}}}?{{{K`{Bf}}}{{K`{{Dd{Db}}}}}}{{{f{BKh}}}{{K`{BKh}}}}{{{f{BKl}}}{{K`{BKl}}}}{BKnc{}}{BL`{{K`{BKl}}}}{{{A@n{ce}}}{{K`{ce}}}LlBHl}{cc{}}0000{{{F`{ANh}}}BCb}1111{{c{An{Gh}}}BLb{}}{{{BLd{J`}}{BLd{Db}}{An{Gh}}}BLf}{{{BLd{J`}}{BLd{Db}}{An{Gh}}}BLh}{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{e{{K`{{Dd{c}}}}}{}{{Gb{}{{B`{c}}}}}}{{gEl}{{BLj{J`}}}Kf{{Gb{}{{B`{{An{c}}}}}}}{{Gb{}{{B`{{An{e}}}}}}}}0{e{{BLj{J`}}}{{Gb{}{{B`{{An{d}}}}}}}{{Gb{}{{B`{{An{c}}}}}}}}{{gACb}{{BLj{J`}}}BGd{{Gb{}{{B`{{An{c}}}}}}}{{Gb{}{{B`{{An{e}}}}}}}}2{e{{K`{{Dd{c}}}}}Id{{Gl{}{{B`{c}}}}}}{{}{{K`{c}}}Ll}{c{{K`{ec}}}BHlLl}{{{f{Bf}}}{{Gd{BLl}}}}{{{f{Bf}}c}BLn{}}{{{f{{K`{ce}}}}{f{{K`{ce}}}}}d{BM`Ll}BHl}{{{f{Bh{K`{ce}}}}}{{An{{f{Bhc}}}}}LlBHl}{{{f{Bh{K`{ce}}}}}{{f{Bhc}}}LlBHl}{{{f{BCb}}}{{F`{{f{Bf}}}}}}{{{f{En}}El}H`}4{{{f{BMb}}}d}{{{f{{K`{ce}}}}{f{Bhg}}}b{BMdLl}BHlAA`}{{{f{BDn}}{f{Bhc}}}bAA`}{{{f{ANh}}{f{Bhc}}}bAA`}{{{f{Lh}}{f{Bhc}}}bAA`}{{{f{BIn}}{f{Bhc}}}bAA`}{{{f{Mn}}}L`}{{}b}{cb{OfBHl}}{{{f{BCb}}{f{Bf}}}{{An{El}}}}{{{f{{Dd{L`}}}}}{{`{{Bd{}{{B`{El}}}}}}}}{{}El}000000000000`{{{f{BhBIh}}}{{f{BhHn}}}}`{ce{}{}}000000000000{{{K`{ce}}}{{An{c}}}{}BHl}{{{K`{ce}}}{}LlBHl}{{{K`{ce}}}{{Gj{e}}}LlBHl}{{{K`{BMf}}}Ad}{{{f{BCb}}}d}{{{f{BIh}}}d}{{{f{Mn}}}d}`{{{f{{K`{ABj}}}}}d}{{{f{c}}}d{}}1{{{f{{K`{ce}}}}{f{{K`{ce}}}}}d{BM`Ll}BHl}{{{f{BCb}}}El}`1{{{f{AKf}}{f{AKf}}}{{Af{{Gj{AKfAKf}}}}}}{{DjDj}{{Af{{Gj{DjDj}}}}}}{{{f{Bh{K`{ce}}}}}{{f{Bhc}}}Of{BHlOf}}{{{f{BMh}}}Jl}0{{{f{BMj}}}Jl}```11`{{{f{{K`{ce}}}}{f{{K`{ce}}}}}d{BJhLl}BHl}{{BMlEl}{{An{El}}}}{{{f{Bf}}c}BMn{}}{c{{K`{c}}}{}}{{cACbd}ANh{{ANf{Dh}}}}{e{{K`{c}}}{}{{N`{{f{{BJf{c}}}}}{{C`{c}}}}}}{{ce}{{K`{ce}}}{}BHl}{{}{{K`{{BId{c}}}}}{}}{c{{K`{{BId{e}}c}}}BHl{}}{El{{K`{{Dd{{BId{c}}}}}}}{}}{{Elc}{{K`{{Dd{{BId{e}}}}c}}}BHl{}}3210`{{}Mn}{{}BIh}{{{f{{K`{ce}}}}{f{{K`{ce}}}}}{{An{AOh}}}{BM`Ll}BHl}{c{{BN`{{K`{c}}}}}{}}{{ce}{{BN`{{K`{ce}}}}}{}BHl}`````{{{f{BMh}}}Jl}0{{{f{{K`{c}}}}{f{BhBNb}}}b{AHlLl}}{{{f{{K`{ce}}}}{f{{K`{ce}}}}}dLlBHl}{{{f{BMj}}JnLh}{{Af{Jl}}}}{{{f{Bh{K`{ABj}}}}{f{Bh{Dd{Db}}}}}{{Gd{ElBJl}}}}{{{f{Bh{K`{ABj}}}}BNd}{{Gd{bBJl}}}}{{{f{Bh{K`{ABj}}}}{f{Bh{F`{Db}}}}}{{Gd{ElBJl}}}}{{{f{Bh{K`{ABj}}}}{f{BhDh}}}{{Gd{ElBJl}}}}{{{f{Bh{K`{ABj}}}}{f{Bh{Dd{BNf}}}}}{{Gd{ElBJl}}}}`{{{f{Bh{K`{ABj}}}}BNh}{{Gd{HnBJl}}}}`{{{f{AId}}ElEl}AId}0{{{f{{K`{c}}}}}{{An{{f{AHl}}}}}{AHlLl}}{{{f{BNj}}Db}Jl}{{L`L`}BIh}`{{{f{{K`{ce}}}}}ElLlBHl}>>{{{f{Mn}}}{{An{L`}}}}{{{f{c}}}e{}{}}0000000000{{{f{c}}}Dh{}}0{AMl{{Gd{eg}}}{}{{AJf{c}}AHh}{}}0{{AMlACb}{{Gd{eg}}}{}{{AJh{c}}AHh}{}}0{c{{Gd{e}}}{}{}}00{{{K`{{Dd{c}}e}}}{{Gd{{K`{{BFn{c}}e}}}}}{}BHl}11111111111111111111111{{BMlEl}{{Gd{ElAIn}}}}{c{{Gd{{K`{c}}BNl}}}{}}{{ce}{{Gd{{K`{ce}}BNl}}}{}BHl}{{}{{Gd{{K`{{BId{c}}}}BNl}}}{}}{c{{Gd{{K`{{BId{e}}c}}BNl}}}BHl{}}10{c{{Gd{{BN`{{K`{c}}}}BNl}}}{}}{{ce}{{Gd{{BN`{{K`{ce}}}}BNl}}}{}BHl}{{{K`{ce}}}{{Gd{c{K`{ce}}}}}{}BHl}{{{f{c}}}Ml{}}000000000000{{{K`{ce}}}cOfBHl}`{{{f{BNj}}Db}Jl}{ce{}{}}000000000000{{{f{{K`{ce}}}}}ElLlBHl}``{{ANh{BNn{DhDh}}}ANh}{{BCb{BNn{DhDh}}}BCb}{{{f{Bh{K`{ABj}}}}{f{{Dd{Db}}}}}{{Gd{ElBJl}}}}{{{f{Bh{K`{ABj}}}}{f{{Dd{BO`}}}}}{{Gd{ElBJl}}}}```````{{c{An{Gh}}}BLb{}}{{{BLd{J`}}{BLd{Db}}{An{Gh}}}BLf}{{{BLd{J`}}{BLd{Db}}{An{Gh}}}BLh}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{BOb{An{{f{ACb}}}}}{{Gd{{BLj{J`}}AIn}}}}{cc{}}{{}El}{ce{}{}}{{{f{BOb}}}d}{ElBOb}{{{f{BOb}}}{{f{{Dd{J`}}}}}}{{{f{BhBOb}}{f{Fn}}}b}{{{f{BhBOb}}}b}{{{f{BhBOb}}{f{{Dd{{A@n{Fn}}}}}}}b}1{{{f{BhBOb}}{An{{f{Fn}}}}}b}{BOb{{BOd{J`}}}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}:`{{{f{c}}h}b{}}{{{f{BOf}}}{{f{ACd}}}}{{{f{BhBOf}}}{{A@n{Fn}}}}{{{f{BhBOf}}}{{f{BhACd}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BOf}}}BOf}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{BOf}}}{{f{ACb}}}}{{}BOf}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{BhBOf}}El}b}{{{f{BOf}}{f{BhFj}}}{{Gd{bANb}}}}{cc{}}{{}El}{ce{}{}}{{{f{BOf}}}El}{ElBOf}{{{f{BhBOf}}}b}70{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}{{{f{BOf}}}{{An{{f{BOh}}}}}}7```````{{{f{AId}}ElEl}AId}0`{{}b}0{{}d}``{{eElEl}{{BOj{J`}}}{{Kf{Bf}}}{{Bd{}{{B`{c}}}}}}{{eElEl}{{BH`{J`}}}{{Kf{{Dd{Db}}}}}{{Bd{}{{B`{c}}}}}}{Hnb}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BBh}}}BBh}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{BBh}}{f{Bf}}}d}{{}BBh}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{BBh}}{f{BBh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BBh}}{f{BhFj}}}Fl}{{{f{BOl}}}BBh}{BCbBBh}{{{f{BCb}}}BBh}{cc{}}{{{f{{Dd{Ad}}}}}BBh}{{{f{BCd}}}BBh}{BOlBBh}{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{eBBh{{ANf{Lb}}}{{Gb{}{{B`{c}}}}}}{{{f{BBh}}{f{Bf}}}{{An{{f{Df}}}}}}{{{f{BBh}}El}{{An{{Gj{{f{AO`}}{f{Df}}}}}}}}{{{f{BhBBh}}El}{{An{{Gj{{f{BhAO`}}{f{BhDf}}}}}}}}{{{f{BBh}}{f{Bf}}}{{An{Lb}}}}{{{f{BBh}}{f{Bf}}}{{An{{Gj{El{f{AO`}}{f{Df}}}}}}}}{{{f{BOn}}}{{F`{{f{Bf}}}}}}{{{f{BBh}}}{{F`{{f{Bf}}}}}}{{{f{BBh}}{f{Bhc}}}bAA`}{{{f{BOn}}{f{Bf}}}{{An{El}}}}{{{f{BBh}}{f{Bf}}}{{An{El}}}}{{}El}{{{f{BhBBh}}ElAO`Df}{{Af{{An{Df}}}}}}{ce{}{}}{BBhc{}}{{{f{BBh}}}d}{{{f{BBh}}}{{`{{Bd{}{{B`{{Gj{{f{AO`}}{f{Df}}}}}}}}}}}}{{{f{BBh}}}{{`{{Ih{}{{B`{{f{Df}}}}}}}}}}{{{f{BhBBh}}}{{`{{Ih{}{{B`{{f{BhDf}}}}}}}}}}{{{f{BBh}}}{{`{{Ih{}{{B`{Lb}}}}}}}}{{{f{BBh}}}{{`{{Ih{}{{B`{{f{AO`}}}}}}}}}}{{{f{BBh}}}El}{{{f{BhBBh}}BBh}b}{{{f{BhBBh}}{f{BBh}}}b}{{}BBh}{{{f{BBh}}ElAO`Df}{{Af{BBh}}}}{{{f{BhBBh}}{f{Bf}}}{{An{Df}}}}{{{f{BhBBh}}{f{Bf}}AO`}{{An{AO`}}}}{{{f{BhBBh}}El}b}{{{f{BhBBh}}{f{Bf}}Df}{{An{Df}}}}{{{f{BhBBh}}ElDf}{{An{Df}}}}4{{{f{BhBBh}}El}{{An{{Gj{AO`Df}}}}}}{{{f{BBh}}d}BCb}{{{f{c}}}e{}{}}{{{f{BhBBh}}{f{BBh}}}{{Af{d}}}}{c{{Gd{e}}}{}{}}{{{f{BBh}}{f{Bf}}}{{Af{{f{Df}}}}}}{{{f{BBh}}El}{{Af{{Gj{{f{AO`}}{f{Df}}}}}}}}{{{f{BBh}}{f{Bf}}}{{Af{Lb}}}}{{{f{BBh}}{f{Bf}}}{{Af{{Gj{El{f{AO`}}{f{Df}}}}}}}}{{{f{BhBBh}}{f{Bf}}}{{Af{{f{BhDf}}}}}}{{{f{BOn}}{f{Bf}}}{{Af{El}}}}6{{{f{c}}}Ml{}}{ce{}{}}{ElBBh}{{{f{BhBBh}}AO`Df}{{An{Df}}}}``````````````{{{f{c}}h}b{}}0{{{f{Bf}}{F`{En}}{f{ACb}}}{{Af{Ad}}}}{{{f{Bf}}{F`{En}}{f{ACb}}{An{{f{C@`}}}}}{{Af{Ad}}}}{{{f{Ad}}{f{Ad}}}c{}}{{AdAd}c{}}{{{f{Ad}}c}e{A`Jj}{}}{{Adc}e{A`Jj}{}}`{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{BMf}}Dl}Dn}0{{{f{BMf}}}{{Af{Dn}}}}0`{{{f{Ad}}El}{{f{En}}}}{{{f{BMf}}}{{f{ACd}}}}{{{f{BhBMf}}}{{f{BhACd}}}}0{{{f{Ad}}}Dj}{{{f{BhBMf}}}{{f{Bh{l{c}}}}}Bn}{{{f{BMf}}}{{f{{l{c}}}}}Bn}{{{f{Ad}}}{{f{BMf}}}}{{{f{BhBMf}}}{{Af{El}}}}0{{{f{BhAd}}}{{Af{El}}}}{{{f{Ad}}}{{Af{{f{Eb}}}}}}{{{f{Ad}}}{{Af{{f{AIj}}}}}}{{{f{BMf}}{f{Ad}}}{{Af{Ad}}}}00000{{{f{Ad}}}{{Af{{f{Fh}}}}}}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{BMf}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ad}}{f{Df}}}{{Af{Ad}}}}0{{{f{Ad}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{AKf}}}}}}77{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ad}}c}{{Af{Ad}}}Ab}{{{f{BMf}}}Ej}{{{f{Ad}}}{{`{{Bd{}{{B`{El}}}}}}}}{{{f{BMf}}}{{f{{F`{En}}}}}}{{{f{BhBMf}}}{{f{Bh{F`{En}}}}}}{{{f{BhAd}}}{{f{Bh{F`{En}}}}}}{{{f{Ad}}}Ad}{{{f{Il}}}Il}1{{{f{BMf}}}{{K`{BMf}}}}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{BhAd}}}b}{{{f{Ad}}}{{Af{{f{Ib}}}}}}{{}Ad}{El{{f{c}}}{}}00{{{f{Ad}}}{{f{c}}}{}}{El{{f{Bhc}}}{}}00{{{f{Ad}}c}e{A`Jj}{}}{{Adc}e{A`Jj}{}}{{{f{Ad}}{f{Ad}}}c{}}{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}{{Af{Jn}}}}{Elb}00{{{f{BMf}}}Ad}0{{{f{BMf}}}{{f{Df}}}}0{{{f{Il}}{f{Il}}}d}{{{f{Ad}}{f{Ad}}}d}{{{f{Ad}}{f{Ad}}}{{Af{Fh}}}}{{{f{Ad}}c}{{Af{Fh}}}ANd}{{{f{Ad}}{f{Bf}}}{{Af{Fh}}}}{{{f{Ad}}c}eANd{}}{{{f{Ad}}{f{Bf}}}c{}}455{{{f{c}}{f{e}}}d{}{}}00{{{f{Ad}}}El}{{{f{Ad}}}{{Af{Ad}}}}{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{Ad}}H`El}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{AJb}}}}}}{{{f{Ad}}}{{Af{{f{AJd}}}}}}{{{f{BMf}}}{{AJ`{Lb}}}}0{{{f{Ad}}AEf}{{Af{Ad}}}}{{{f{BMf}}{f{Fh}}}{{Af{Ad}}}}{{{f{Il}}{f{BhFj}}}Fl}{{{f{Ad}}{f{BhFj}}}Fl}0{{{f{Ad}}}Dh}{cc{}}00{{{l{c}}}AdBn}{{{f{Bf}}{f{{Dd{H`}}}}d}{{Af{Ad}}}}{{{f{Bf}}{f{{Dd{H`}}}}{f{Df}}d}{{Af{Ad}}}}{{{f{Bf}}En}{{Af{Ad}}}}{{{f{Bf}}{F`{En}}}{{Af{Ad}}}}{{{f{Bf}}{F`{En}}{f{Df}}}Ad}{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{cAd{{Gb{}{{B`{{f{Kd}}}}}}}}{cAd{{Gb{}{{B`{{f{d}}}}}}}}{cAd{{Gb{}{{B`{L`}}}}}}{cAd{{Gb{}{{B`{{An{Hn}}}}}}}}{cAd{{Gb{}{{B`{Jn}}}}}}{cAd{{Gb{}{{B`{{An{Hl}}}}}}}}{cAd{{Gb{}{{B`{Dh}}}}}}{cAd{{Gb{}{{B`{{f{Jn}}}}}}}}{cAd{{Gb{}{{B`{{An{d}}}}}}}}{cAd{{Gb{}{{B`{{f{Hl}}}}}}}}{cAd{{Gb{}{{B`{{f{L`}}}}}}}}{cAd{{Gb{}{{B`{{An{J`}}}}}}}}{cAd{{Gb{}{{B`{{An{Kd}}}}}}}}{cAd{{Gb{}{{B`{d}}}}}}{cAd{{Gb{}{{B`{{f{J`}}}}}}}}{cAd{{Gb{}{{B`{{An{Jn}}}}}}}}{cAd{{Gb{}{{B`{Hl}}}}}}{cAd{{Gb{}{{B`{{An{L`}}}}}}}}{cAd{{Gb{}{{B`{{f{Bf}}}}}}}}{cAd{{Gb{}{{B`{J`}}}}}}{cAd{{Gb{}{{B`{Hn}}}}}}{cAd{{Gb{}{{B`{Kd}}}}}}{cAd{{Gb{}{{B`{{f{Hn}}}}}}}}{{{f{Bf}}{F`{Jn}}}Ad}{{{f{Bf}}{F`{J`}}}Ad}{{{f{Bf}}{F`{Kd}}}Ad}{{{f{Bf}}{F`{Hl}}}Ad}{{{f{Bf}}{F`{Hn}}}Ad}{{{f{Bf}}{F`{L`}}}Ad}{{{f{Bf}}El{f{Df}}}Ad}{{{f{Ad}}ElEl}Ad}{{{f{BMf}}El}{{Af{H`}}}}{{{f{Ad}}}El}{{{f{Ad}}}Hd}{{{f{Ad}}}Ad}{{{f{BMf}}}{{An{Jl}}}}000{{{f{BMf}}El}{{An{{f{Hh}}}}}}0{{{f{BMf}}ElEl}{{An{{f{Hh}}}}}}0{{{f{BMf}}El}H`}0{{{f{Ad}}c}{{Af{Fh}}}ANd}{{{f{Ad}}{f{Ad}}}{{Af{Fh}}}}{{{f{Ad}}{f{Bf}}}{{Af{Fh}}}}12{{{f{Ad}}{f{Bf}}}c{}}{{{f{BMf}}}d}{{{f{Il}}{f{Bhc}}}bAA`}{{{f{Ad}}{An{El}}}Ad}{{{f{Ad}}}{{Af{{f{B@d}}}}}}{{{f{Ad}}}{{Af{{f{B@f}}}}}}{{{f{Ad}}}{{Af{{f{B@h}}}}}}{{{f{Ad}}}{{Af{{f{B@b}}}}}}{{{f{Ad}}}{{Af{{f{Dn}}}}}}`{{{f{Ad}}}{{Af{Dj}}}}{{}El}00{ce{}{}}00{AdBAh}1{BBjAd}{AdAd}=={{{f{Ad}}}{{Af{Fh}}}}000{{{f{BMf}}}Fh}0{{}d}00{{{f{Ad}}}Il}{{{f{Ad}}}C@b}{{{f{Ad}}}{{`{{Bd{}{{B`{Ad}}}}}}}}{{{f{BMf}}}El}{{{f{Ad}}}El}{{{f{BMf}}El}Ad}0{{{f{Ad}}}{{Af{{f{Dj}}}}}}{{{f{Ad}}c}{{Af{Fh}}}ANd}{{{f{Ad}}{f{Ad}}}{{Af{Fh}}}}{{{f{Ad}}{f{Bf}}}c{}}201{{{f{Ad}}}{{Af{{An{c}}}}}Jj}{{{f{BMf}}}{{Af{Jl}}}}0{{{f{BMf}}}{{An{Jn}}}}0{{{f{Ad}}}Jl}1122322{{{f{Ad}}c}e{A`Jj}{}}{{Adc}e{A`Jj}{}}{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}>>={{{f{BMf}}}{{Af{El}}}}0{{{f{BMf}}}{{f{Bf}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{Hn}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{Jn}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{{AJ`{{Dd{Db}}}}}}}}}}{{{f{Bf}}{Kh{L`}}}Ad}{{{f{Bf}}c}Ad{{Kf{{Dd{{An{J`}}}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{{An{{f{{Dd{Db}}}}}}}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{Hl}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{J`}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{{An{Hn}}}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{d}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{{An{Hl}}}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{{An{d}}}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{Dh}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{{f{Bf}}}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{Kd}}}}}}{{{f{Bf}}{Kh{Hn}}}Ad}{{{f{Bf}}c}Ad{{Kf{{Dd{L`}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{{An{Jn}}}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{Ad}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{{An{Kd}}}}}}}}{{{f{Bf}}{Kh{Kd}}}Ad}{{{f{Bf}}c}Ad{{Kf{{Dd{{An{L`}}}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{{An{{F`{Db}}}}}}}}}}{{{f{Bf}}{f{Ad}}}Ad}{{{f{Bf}}c}Ad{{Kf{{Dd{{f{{Dd{Db}}}}}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{{AJ`{Bf}}}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{{An{{AJ`{{Dd{Db}}}}}}}}}}}}{{{f{Bf}}c}AdBBj}{{{f{Bf}}c}Ad{{Kf{{Dd{H`}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{{F`{Db}}}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{{An{{AJ`{Bf}}}}}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{{An{Ad}}}}}}}}{{{f{Bf}}c}Ad{{Kf{{Dd{{An{Dh}}}}}}}}{{{f{Bf}}{Kh{J`}}}Ad}{{{f{Bf}}{f{Df}}}Ad}{{{f{BMf}}ElEl}Ad}{{{f{Bf}}El}Ad}{{{f{BhC@b}}}{{An{c}}}{}}{{{f{Ad}}{f{Ad}}}{{Af{Fh}}}}{{{f{Ad}}c}{{Af{Fh}}}ANd}{{{f{Ad}}{f{Bf}}}{{Af{Fh}}}}2{{{f{Ad}}{f{Bf}}}c{}}{{{f{Ad}}c}eANd{}}{{{f{Ad}}}{{Af{{f{`}}}}}}{{{f{BMf}}}El}`{{{f{Ad}}}C@d}{{{f{Ad}}}{{Af{Jl}}}}{{{f{BMf}}JnLh}{{Af{Jl}}}}0{{{f{BMf}}}Ad}{{Adc}e{A`Jj}{}}{{{f{Ad}}c}e{A`Jj}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{BhBMf}}{f{Bf}}}b}{{{f{BhAd}}{f{Bf}}}{{f{BhAd}}}}{{{f{Ad}}{f{{Dd{J`}}}}}{{Af{Ad}}}}6{IlIl}{{{f{BMf}}{f{Cb}}Lj}{{Af{Ad}}}}0{{{f{Ad}}Jndd{An{Hn}}}{{Af{Ad}}}}{{{f{Ad}}Eldd{An{Hn}}}{{Af{Ad}}}}{{{f{Ad}}El}Ad}{{{f{BhAd}}Il}b}{{{f{BMf}}J`}Ad}{{{f{BhBMf}}}b}0{{{f{BhAd}}}b}{{{f{Ad}}{An{Hn}}}Ad}{{{f{C@b}}}{{Gj{El{An{El}}}}}}{{{f{BMf}}J`El}Ad}{{{f{Ad}}J`El}Ad}{{{f{Ad}}Dl}{{Af{Ad}}}}{{{f{BMf}}Dl}{{Af{Ad}}}}0{{{f{BMf}}J`}{{Gj{AdAd}}}}{{{f{Ad}}J`}{{Gj{AdAd}}}}{{{f{BMf}}Db}{{An{Jn}}}}0{{{f{BMf}}Db}{{Af{Jl}}}}0{{{f{Ad}}}{{Af{{f{Mh}}}}}}{{{f{Ad}}El}{{Af{{AJ`{Bf}}}}}}{{{f{Ad}}{f{Df}}}{{Af{Ad}}}}{{{f{Ad}}c}e{A`Jj}{}}{{AdAd}c{}}{{Adc}e{A`Jj}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}}{{Af{c}}}Jj}{{{f{BMf}}}{{Af{Jl}}}}0{{{f{Ad}}}{{Af{Jl}}}}{{{f{Ad}}{An{El}}}Ad}{{{f{BMf}}{f{Dn}}}{{Af{Ad}}}}{{{f{BMf}}{f{{Dd{Hb}}}}}{{Af{Ad}}}}{{{f{BMf}}{f{{Dd{Hb}}}}}Ad}{{{f{BMf}}{f{Dn}}}Ad}{{{f{Ad}}{f{{Dd{Hb}}}}}Ad}{{{f{Ad}}Eld}En}{{{f{Ad}}}{{Af{Ad}}}}{{{f{c}}}e{}{}}0{{{f{Ad}}}{{AJ`{Ad}}}}{{{f{c}}}Dh{}}{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{{AdAd}{{Af{Ad}}}}1{c{{Gd{e}}}{}{}}0{{{Gj{{f{ANh}}En}}}{{Af{Ad}}}}1{{{Gj{{f{Bf}}{F`{En}}}}}{{Af{Ad}}}}{{{Gj{{f{Bf}}En}}}{{Af{Ad}}}}{{{Gj{{f{ANh}}{F`{En}}}}}{{Af{Ad}}}}444656{{{f{BhAd}}{Ff{c}}}dBn}76{{{f{c}}}Ml{}}00{{{f{Ad}}}{{Af{{f{AOn}}}}}}{{{f{Ad}}}{{Af{{f{AN`}}}}}}{{{f{Ad}}}{{Af{{f{B@`}}}}}}{{{f{Ad}}}{{Af{{f{AOl}}}}}}{{{f{BMf}}}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{Ad}}}}{{{f{BMf}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{BMf}}Db}{{An{Jn}}}}0{{{f{BMf}}Db}{{Af{Jl}}}}0{ce{}{}}00{{Ad{f{Bf}}}Ad}{{{f{Ad}}c}Ad{A`Jj}}{{{f{Ad}}{f{Fh}}{f{Ad}}}{{Af{Ad}}}}``{{{f{c}}h}b{}}{{{f{Cf}}}{{f{Ad}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Cf}}}Cf}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{Cf}}}Ad}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{cc{}}{{}El}?{{{C@f{Ad}}}Cf}{{{f{BhCf}}{f{BhEn}}}b}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}{ce{}{}}{{{f{BhCf}}{f{BhEn}}e}c{}{{Cb{{f{Cf}}}{{C`{c}}}}}}````{{{C@h{}{{C`{c}}}}{f{Ad}}}c{}}{{{f{C@j}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Ah}}}}{f{Ad}}}{{Af{Ad}}}}0`2100210021002100``{{{f{BIf}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Eh}}}}{f{Ad}}}{{Af{Ad}}}}0{{{f{BIf}}c}{{Af{Ad}}}Ab}{{{f{{l{Eh}}}}c}{{Af{Ad}}}Ab}0```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{C@l}}}C@l}{{{f{c}}{f{Bhe}}}b{}{}}{{}C@l}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{C@l}}{f{C@l}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{C@l}}{f{BhFj}}}Fl}{cc{}}{{{f{C@l}}{f{Bhc}}}bAA`}{{}El}{ce{}{}}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}3`````````{{{f{c}}h}b{}}5{{{F`{BAh}}}{{Af{BAh}}}}{c{{Af{BAh}}}{{Gb{}{{B`{BAh}}}}}}{cBAh{{Gb{}{{B`{BAh}}}}}}{c{{An{BAh}}}{{Gb{}{{B`{BAh}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Gj{{AJ`{{l{c}}}}{AJ`{{l{e}}}}}}}BnBn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Gj{{AJ`{{l{c}}}}{AJ`{{l{e}}}}{AJ`{{l{g}}}}}}}BnBnBn}{{{f{BhC@n}}}d}{c{{Af{Df}}}{{Gb{}{{B`{{f{H`}}}}}}}}{c{{Af{{Gj{DfEl}}}}}{{Gb{}{{B`{{f{H`}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{An{Gh}}}BnBn}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{CA`}}}{{`{{Bd{}{{B`{El}}}}}}}}{{{f{{CAb{ec}}}}}{{CAb{ec}}}Of{Of{Bd{}{{B`{c}}}}}}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{{l{c}}}}{f{{l{c}}}}}{{Gj{{AJ`{{l{c}}}}{AJ`{{l{c}}}}}}}Bn}{{{f{Ad}}{f{Ad}}}{{Gj{AdAd}}}}{C@ne{}{{CAd{c}}}}{C@ne{}{{CAf{c}}}}{c{{Af{BAh}}}{{Gb{}{{B`{{f{BAh}}}}}}}}{cBAh{{Gb{}{{B`{{f{BAh}}}}}}}}{{{f{BhC@n}}{f{c}}}dBJh}{El{{f{c}}}{}}{{{f{{CAh{c}}}}}{{f{e}}}{}{}}{{{f{{AIf{c}}}}}{{f{e}}}{}{}}22{El{{f{Bhc}}}{}}{{{f{Bh{AIf{c}}}}}{{f{Bhe}}}{}{}}11{Elb}00{cBBh{{Gb{}{{B`{Df}}}}}}{c{{Af{Df}}}{{Gb{}{{B`{{f{Df}}}}}}}}{{{f{{CAh{Ad}}}}{f{{CAh{Ad}}}}}d}{{{f{c}}{f{e}}}d{}{}}00`{{{f{BhC@n}}cg}{{An{c}}}{}{}{{Ch{ce}{{C`{c}}}}}}{cc{}}00{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{c{{AIf{{l{e}}}}}{{Gb{}{{B`{}}}}}n}{c{{AIf{Fh}}}{{Gb{}{{B`{d}}}}}}{eCAf{}{{Gb{}{{B`{c}}}}}}21{c{{AIf{{l{e}}}}}{{Gl{}{{B`{}}}}}n}{c{{AIf{{l{e}}}}}{{Gn{}{{B`{}}}}}n}{c{{AIf{Fh}}}{{Gn{}{{B`{d}}}}}}{{{f{Df}}{f{Df}}}{{An{Df}}}}{{{f{ALb}}{f{ALb}}}ALb}{{{f{Ad}}{f{Ad}}}{{Af{b}}}}{{{f{{CAh{Ad}}}}{f{Bhc}}}bAA`}{{}El}00{ce{}{}}00{{{AIf{c}}}c{}}1{BDf{{F`{c}}}{}}{c{{F`{{CAl{CAj}}}}}{}}{c{{F`{Dh}}}{}}{{{f{CA`}}}{{`{{Bd{}{{B`{CA`}}}}}}}}{{{f{CA`}}}El}{BBdH`}1{c{{AIf{c}}}{}}{{eEl}{{CAb{ec}}}{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{CAb{ec}}}}}An{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{CAb{ec}}}}}An{}{{Bd{}{{B`{c}}}}Fd}}`{{{f{{CAb{ec}}}}}{{Gj{El{An{El}}}}}{}{{Bd{}{{B`{c}}}}}}{{{f{CA`}}J`El}CA`}{{{f{{Dd{c}}}}J`El}{{f{{Dd{c}}}}}{}}{{{f{c}}El}{{F`{c}}}CA`}0{{{f{CA`}}J`}{{Gj{CA`CA`}}}}{{{f{BAh}}Eld}{{F`{BAh}}}}{{{f{c}}}e{}{}}{{C@nEl}{{CAb{C@nc}}}{}}{c{{Gd{e}}}{}{}}00{{{f{Df}}{f{Df}}}{{Af{Df}}}}111{{{f{c}}}Ml{}}00{ce{}{}}00{{{f{Df}}e}c{}{{Cb{{f{BhCf}}}{{C`{c}}}}}}{{{f{{Dd{{F`{c}}}}}}}{{Gj{El{F`{El}}}}}{}}{{{f{BAh}}}{{`{{Bd{}{{B`{BAh}}}}}}}}{{{f{{Dd{c}}}}}{{AI`{Hb}}}{{Kf{{Dd{Mn}}}}IdIf}}{{{f{{Dd{e}}}}}{{F`{c}}}{IdIfCd}{{Kf{{Dd{c}}}}}}{{{f{Ad}}}{{F`{Ad}}}}","D":"JAj","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5217],[5,"ListType",1458],[5,"ChunkedArray",39],[10,"PolarsNumericType",1458],[10,"Num",5218],[10,"ToPrimitive",5219],[5,"Series",4613],[8,"PolarsResult",3894,5220],[10,"NumOpsDispatchInner",5036,5221],[6,"GroupsProxy",3496,5222],[5,"BooleanType",1458],[6,"Option",5223],[17,"Item"],[8,"ArrayBox",5013],[10,"Iterator",5224],[1,"str"],[0,"mut"],[17,"IsNested"],[5,"FalseT",1458],[10,"PolarsDataType",1458],[17,"Output"],[10,"Fn",5225],[10,"Copy",5226],[5,"AmortSeries",5013],[10,"FnMut",5225],[5,"Float32Type",1458],[5,"Float64Type",1458],[5,"StringType",1458],[5,"BinaryType",1458],[1,"u8"],[1,"slice"],[6,"DataType",1458,5227],[5,"String",5228],[8,"ListChunked",1458],[5,"SortOptions",1375],[8,"IdxCa",1458,5229],[5,"SortMultipleOptions",1375],[8,"BinaryChunked",1458],[10,"PolarsIntegerType",1458],[6,"CastOptions",723],[10,"NumOpsDispatchCheckedInner",5061,5230],[8,"ChunkLenIter",39],[1,"usize"],[8,"ArrayRef",3894,5231],[5,"Vec",5232],[5,"MetadataProperties",810],[10,"DoubleEndedIterator",5233],[5,"Metadata",810],[8,"BooleanChunked",1458],[5,"Formatter",5234],[8,"Result",5234],[10,"Array",5231],[17,"Array"],[10,"IntoIterator",5235],[6,"Result",5236],[10,"FallibleIterator",5237],[5,"Bitmap",5238],[1,"tuple"],[10,"IntoParallelIterator",5239],[10,"TrustedLen",5240],[6,"AnyValue",1458,5241],[8,"IdxSize",3894,5242],[5,"MetadataFlags",810],[5,"ObjectType",1458],[10,"PolarsObjectSafe",1041],[10,"PolarsObject",1041],[1,"f32"],[1,"u64"],[5,"Int128Type",1458],[8,"DecimalChunked",1458,5243],[10,"Send",5226],[10,"Sync",5226],[10,"ExactSizeIterator",5244],[10,"PolarsFloatType",1458],[6,"IsSorted",4613,5245],[10,"PolarsIterator",771],[1,"i64"],[5,"Iter",5246],[1,"fn"],[5,"Map",5247],[6,"ChunkedArrayLayout",39],[10,"NumCast",5219],[5,"Scalar",1458,5241],[1,"f64"],[5,"Arc",3894,5248],[5,"Int32Type",1458],[1,"i32"],[10,"AsRef",5249],[5,"Range",5250],[5,"Int64Type",1458],[5,"UInt64Type",1458],[5,"UInt32Type",1458],[1,"u32"],[5,"Field",1458,5251],[10,"ParallelIterator",5239],[10,"IndexedParallelIterator",5239],[6,"QuantileInterpolOptions",3894,5252],[5,"RollingOptionsFixedWindow",3894,5253],[10,"Sized",5226],[17,"HasViews"],[5,"RandomState",5254],[5,"BytesHash",5255],[8,"Array2",5256],[8,"ArrayView1",5256],[8,"StringChunked",1458],[6,"Either",5257],[5,"TypeId",5258],[5,"NullableIdxSize",3894,5242],[10,"FnOnce",5225],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",437,5259],[10,"ChunkedBuilder",465],[5,"BinViewChunkedBuilder",465,5260],[10,"ViewType",5261],[5,"BooleanChunkedBuilder",465,5262],[5,"NullChunkedBuilder",465,5263],[5,"PrimitiveChunkedBuilder",465,5264],[10,"Clone",5265],[8,"StringChunkedBuilder",465,5260],[8,"BinaryChunkedBuilder",465,5260],[10,"NewChunkedArray",465],[5,"AnonymousListBuilder",569,5266],[5,"AnonymousOwnedListBuilder",569,5266],[5,"ListBooleanChunkedBuilder",569,5267],[5,"ListPrimitiveChunkedBuilder",569,5268],[10,"ListBuilderTrait",569],[5,"ListStringChunkedBuilder",569,5269],[5,"ListBinaryChunkedBuilder",569,5269],[5,"ListNullChunkedBuilder",569,5270],[5,"Box",5271],[10,"Hasher",5272],[10,"ChunkedCollectInferIterExt",751],[10,"ChunkedCollectIterExt",751],[10,"Canonical",765],[10,"ChunkedCollectParIterExt",767],[10,"FromParIterWithDtype",767],[5,"BooleanArray",5273],[5,"BoolIterNoNull",771],[5,"SomeIterator",771],[5,"MetadataEnv",810,5274],[10,"MetadataCollectable",810],[5,"Iter",5275],[5,"IterNames",5275],[5,"File",5276],[5,"Mutex",5277],[6,"MetadataMerge",810],[5,"ObjectArray",1041],[6,"ArrowDataType",1458,5278],[10,"Any",5258],[10,"Debug",5234],[8,"ObjectValueIter",1041],[5,"BitmapIter",5279],[6,"ZipValidity",5280],[5,"ObjectChunkedBuilder",1116],[8,"ObjectChunked",1458],[10,"AnonymousObjectBuilder",1139],[5,"ObjectRegistry",1139],[8,"ObjectConverter",1139],[8,"BuilderConstructor",1139],[17,"FuncRet"],[10,"ChunkApply",1167],[10,"ChunkApplyKernel",1167],[10,"ChunkSort",1167],[10,"ChunkUnique",1167],[10,"ChunkCast",1167],[6,"FillNullStrategy",1167],[10,"ChunkCompare",1167],[10,"ChunkExplode",1167],[5,"OffsetsBuffer",5281],[10,"ChunkFillNullValue",1167],[10,"ChunkFilter",1167],[10,"ChunkFull",1167],[10,"ChunkFullNull",1167],[10,"ChunkAnyValue",1167],[10,"IsFirstDistinct",1167],[10,"IsLastDistinct",1167],[10,"ChunkAgg",1167],[10,"ChunkQuantile",1167],[10,"ChunkExpandAtIndex",1167],[10,"ChunkReverse",1167],[10,"ChunkRollApply",1167],[10,"ChunkSet",1167],[10,"ChunkShift",1167],[10,"ChunkShiftFill",1167],[10,"ChunkVar",1167],[10,"ChunkTake",1167],[10,"ChunkTakeUnchecked",1167],[10,"ChunkBytes",1167],[10,"ChunkZip",1167],[10,"BinaryFnMut",1291],[10,"StaticArray",1458,5282],[10,"TernaryFnMut",1291],[10,"Error",5283],[10,"UnaryFnMut",1291],[5,"PrimitiveArray",5284],[6,"SearchSortedSide",1331],[10,"SlicedArray",3894,5285],[5,"NoNull",5095],[5,"RowsEncoded",5286],[8,"BinaryOffsetChunked",1458],[5,"NaiveDateTime",5287],[6,"PolarsError",3894,5220],[6,"Cow",5288],[8,"Float32Chunked",1458],[8,"Float64Chunked",1458],[10,"ArrayFromIter",1458,5289],[10,"ArrayFromIterDtype",1458,5289],[10,"AsRefDataType",1458,5227],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5290],[10,"From",5249],[5,"CategoricalChunked",2867,5291],[10,"CategoricalMergeOperation",2867,5292],[10,"LogicalType",1458,5293],[5,"Logical",1458,5293],[5,"OwnedObject",1458,5241],[6,"UnknownKind",1458,5227],[6,"TimeUnit",1458,5294],[5,"UInt8Type",1458],[5,"UInt16Type",1458],[5,"Int8Type",1458],[5,"Int16Type",1458],[5,"DateType",1458],[5,"TimeType",1458],[5,"BinaryOffsetType",1458],[5,"DecimalType",1458],[5,"DatetimeType",1458],[5,"DurationType",1458],[5,"CategoricalType",1458],[6,"ArrowTimeUnit",1458],[10,"ArrayCollectIterExt",3894,5289],[8,"Utf8ViewArray",5261],[8,"UInt32Chunked",1458],[5,"Error",5234],[10,"NumericNative",1458],[10,"Into",5249],[5,"ArrowField",3894],[6,"IntegerType",5295],[6,"PrimitiveType",5296],[10,"Borrow",5297],[8,"SmartString",1458],[10,"NoOption",5298],[10,"GetAnyValue",1458,5241],[8,"Int128Chunked",1458],[6,"Ordering",5299],[6,"PhysicalType",5295],[8,"UInt8Chunked",1458],[8,"UInt16Chunked",1458],[8,"UInt64Chunked",1458],[8,"Int8Chunked",1458],[8,"Int16Chunked",1458],[8,"Int32Chunked",1458],[8,"Int64Chunked",1458],[8,"PlIdHashMap",1458,5229],[5,"CategoricalChunkedBuilder",2867,5300],[5,"GlobalRevMapMerger",2867,5292],[6,"RevMapping",3007,5301],[6,"CategoricalOrdering",3007,5301],[5,"CatIter",2867,5291],[1,"u128"],[5,"DataFrame",3198],[5,"StringCacheHolder",3059,5302],[5,"ErrString",3088,5220],[6,"PolarsWarning",3088,5303],[10,"Display",5234],[6,"FloatFmt",3168],[1,"i128"],[1,"char"],[5,"Schema",4539],[10,"IntoSeries",4613,5304],[6,"NullStrategy",3198],[6,"UniqueKeepStrategy",3198],[8,"PlHashSet",1458,5305],[5,"ArrowSchema",3894,5306],[5,"Row",3750],[5,"GroupBy",3496],[5,"RangeTo",5250],[5,"RangeToInclusive",5250],[5,"RangeFrom",5250],[5,"RangeFull",5250],[5,"RangeInclusive",5250],[5,"RecordBatchIter",3198],[5,"PhysRecordBatchIter",3198],[10,"IntoVec",5095],[5,"MeltArgs",3467],[10,"RangeBounds",5250],[8,"SchemaRef",4539],[6,"IndexOrder",3894,5307],[5,"StructArray",5308],[8,"RecordBatch",5309],[5,"GroupsIdx",3496,5222],[8,"IdxVec",5310],[6,"GroupByMethod",3496],[5,"SlicedGroups",3496,5222],[5,"GroupsProxyParIter",3496,5222],[10,"UnindexedConsumer",5311],[6,"GroupsIndicator",3496,5222],[8,"IdxItem",3496,5222],[10,"IntoGroupsProxy",3496,5312],[5,"Copied",5313],[5,"Zip",5314],[5,"GroupsProxyIter",3496,5222],[8,"GroupsSlice",3496,5222],[1,"array"],[8,"DynArgs",3894,5315],[10,"IsFloat",5316],[10,"NativeType",5317],[10,"AggList",3734,5318],[10,"TakeExtremum",3734],[10,"PhysicalAggExpr",3747],[6,"AnyValueBuffer",3750,5319],[6,"AnyValueBufferTrusted",3750,5319],[5,"BinaryArray",5320],[5,"IdHasher",3846,5321],[5,"IdxHash",3846,5321],[5,"HashMap",5322],[10,"BuildHasher",5272],[10,"VecHash",3846,5323],[10,"Allocator",5324],[5,"BorrowedFd",5325],[10,"AsFd",5325],[10,"AsRawFd",5326],[20,"MaybeUninit",5327],[10,"NumOpsDispatchChecked",3894,5230],[5,"ChunkId",3894,5242],[5,"RollingVarParams",3894,5315],[5,"RollingQuantileParams",3894,5315],[6,"NonExistent",3894,5328],[10,"Ord",5299],[10,"Default",5329],[5,"CStr",5330],[5,"Weak",5248],[10,"PartialEq",5299],[10,"Scalar",5331],[5,"Error",5332],[6,"Error",5333],[5,"Utf8Error",5334],[5,"TryReserveError",5335],[10,"ToOwned",5288],[5,"PathBuf",5336],[5,"Path",5336],[5,"CString",5337],[5,"OsStr",5338],[1,"never"],[5,"OsString",5338],[10,"FromData",4462,5339],[5,"Buffer",5340],[10,"FromDataUtf8",4462,5339],[10,"FromDataBinary",4462,5339],[5,"ListArray",5341],[6,"Ambiguous",3894,5328],[10,"NamedFromOwned",3894,5342],[10,"PartialOrd",5299],[10,"PolarsArray",3894,5343],[10,"Hash",5272],[10,"SeriesTrait",4613,5245],[10,"ChunkAggSeries",3894,5344],[10,"QuantileAggSeries",3894,5345],[10,"IndexToUsize",3894,5346],[10,"NamedFrom",3894,5342],[5,"Pin",5347],[5,"Request",5283],[5,"BorrowedCursor",5348],[5,"IoSliceMut",5349],[6,"SeekFrom",5349],[10,"VarAggSeries",3894,5350],[5,"AllocError",5324],[5,"BTreeMap",5351],[5,"IoSlice",5349],[5,"AnonymousBuilder",4468,5352],[5,"Offsets",5281],[5,"MutableNullArray",4491,5353],[5,"MutableBitmap",5354],[5,"Utf8Array",5355],[8,"ArrowSchemaRef",5306],[10,"IndexOfSchema",4539],[8,"Metadata",5278],[5,"SeriesIter",4613,5356],[8,"SeriesPhysIter",4613,5356],[5,"Rc",5357],[10,"LhsNumOps",5036,5221],[10,"NumOpsDispatch",5036,5221],[6,"NullBehavior",5069],[10,"CustomIterTools",5095,5358],[10,"Container",5095],[5,"TrustMyLength",5095,5240],[10,"FromIteratorReversed",5359],[10,"FromTrustedLenIterator",5095,5358],[5,"Wrap",5095],[5,"LazyCompact",5360],[5,"SmartString",5361],[8,"FillNullLimit",1167],[10,"InitHashMaps",1458],[10,"InitHashMaps2",1458],[5,"TrueT",1458],[15,"IO",3153],[15,"Context",3153],[15,"Count",3731],[15,"Slice",3732],[10,"ListFromIter",3894],[10,"Utf8FromIter",4534],[10,"BinaryFromIter",4534]],"r":[[0,5321],[4,5302],[13,5302],[16,5302],[31,5302],[437,5259],[465,5260],[466,5260],[467,5262],[470,5263],[471,5264],[472,5260],[569,5266],[570,5266],[571,5269],[572,5267],[574,5270],[575,5268],[576,5269],[823,5274],[1360,5285],[1375,5285],[1459,5241],[1461,5289],[1462,5289],[1463,5289],[1464,5278],[1466,5227],[1482,5291],[1485,5291],[1486,5300],[1487,5292],[1488,5301],[1490,5227],[1491,5227],[1492,5227],[1503,5243],[1513,5251],[1514,5251],[1529,5241],[1531,5292],[1535,5229],[1536,5346],[1537,5229],[1538,5229],[1539,5305],[1540,5229],[1576,5293],[1577,5293],[1595,5241],[1599,5305],[1600,5305],[1601,5229],[1602,5305],[1603,5305],[1609,5301],[1610,5241],[1613,5282],[1625,5294],[1626,5227],[1653,5227],[1852,5292],[1869,5293],[1945,5227],[2464,5292],[2465,5292],[2477,5227],[2561,5291],[2599,5291],[2867,5291],[2868,5291],[2869,5300],[2870,5292],[2871,5301],[2873,5292],[2877,5301],[2894,5292],[2959,5292],[2960,5292],[2978,5291],[2982,5291],[3007,5301],[3012,5301],[3059,5302],[3065,5302],[3068,5302],[3076,5302],[3078,5301],[3083,5301],[3084,5302],[3085,5302],[3086,5302],[3087,5302],[3094,5220],[3101,5220],[3102,5220],[3103,5303],[3117,5220],[3125,5220],[3132,5303],[3137,5220],[3138,5220],[3139,5220],[3140,5220],[3141,5220],[3142,5303],[3143,5220],[3157,5362],[3158,5362],[3159,5362],[3160,3846],[3496,5222],[3502,5222],[3503,5222],[3504,5222],[3505,5222],[3506,5222],[3507,5222],[3510,5222],[3512,5312],[3524,5222],[3734,5318],[3752,5319],[3753,5319],[3846,5321],[3847,5321],[3848,5321],[3849,5323],[3852,5323],[3853,5323],[3894,5328],[3895,5248],[3896,5259],[3897,5289],[3898,5231],[3900,5306],[3901,5260],[3902,5262],[3904,5291],[3905,5291],[3906,5300],[3907,5292],[3908,5301],[3909,5344],[3910,5242],[3911,39],[3912,465],[3913,751],[3914,751],[3918,3198],[3920,5315],[3924,5339],[3925,5339],[3926,5339],[3928,5292],[3931,5346],[3932,5242],[3933,5307],[3934,5346],[3935,5304],[3936,5095],[3938,5363],[3939,5363],[3940,5363],[3943,5221],[3945,5269],[3946,5267],[3947,569],[3948,5343],[3949,5268],[3950,5269],[3953,3467],[3955,5342],[3956,5342],[3958,465],[3960,5328],[3964,5242],[3965,5242],[3966,5221],[3967,5230],[3971,5343],[3972,5220],[3973,771],[3974,1041],[3975,5220],[3976,5264],[3977,5345],[3978,5252],[3981,5301],[3982,5253],[3983,5315],[3984,5315],[3989,4613],[3990,5245],[3992,5285],[3994,5302],[3996,5260],[3998,3198],[3999,5350],[4000,5323],[4046,5292],[4081,5343],[4084,0],[4097,5343],[4126,0],[4262,5346],[4305,5343],[4307,5292],[4308,5292],[4334,5343],[4340,5220],[4341,5220],[4342,5220],[4343,5220],[4355,5291],[4357,5343],[4363,5291],[4436,5343],[4462,5339],[4463,5339],[4464,5339],[4468,5352],[4491,5353],[4521,5301],[4526,5301],[4527,5285],[4530,5302],[4531,5302],[4532,5302],[4533,5302],[4534,5364],[4535,5364],[4615,1167],[4618,5304],[4619,5245],[4620,5245],[4624,5356],[4625,5356],[4626,5245],[5036,5221],[5037,5221],[5038,5221],[5044,5221],[5061,5230],[5062,5230],[5097,5358],[5098,5358],[5099,5358],[5102,5240],[5113,5365],[5114,5365],[5145,5366],[5146,5367],[5165,5367],[5167,5368],[5182,5367],[5201,5367],[5211,5368]],"b":[[48,"impl-Add-for-%26ChunkedArray%3CT%3E"],[49,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[50,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[51,"impl-Add-for-ChunkedArray%3CT%3E"],[64,"impl-ChunkedArray%3CFloat32Type%3E"],[65,"impl-ChunkedArray%3CFloat64Type%3E"],[70,"impl-ChunkedArray%3CT%3E"],[71,"impl-ChunkedArray%3CStringType%3E"],[72,"impl-ChunkedArray%3CBinaryType%3E"],[101,"impl-ChunkedArray%3CT%3E"],[102,"impl-Container-for-ChunkedArray%3CT%3E"],[120,"impl-Div-for-%26ChunkedArray%3CT%3E"],[121,"impl-Div-for-ChunkedArray%3CT%3E"],[122,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[123,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[131,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[132,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[133,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[134,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[140,"impl-Debug-for-ChunkedArray%3CT%3E"],[141,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[152,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[153,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[154,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[156,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[157,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[185,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[186,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[187,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[188,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[219,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[220,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[221,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[222,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[223,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[224,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[225,"impl-ChunkedArray%3CT%3E"],[226,"impl-Container-for-ChunkedArray%3CT%3E"],[231,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[232,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[233,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[234,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[235,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[236,"impl-ChunkedArray%3CBooleanType%3E"],[238,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[239,"impl-ChunkedArray%3CBooleanType%3E"],[248,"impl-ChunkedArray%3CBooleanType%3E"],[249,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[252,"impl-ChunkedArray%3CBooleanType%3E"],[253,"impl-ChunkedArray%3CT%3E"],[254,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[255,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[256,"impl-Mul-for-ChunkedArray%3CT%3E"],[257,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[262,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[263,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[264,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[265,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[266,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[267,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[268,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[269,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[270,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[271,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[272,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[273,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[274,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[275,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[276,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[277,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[278,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[279,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[280,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[281,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[282,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[283,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[292,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[293,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[294,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[295,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[299,"impl-ChunkedArray%3CStringType%3E"],[300,"impl-ChunkedArray%3CListType%3E"],[301,"impl-ChunkedArray%3CListType%3E"],[302,"impl-ChunkedArray%3CStringType%3E"],[313,"impl-Rem-for-ChunkedArray%3CT%3E"],[314,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[315,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[316,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[335,"impl-ChunkedArray%3CT%3E"],[336,"impl-Container-for-ChunkedArray%3CT%3E"],[339,"impl-Container-for-ChunkedArray%3CT%3E"],[340,"impl-ChunkedArray%3CT%3E"],[343,"impl-Sub-for-ChunkedArray%3CT%3E"],[344,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[345,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[346,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[348,"impl-ChunkedArray%3CBooleanType%3E"],[349,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[352,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[353,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[354,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[355,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[361,"impl-ChunkedArray%3CListType%3E"],[362,"impl-ChunkedArray%3CT%3E"],[367,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[368,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[369,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[370,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[371,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[372,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[399,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[400,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[401,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[402,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[403,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[404,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[409,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[410,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[411,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[424,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[425,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[426,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[427,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[428,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[517,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[518,"impl-BinViewChunkedBuilder%3Cstr%3E"],[845,"impl-MetadataProperties"],[846,"impl-Flags-for-MetadataProperties"],[847,"impl-MetadataFlags"],[848,"impl-Flags-for-MetadataFlags"],[915,"impl-UpperHex-for-MetadataProperties"],[916,"impl-LowerHex-for-MetadataProperties"],[917,"impl-Binary-for-MetadataProperties"],[918,"impl-Debug-for-MetadataProperties"],[919,"impl-Octal-for-MetadataProperties"],[920,"impl-Octal-for-MetadataFlags"],[921,"impl-UpperHex-for-MetadataFlags"],[922,"impl-Debug-for-MetadataFlags"],[923,"impl-LowerHex-for-MetadataFlags"],[924,"impl-Binary-for-MetadataFlags"],[932,"impl-Flags-for-MetadataProperties"],[933,"impl-MetadataProperties"],[934,"impl-MetadataFlags"],[935,"impl-Flags-for-MetadataFlags"],[1047,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1048,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1081,"impl-ObjectArray%3CT%3E"],[1082,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1096,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1097,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1107,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1108,"impl-ObjectArray%3CT%3E"],[1110,"impl-ObjectArray%3CT%3E"],[1111,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1113,"impl-ObjectArray%3CT%3E"],[1114,"impl-Array-for-ObjectArray%3CT%3E"],[1117,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1118,"impl-ObjectChunkedBuilder%3CT%3E"],[1120,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1121,"impl-ObjectChunkedBuilder%3CT%3E"],[1692,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1693,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1694,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1695,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1696,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1697,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1698,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1699,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1775,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1776,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1777,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1778,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1779,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1780,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[2073,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2074,"impl-PartialEq-for-DataType"],[2082,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2083,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2084,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2085,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2088,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2089,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2090,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2091,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2129,"impl-Debug-for-AnyValue%3C\'a%3E"],[2130,"impl-Display-for-AnyValue%3C\'_%3E"],[2132,"impl-Debug-for-DataType"],[2133,"impl-Display-for-DataType"],[2135,"impl-Display-for-TimeUnit"],[2136,"impl-Debug-for-TimeUnit"],[2148,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2149,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2150,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2151,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2153,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2155,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2156,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2158,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2159,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2160,"impl-From%3C%26Field%3E-for-Field"],[2184,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2186,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2189,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2190,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2191,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2193,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2194,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2195,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2196,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2202,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2203,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2205,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2206,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2207,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2208,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2209,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2210,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2218,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2219,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2220,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2221,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2222,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2223,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2312,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2313,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2314,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2315,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2318,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2319,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2320,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2321,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2454,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2455,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2456,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2457,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2460,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2461,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2462,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2463,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2498,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2499,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2500,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2501,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2502,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2503,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2504,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2505,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2506,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2507,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2520,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2521,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2524,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2525,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2526,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2527,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2530,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2531,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2532,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2533,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2611,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2612,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2613,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[2614,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2913,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2914,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2915,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2916,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2917,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2918,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2933,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2934,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2935,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2936,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2937,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2938,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2953,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2954,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2955,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2956,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2957,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2958,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2969,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2970,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2971,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2972,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2973,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2974,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3127,"impl-Debug-for-ErrString"],[3128,"impl-Display-for-ErrString"],[3219,"impl-Add%3C%26Series%3E-for-DataFrame"],[3220,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3221,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3259,"impl-Div%3C%26Series%3E-for-DataFrame"],[3260,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3261,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3291,"impl-Display-for-DataFrame"],[3292,"impl-Debug-for-DataFrame"],[3297,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3298,"impl-From%3C%26Schema%3E-for-DataFrame"],[3326,"impl-Index%3C%26str%3E-for-DataFrame"],[3327,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3328,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3329,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3330,"impl-Index%3Cusize%3E-for-DataFrame"],[3331,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3332,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3333,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3351,"impl-Container-for-DataFrame"],[3352,"impl-DataFrame"],[3360,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3361,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3362,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3363,"impl-DataFrame"],[3364,"impl-Container-for-DataFrame"],[3378,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3379,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3380,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3406,"impl-DataFrame"],[3407,"impl-Container-for-DataFrame"],[3411,"impl-Container-for-DataFrame"],[3412,"impl-DataFrame"],[3415,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3416,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3417,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3436,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3438,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BField%5D)%3E-for-DataFrame"],[3608,"impl-Debug-for-GroupByMethod"],[3609,"impl-Display-for-GroupByMethod"],[3615,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3617,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3618,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3652,"impl-IntoIterator-for-%26GroupsIdx"],[3653,"impl-IntoIterator-for-GroupsIdx"],[3655,"impl-IntoParallelIterator-for-GroupsIdx"],[3656,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4017,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4018,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4088,"impl-Default-for-Arc%3Cstr%3E"],[4089,"impl-Default-for-Arc%3CT%3E"],[4090,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4091,"impl-Default-for-Arc%3CCStr%3E"],[4145,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4146,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4147,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4180,"impl-Display-for-PolarsError"],[4181,"impl-Debug-for-PolarsError"],[4184,"impl-Pointer-for-Arc%3CT,+A%3E"],[4185,"impl-Display-for-Arc%3CT,+A%3E"],[4186,"impl-Debug-for-Arc%3CT,+A%3E"],[4197,"impl-From%3CError%3E-for-PolarsError"],[4198,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4199,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4200,"impl-From%3CError%3E-for-PolarsError"],[4204,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4205,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4206,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4207,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4208,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4209,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4210,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4211,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4212,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4213,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4215,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4216,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4217,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4219,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4220,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4557,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[4558,"impl-From%3CArrowSchema%3E-for-Schema"],[4559,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[4561,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[4562,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[4563,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[4631,"impl-Add-for-%26Series"],[4632,"impl-Add-for-Series"],[4633,"impl-Add%3CT%3E-for-%26Series"],[4634,"impl-Add%3CT%3E-for-Series"],[4698,"impl-Div%3CT%3E-for-%26Series"],[4699,"impl-Div%3CT%3E-for-Series"],[4700,"impl-Div-for-%26Series"],[4701,"impl-Div-for-Series"],[4712,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4713,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4714,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4715,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4716,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4717,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4734,"impl-Debug-for-Series"],[4735,"impl-Display-for-Series"],[4747,"impl-FromIterator%3C%26i32%3E-for-Series"],[4748,"impl-FromIterator%3C%26bool%3E-for-Series"],[4749,"impl-FromIterator%3Cu32%3E-for-Series"],[4750,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[4751,"impl-FromIterator%3Cf64%3E-for-Series"],[4752,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[4753,"impl-FromIterator%3CString%3E-for-Series"],[4754,"impl-FromIterator%3C%26f64%3E-for-Series"],[4755,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[4756,"impl-FromIterator%3C%26f32%3E-for-Series"],[4757,"impl-FromIterator%3C%26u32%3E-for-Series"],[4758,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[4759,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[4760,"impl-FromIterator%3Cbool%3E-for-Series"],[4761,"impl-FromIterator%3C%26i64%3E-for-Series"],[4762,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[4763,"impl-FromIterator%3Cf32%3E-for-Series"],[4764,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[4765,"impl-FromIterator%3C%26str%3E-for-Series"],[4766,"impl-FromIterator%3Ci64%3E-for-Series"],[4767,"impl-FromIterator%3Cu64%3E-for-Series"],[4768,"impl-FromIterator%3Ci32%3E-for-Series"],[4769,"impl-FromIterator%3C%26u64%3E-for-Series"],[4770,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[4771,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[4772,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[4773,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[4774,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[4775,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[4792,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4793,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4794,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4795,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4796,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4797,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4837,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4838,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4839,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4840,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4841,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4842,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4856,"impl-Mul%3CT%3E-for-%26Series"],[4857,"impl-Mul%3CT%3E-for-Series"],[4858,"impl-Mul-for-Series"],[4859,"impl-Mul-for-%26Series"],[4866,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[4867,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[4868,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[4869,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[4870,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[4871,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[4872,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[4873,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[4874,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[4875,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[4876,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[4877,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[4878,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[4879,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[4880,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[4881,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[4882,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[4883,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[4884,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[4885,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[4886,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[4887,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[4888,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[4889,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[4890,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[4891,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[4892,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[4893,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[4894,"impl-NamedFrom%3CT,+T%3E-for-Series"],[4895,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[4896,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[4897,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[4898,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[4899,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[4900,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[4905,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4906,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4907,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4908,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4909,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4910,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4919,"impl-Rem%3CT%3E-for-Series"],[4920,"impl-Rem%3CT%3E-for-%26Series"],[4921,"impl-Rem-for-%26Series"],[4953,"impl-Sub%3CT%3E-for-%26Series"],[4954,"impl-Sub-for-Series"],[4955,"impl-Sub%3CT%3E-for-Series"],[4956,"impl-Sub-for-%26Series"],[4978,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4980,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4981,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4982,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5157,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5158,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5160,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5161,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5163,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5164,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAAM0NFA5RDlQOVQ5WDlcOWA5dDmAOZQ5mDosO","e":"OzAAAAEAAFQPBwIAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAEAIQAHACoADAA+AAAAQQACAEUABABNAAMAUgAAAFQACwBiAAMAZwAAAGoAAgBuAAEAdAANAIQAAwCJAAEAjAAFAJQAAQCYAAYAoQADAKcAAwCsAAUAswABALgABQDAAAIAxgAEAMwAAwDTAAIA2AABANsABgDjAAAA6AAMAPkAAwD/AAYABwEZACUBAwAqAQAALAEEADIBAQA4AQAAOgEEAEABAABFAQUATQEBAFEBAwBWAQkAZgEBAGwBAABwAQgAegEIAIQBAACGAQUAjgEAAJABIwC1ASkA4wECAOkBIwATAgUAHQIAAB8CJgBIAkwAnAIMALACJADYAg0A5wIBAOoCGQAHAwkAEwMBABcDAQAaAykATwMAAFEDAABWAxIAbQMMAHwDBwCGAwIAiwMCAJADDQClAwAAqAMAAKsDAQCxAwsAyAMBAMwDAADPAwIA1gMDANsDAQDjAwsA9QMDAPsDDgAMBAcAFgQVAC0EBwA2BAAAOQQAADsEAgBABBAAUgQAAFQEAABXBAIAWwQDAGAEAQBjBAcAbAQAAG4EBQB2BAEAeQQAAHsEAQB+BAMAgwQDAIgEAgCMBAMAkgQAAJUEAACdBAAAogQAAKUEAQCqBAEArQQAALAEAAC6BAAAwwQCAMkEBQDRBAIA1gQBANkEAADbBAEA4QQBAOQEAQDrBAEA8QQAAPQEAAD3BAAA+QQAAPsEAAD9BAAAAgUEAAkFAQAMBQcAFQUCABsFAAAdBQMAIgUBACUFBQAxBRUASAUBAEwFBABSBQMAWQUGAGMFDwB1BQsAggUAAIQFBACVBQkAqwUNALsFAgC/BQUAxwUAAMkFDADZBQAA2wUAAOAFAQDjBQAA5QUCAOkFAADrBQAA7gUAAPEFAADzBQEA9gUAAPgFAgD8BQwACgYAAAwGAQAPBgAAEQYBABQGAAAWBgEAGQYAABsGAQAeBgAAIgYAACYGAQAqBgAALQYAAC8GAAAxBgMANgYAADkGCABDBgEARgYFAE4GAQBSBgAAVAYAAFkGAgBdBgEAYAYAAGIGAQBlBgAAZwYBAGoGAABsBgEAbwYAAHEGAQB0BgAAdgYAAHkGOwC7BgQAwgYJAM4GBADUBggA3gYAAOAGYABCB08AkwcHAJwHdgAUCAEAFwhFAGUIAwBqCAAAbAgBAG8IAgB0CAAAiQgAAIsIAACNCBcAqQgkANAIBgDZCB4A/ghAAEEJAABlCQoAcgkAAHQJAQB3CQEAegkAAH8JBQCGCQAAiQkCAI4JAwCTCQAAlQkdALQJCQC/CQ4AzwkcAO0JBgD1CRoAEQoVACgKCwA1CgAAOgoAADwKAABBCh0AYQoCAGUKUQC4CiwA5gpMADQLBAA6CwEAPQsCAEELBABHCyMAcgsCAHYLCQCECwMAiQsXAKMLAQCmCwQArAsNALsLBQDCCwAAxAsVANsLAQDhCwIA5gsBAOoLCQD1CwQA+wsBAAAMAAACDAIABgwBAAkMAAALDAEAEQwEABcMBAAdDBAALwwKADwMAwBCDAQASAwkAG4MBQB1DAkAggwAAIUMCgCRDAUAnAwRALAMEwDLDAEAzwwCANMMAADVDAAA2gwDAOIMAQDlDAAA9AwAAPcMAQD/DAwAEg0BABgNAAAbDQAAIQ0CACUNAAApDQEAMw0CADsNAAA+DQAARA0AAE0NAQBQDQEAVA0AAFYNBABhDQQAaQ0GAHINCQB9DQAAgQ0EAI0NDQCcDQIAoQ0KAK0NAQCwDQMAtQ0DALoNCQDFDQcAzg0BANENGADrDSgAFQ4GACAOAAAiDgIAKA4DAC4OAAAzDgcAQw4NAFIOAQBZDgMAXg4BAGIOAgBnDgAAaQ4fAIwODACbDgUAog4HAKsOFgDEDgsA0Q4OAOEOAQDlDgMA7A4GAPYODgAHDwEACg8RAB4PBAAmDwUALg8JADkPAgA+DwcARw8LAFQPAwBZDxYAcQ8IAHsPBQCCDxYAnA8QAK4PAACwDwEAtA8cANMPAgDXDxIA6w8GAPUPAQD9DyIAIxADACgQCQAzEB0AUxARAGYQAwBrEAAAexAAAIMQAACIEAAAixAAAJIQAACVEAAAmhABAJ0QBgCmEBEAyBADAM0QAgDREAEA1BABAO8QAgD1EAQA/BAAAP8QBwAJEQAACxEBABARLQBHEQwAVREAAFcRDABpEQkAdREGAH0RAAB/ERwAnREAAJ8RCwCsEQAArhEBALcRBAC+EQUAxRELANIRBADdEQEA4BEBAOQRAQD4EQAA+hEAAPwRAAAAEgMABhIEAAwSAwAREgQAGBIEACISAAAoEgIAMBIFADcSBwBCEgMARxIAAEsSAgBPEgEAUxIPAGcSAQBqEgMAcRICAH4SAwCFEgAAiBIBAIsSHgCtEgAArxIDALkSAAC7EgAAvRIBAMASAADGEgEAyRICAM8SAwDbEgMA4BIAAOISAADmEgAA6BICAPESAAD5EgMA/xIAAAMTHAAhEwQAKBMBACsTAQAuEwEAMhMBADgTAgA9EwAAPxMAAEMTAgBKEwEATRMAAE8TAQBSEwAAWBMAAFoTAwBqEwEAbRMQAH8TBACLEwAAkBMCAJQTAACXEwoAoxMAAKUTAACnEwQArRMaAMsTAgDQEw4A4BMBAOMTCgDvEwQA9hMAAPkTAAD8EwoACBQCAA0UDAAcFAUAJRQIAC8UBQA4FBAASxQAAE0UAABPFAIAUxQIAF0UBAA="}],\
["polars_io",{"t":"KFFKKKNNECNNNNNNNNCMCNNNNNNNNNONNNNNNNNMCMMNNNNNNNNNNCCCOCMMMOCCCCCONNNNNNNNNNCNNGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNOHNNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNHONOOONNNNNNOOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJJFNNNNNNHNHNNNNNNNNNFGFFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNNNNNNNHNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNOONNNNHONNNNNNNNNNNNNNOOOOOONONNNNNNNNONNPFPPGFFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNKFNNNNNNNNHNNMNNNHNNHFFKKHNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNKKEMMMMNNNJJJJJHHHHHHHH","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriterFactory","__clone_box","__clone_box","async_glob","avro","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cloud","create_writer","csv","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","enabled","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","file_cache","finish","finish","fmt","fmt","from","from","hash","hash","init","init","into","into","ipc","json","mmap","name","ndjson","new","new","next_record_batch","offset","parquet","partition","pl_async","predicates","prelude","schema","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","utils","vzip","vzip","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","Deflate","Snappy","Snappy","__clone_box","arrow_schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","hash","init","init","init","into","into","into","new","new","schema","set_rechunk","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","PolarsObjectStore","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket","build_object_store","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","download","drop","drop","drop","drop","eq","execute","expansion","flush","fmt","fmt","from","from","from","from_url","get","get_range","get_ranges","glob","head","init","init","init","into","into","into","new","new","new","new_with_object_store","options","prefix","queue","scheme","sync_update","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","Bucket","Checksum","Client","Client","Client","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","DisableTagging","Encryption","Endpoint","Endpoint","FederatedTokenFile","File","Gcp","GoogleConfigKey","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","SkipSignature","Token","Token","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_aws","build_azure","build_gcp","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","file_cache_ttl","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","from_str","from_str","from_untyped_config","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","max_retries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_aws","with_azure","with_gcp","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_with_predicate","batched","batched_borrowed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_size","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","columns","comment_prefix","count_rows","decimal_comma","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","dtype_overwrite","encoding","eol_char","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_parse_options","has_header","hash","hash","hash","hash","hash","ignore_errors","infer_file_schema","infer_schema_length","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_reader_with_file_handle","is_compressed","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","next_batches","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_inference","schema_overwrite","separator","serialize","serialize","serialize","serialize","serialize","skip_rows","skip_rows_after_header","to_owned","to_owned","to_owned","to_owned","to_owned","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_parse_dates","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_with_inference_result","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","__clone_box","__clone_box","batch_size","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","date_format","datetime_format","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","float_precision","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","include_bom","include_bom","include_header","include_header","init","init","init","init","init","into","into","into","into","into","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","serialize","serialize","serialize_options","time_format","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FILE_CACHE_PREFIX","FileCacheEntry","borrow","borrow_mut","deref","deref_mut","drop","from","get_env_file_cache_ttl","init","init_entries_from_uri_list","into","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","update_ttl","uri","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","LZ4","ZSTD","__clone_box","__clone_box","__clone_box","__clone_box","arrow_schema","batched","batched_async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compression","count_rows","create_writer","create_writer","data","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","extension","finish","finish","finish","finish","finish","finish_with_scan_ops","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_uri","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","maintain_order","memory_map","memory_mapped","metadata","new","new","new","new","new","new","new_async","schema","schema","serialize","serialize","serialize","set_rechunk","set_rechunk","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_columns","with_columns","with_compression","with_compression","with_compression","with_compression","with_extension","with_extension","with_n_rows","with_n_rows","with_pl_flavor","with_pl_flavor","with_predicate","with_projection","with_projection","with_projection","with_row_index","with_row_index","with_row_index","with_row_limit","write_batch","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","from","from","hash","infer_schema_len","init","init","init","init","init","into","into","into","into","into","maintain_order","new","new","new","serialize","set_rechunk","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_ignore_errors","with_json_format","with_json_format","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","deref","deref_mut","drop","from","from","init","into","to_bytes","to_file","try_create_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","as_any","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","boxed","check_bound","clone","clone_into","data_type","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fields","finish","fmt","from","from","from","from","from_path","get_fields","infer_schema_len","init","init","into","into","into_data","into_iter","iter","len","low_memory","new","new","new_empty","new_null","set_validity","slice","slice","slice_typed","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ge_kernel_broadcast","tot_gt_kernel_broadcast","tot_le_kernel","tot_le_kernel_broadcast","tot_lt_kernel","tot_lt_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","try_from","try_from","try_into","try_into","try_new","type_id","type_id","validity","validity","values","values_iter","vzip","vzip","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_rechunk","with_schema","with_schema_overwrite","with_validity","with_validity","metadata","read","write","FileMetaData","FileMetaDataRef","ParquetStatistics","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","column_order","column_orders","created_by","deref","deref","deref_mut","deref_mut","deserialize","distinct_count","drop","drop","eq","fmt","fmt","from","from","from","init","init","into","into","into_thrift","key_value_metadata","key_value_metadata","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","try_from","try_from_thrift","try_into","try_into","type_id","type_id","version","vzip","vzip","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","RowGroups","__clone_box","__clone_box","batched","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finishes_this_batch","fmt","fmt","from","from","from","from","from","from_uri","get_metadata","get_metadata","hash","hash","init","init","init","init","init","into","into","into","into","into","is_finished","iter","limit_reached","low_memory","materialize_empty_df","new","new","next_batches","num_rows","num_rows","parallel","read_parallel","read_parallel","schema","schema","schema","serialize","serialize","set_low_memory","set_rechunk","set_rechunk","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_statistics","use_statistics","use_statistics","vzip","vzip","vzip","vzip","vzip","with_columns","with_hive_partition_columns","with_hive_partition_columns","with_n_rows","with_n_rows","with_predicate","with_predicate","with_projection","with_projection","with_row_index","with_row_index","with_schema","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","batched","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compression","data_pagesize_limit","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distinct_count","drop","drop","drop","drop","drop","drop","drop","drop","empty","encode_and_compress","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","full","get_writer","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","serialize","serialize","serialize","serialize","serialize","set_parallel","statistics","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_row_groups","PartitionedWriter","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","with_parallel","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","apply_predicate","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","column_stats","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","dtype","evaluate_io","fmt","fmt","from","from","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","init","into","into","new","new","null_count","num_rows","schema","serialize","serialize","should_read","to_max","to_min","to_min_max","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SerReader","SerWriter","cloud","finish","finish","new","new","set_rechunk","set_rechunk","set_rechunk","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","POLARS_TEMP_DIR_BASE_PATH","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","get_reader_bytes","get_sequential_row_statistics","is_cloud_url","materialize_projection","resolve_homedir"],"q":[[0,"polars_io"],[81,"polars_io::avro"],[147,"polars_io::cloud"],[218,"polars_io::cloud::options"],[398,"polars_io::csv"],[400,"polars_io::csv::read"],[654,"polars_io::csv::read::schema_inference"],[678,"polars_io::csv::write"],[818,"polars_io::file_cache"],[839,"polars_io::ipc"],[1092,"polars_io::json"],[1188,"polars_io::mmap"],[1210,"polars_io::ndjson"],[1212,"polars_io::ndjson::core"],[1306,"polars_io::parquet"],[1309,"polars_io::parquet::metadata"],[1361,"polars_io::parquet::read"],[1497,"polars_io::parquet::write"],[1713,"polars_io::partition"],[1729,"polars_io::pl_async"],[1750,"polars_io::predicates"],[1804,"polars_io::prelude"],[1814,"polars_io::utils"],[1827,"dyn_clone::sealed"],[1828,"polars_io::options"],[1829,"polars_io::shared"],[1830,"alloc::boxed"],[1831,"std::io"],[1832,"core::result"],[1833,"serde::de"],[1834,"std::path"],[1835,"polars_core::frame"],[1836,"polars_error"],[1837,"core::fmt"],[1838,"core::hash"],[1839,"polars_arrow::record_batch"],[1840,"core::option"],[1841,"serde::ser"],[1842,"core::any"],[1843,"polars_io::avro::read"],[1844,"polars_arrow::datatypes::schema"],[1845,"polars_io::avro::write"],[1846,"polars_core::schema"],[1847,"alloc::string"],[1848,"alloc::vec"],[1849,"polars_io::cloud::glob"],[1850,"object_store"],[1851,"alloc::sync"],[1852,"polars_io::cloud::polars_object_store"],[1853,"object_store::path"],[1854,"tokio::io::async_write"],[1855,"core::marker"],[1856,"polars_io::cloud::adaptors"],[1857,"std::io::error"],[1858,"crossterm::command"],[1859,"url"],[1860,"bytes::bytes"],[1861,"core::ops::range"],[1862,"core::ops::function"],[1863,"parquet_format_safe::thrift::varint::decode"],[1864,"object_store::aws::builder"],[1865,"object_store::azure::builder"],[1866,"object_store::gcp::builder"],[1867,"core::convert"],[1868,"core::iter::traits::collect"],[1869,"polars_io::csv::read::reader"],[1870,"polars_io::csv::read::read_impl::batched"],[1871,"polars_io::csv::read::options"],[1872,"std::fs"],[1873,"polars_core::datatypes::dtype"],[1874,"polars_io::csv::write::writer"],[1875,"polars_io::csv::write::options"],[1876,"core::num::nonzero"],[1877,"polars_io::file_cache::entry"],[1878,"polars_io::ipc::ipc_stream"],[1879,"polars_io::ipc::write"],[1880,"futures_io::if_std"],[1881,"polars_io::ipc::ipc_file"],[1882,"polars_io::ipc::ipc_reader_async"],[1883,"polars_arrow::io::ipc::read::file"],[1884,"polars_arrow::array::struct_"],[1885,"polars_arrow::array"],[1886,"polars_arrow::datatypes"],[1887,"polars_arrow::datatypes::field"],[1888,"polars_arrow::array::growable::structure"],[1889,"polars_arrow::array::struct_::mutable"],[1890,"polars_arrow::bitmap::immutable"],[1891,"polars_arrow::scalar"],[1892,"polars_arrow::array::struct_::iterator"],[1893,"polars_arrow::bitmap::utils::iterator"],[1894,"polars_arrow::bitmap::utils::zip_validity"],[1895,"polars_parquet::parquet::metadata::file_metadata"],[1896,"polars_parquet::parquet::metadata::column_order"],[1897,"polars_parquet::parquet::metadata::row_metadata"],[1898,"polars_parquet::arrow::read::statistics"],[1899,"parquet_format_safe::parquet_format"],[1900,"polars_parquet::parquet::metadata::schema_descriptor"],[1901,"polars_parquet::parquet::error"],[1902,"polars_io::parquet::read::reader"],[1903,"polars_io::parquet::read::read_impl"],[1904,"polars_io::parquet::read::options"],[1905,"polars_core::series"],[1906,"polars_io::parquet::write::writer"],[1907,"polars_io::parquet::write::batched_writer"],[1908,"polars_io::parquet::write::options"],[1909,"polars_parquet::arrow::write"],[1910,"polars_parquet::parquet::write"],[1911,"core::iter::traits::iterator"],[1912,"polars_parquet::arrow::write::file"],[1913,"std::sync::mutex"],[1914,"core::future::future"],[1915,"tokio::runtime::task::join"],[1916,"polars_core::datatypes::field"],[1917,"avro_schema::file"],[1918,"polars_io::cloud::object_store_setup"],[1919,"polars_io::csv::read::parser"],[1920,"polars_io::csv::read::utils"],[1921,"polars_io::file_cache::cache"],[1922,"polars_io::file_cache::utils"],[1923,"polars_io::parquet::read::utils"]],"i":[0,0,0,0,0,0,5,6,0,0,5,6,5,6,5,6,5,6,0,7,0,6,5,6,5,6,5,6,5,6,6,5,6,5,5,5,6,6,6,7,0,16,8,5,6,5,6,5,6,5,6,5,6,0,0,0,5,0,16,8,23,5,0,0,0,0,0,6,5,6,5,6,5,6,5,6,5,6,0,5,6,0,0,0,0,31,31,31,31,31,28,28,32,31,28,32,31,31,31,28,32,31,28,32,31,28,32,31,31,31,31,31,28,32,31,28,32,31,31,28,32,31,28,32,31,28,32,28,28,31,28,32,31,28,32,31,28,32,31,28,32,31,28,32,28,32,28,0,0,0,43,47,39,43,47,39,43,39,0,43,43,39,47,39,43,47,39,43,43,47,47,39,43,39,47,39,47,39,43,47,39,43,39,43,43,43,0,43,47,39,43,47,39,43,47,39,43,47,0,39,47,39,47,43,47,39,43,47,39,43,47,39,43,47,39,43,47,47,61,60,61,0,62,61,63,63,0,60,62,60,60,61,62,61,61,0,0,60,60,61,60,60,60,61,60,60,61,61,63,63,0,63,60,60,61,61,61,60,60,61,60,62,62,60,61,60,61,60,61,61,61,60,60,38,61,62,60,61,62,60,38,63,61,62,60,38,63,61,62,38,38,38,60,38,61,62,60,38,61,62,38,60,38,63,61,62,60,38,63,61,62,60,38,61,62,60,38,63,61,62,60,38,63,61,62,60,60,60,38,38,38,61,61,61,62,62,62,38,60,38,61,62,60,38,63,61,62,60,63,61,62,38,60,38,61,62,60,38,63,61,62,60,38,63,61,62,38,60,38,61,62,60,38,61,62,60,38,63,61,62,60,38,63,61,62,60,38,63,61,62,60,38,63,61,62,38,38,38,0,0,78,78,0,0,0,0,0,0,76,77,78,0,0,77,76,74,75,76,77,78,68,68,68,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,74,75,76,77,78,74,75,76,77,78,74,75,0,75,74,75,76,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,75,76,77,78,73,72,68,74,75,76,77,78,74,75,75,74,75,76,77,78,74,74,74,75,75,75,76,76,76,77,77,77,78,78,78,68,74,75,76,77,78,73,72,68,74,75,76,77,77,78,74,74,74,75,76,77,78,74,0,74,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,0,74,74,75,74,74,68,77,77,77,73,72,75,74,74,74,75,74,74,74,74,74,0,74,75,74,75,76,77,78,74,74,74,75,76,77,78,75,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,75,73,72,68,74,75,76,77,78,74,73,72,68,74,75,76,77,78,74,74,75,75,74,75,75,74,74,74,74,75,74,74,75,74,74,74,75,74,74,74,74,74,74,75,74,74,75,75,0,81,81,81,81,81,81,81,81,81,81,81,81,81,0,81,81,81,81,81,81,81,81,81,88,0,0,0,88,88,88,0,0,86,87,88,86,84,84,85,86,87,88,84,85,86,87,88,86,87,88,86,87,88,87,87,86,87,88,84,85,86,87,88,84,85,86,87,88,86,87,88,84,85,86,87,88,86,87,88,86,86,86,87,87,87,88,88,88,84,85,87,86,87,88,84,85,86,87,88,86,87,88,84,86,84,86,84,85,86,87,88,84,85,86,87,88,87,86,84,84,87,87,87,87,86,87,88,86,87,86,87,88,84,85,86,87,88,84,85,86,87,88,84,85,86,87,88,84,85,86,87,88,84,84,84,84,84,84,84,84,84,84,85,0,0,0,91,91,91,91,91,91,0,91,0,91,91,91,91,91,91,91,91,91,0,0,0,0,0,0,0,0,0,0,0,0,100,100,97,98,99,100,92,93,93,106,101,92,107,104,93,94,105,97,98,99,100,106,101,92,107,104,93,94,105,97,98,99,100,97,98,99,100,97,98,99,100,99,101,104,105,101,104,105,98,99,100,106,101,92,107,104,93,94,105,97,98,99,100,106,101,92,107,104,93,94,105,97,98,99,100,97,99,100,106,101,92,107,104,93,94,105,97,98,99,100,97,99,100,99,99,99,100,100,100,104,105,106,92,107,93,94,106,97,99,100,106,101,92,107,104,93,94,105,97,98,99,100,101,97,99,100,106,101,92,107,104,93,94,105,97,98,99,100,106,101,92,107,104,93,94,105,97,98,99,100,99,97,106,101,106,92,107,104,93,105,93,106,92,97,99,100,106,92,97,98,99,100,106,101,92,107,104,93,94,105,97,98,99,100,106,101,92,107,104,93,94,105,97,98,99,100,106,101,92,107,104,93,94,105,97,98,99,100,106,101,92,107,104,93,94,105,97,98,99,100,106,92,107,104,93,105,104,105,106,92,107,93,98,106,92,98,106,92,98,98,94,0,113,0,113,0,0,0,109,113,110,112,111,109,113,110,112,111,109,109,109,109,113,110,112,111,109,113,110,112,111,109,109,113,110,112,111,109,109,109,109,109,110,111,109,113,110,112,111,109,109,111,113,110,112,111,109,113,110,112,111,109,109,110,112,111,109,111,109,113,110,112,111,109,113,110,112,111,109,113,110,112,111,109,113,110,112,111,109,111,111,110,111,111,111,111,112,83,83,0,83,0,83,83,83,83,83,83,83,83,83,83,70,70,0,83,83,83,83,0,0,0,0,116,116,116,116,116,121,116,121,116,116,116,116,116,116,121,116,121,116,121,116,116,116,116,121,116,121,116,116,116,121,116,121,121,116,121,116,116,116,116,116,121,121,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,121,116,121,116,116,121,116,116,116,116,116,121,116,121,121,121,121,121,121,121,121,116,116,0,0,0,0,0,0,130,133,130,133,130,130,130,130,130,130,133,130,133,130,0,133,133,130,133,133,130,133,133,130,133,130,133,130,130,130,130,133,133,133,130,130,130,130,130,133,130,130,133,130,133,130,130,133,130,143,0,143,143,0,0,0,0,143,142,143,139,141,140,139,141,142,143,140,139,141,142,143,142,143,142,143,143,140,139,141,142,143,140,139,141,142,143,142,143,140,139,141,142,143,142,143,142,142,142,143,143,143,139,141,140,142,143,140,139,141,142,143,141,139,141,142,143,140,139,141,142,143,140,139,141,142,143,140,140,140,142,0,140,139,140,139,141,142,139,141,140,139,141,142,143,139,139,141,142,143,140,139,141,142,143,140,139,141,142,143,140,139,141,142,143,139,141,142,140,139,141,142,143,139,139,141,139,141,139,141,139,141,139,141,139,0,149,0,149,0,149,149,0,0,0,0,149,0,149,149,0,148,149,150,151,152,153,146,147,146,148,149,150,151,152,153,147,146,148,149,150,151,152,153,148,149,150,151,152,153,148,149,150,151,152,153,148,148,148,149,153,147,146,148,149,150,151,152,153,147,146,148,149,150,151,152,153,148,149,150,151,152,153,153,147,146,148,149,150,151,152,153,153,147,148,149,150,151,152,153,148,148,148,149,149,149,150,150,150,151,151,151,152,152,152,153,153,153,147,146,148,149,150,151,152,153,147,146,148,149,150,151,152,153,153,147,148,149,150,151,152,153,147,146,148,149,150,151,152,153,147,146,148,149,150,151,152,153,153,153,148,153,153,146,153,148,148,149,150,151,152,153,146,148,148,149,150,151,152,153,147,146,148,149,150,151,152,153,147,146,148,149,150,151,152,153,150,151,152,147,146,148,149,150,151,152,153,147,146,148,149,150,151,152,153,146,146,146,146,147,147,0,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,0,0,162,162,162,162,162,162,162,162,0,162,162,164,162,162,162,0,162,162,0,0,0,0,0,0,69,168,167,168,167,167,168,167,168,167,168,167,168,167,168,69,168,167,168,167,168,168,168,168,168,167,168,167,168,167,168,167,168,167,167,168,167,166,168,168,168,168,167,168,167,168,167,168,167,0,0,0,16,8,16,8,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{j}}}j}{{{b{l}}}l}{{{b{c}}{b{he}}}f{}{}}0`{{{b{n}}c}{{Ab{A`}}}Ad}`{{}l}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{j}}}Aj}{c{{Ah{l}}}Aj}{Aff}0`{{{b{j}}{b{j}}}Al}{{{b{l}}{b{l}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{n}}}An}`{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{{{b{j}}{b{hBf}}}Bh}{{{b{l}}{b{hBf}}}Bh}{cc{}}0{{{b{j}}{b{hc}}}fBj}{{{b{l}}{b{hc}}}fBj}{{}Af}0{ce{}{}}0`````{cB`Bl}{cA`Ad}{{{b{hBn}}}{{Bd{{Cb{C`}}}}}}```````{{{b{j}}c}AhCd}{{{b{l}}c}AhCd}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0`88````````{{{b{c}}d}f{}}{{{b{h{Ch{c}}}}}{{Bd{Cj}}}{BlCl}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00{{{b{Cn}}}Cn}{{{b{c}}{b{he}}}f{}{}}{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{Aff}00{{{b{Cn}}{b{Cn}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{Ch{c}}}{{Bd{Bb}}}{BlCl}}{{{b{h{D`{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{Cn}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}00{{{b{Cn}}{b{hc}}}fBj}{{}Af}00{ce{}{}}00{c{{Ch{c}}}{BlCl}}{c{{D`{c}}}Ad}{{{b{h{Ch{c}}}}}{{Bd{Dd}}}{BlCl}}{{{Ch{c}}Al}{{Ch{c}}}{BlCl}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00777{{{Ch{c}}{Cb{{Dh{Df}}}}}{{Ch{c}}}{BlCl}}{{{D`{c}}{Cb{Cn}}}{{D`{c}}}Ad}{{{Ch{c}}{Cb{Af}}}{{Ch{c}}}{BlCl}}{{{D`{c}}Df}{{D`{c}}}Ad}{{{Ch{c}}{Cb{{Dh{Af}}}}}{{Ch{c}}}{BlCl}}```{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00`{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Ed{Dn{Eb{E`}}}}}}}}{{{b{Ef}}}Ef}{{{b{c}}{b{he}}}f{}{}}{{}Dn}{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{{{b{Ef}}{b{Eh}}{b{hc}}}{{Bd{f}}}{EjEl}}{{{b{hEn}}}f}{Aff}00{{{b{Dn}}{b{Dn}}}Al}{{{b{hc}}e}{{Ah{{b{hg}}F`}}}{}Fb{}}`{{{b{hEn}}}{{Fd{f}}}}{{{b{Dn}}{b{hBf}}}Bh}{{{b{Ef}}{b{hBf}}}Bh}{cc{}}00{{{b{Ff}}}{{Bd{Dn}}}}{{{b{Ef}}{b{Eh}}}{{Bd{Fh}}}}{{{b{Ef}}{b{Eh}}{Fj{Af}}}{{Bd{Fh}}}}{{{b{Ef}}{b{Eh}}{b{{Fl{{Fj{Af}}}}}}}{{Bd{{Dh{Fh}}}}}}{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Dh{Df}}}}}}{{{b{Ef}}{b{Eh}}}{{Bd{Fn}}}}{{}Af}00{ce{}{}}00{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{En}}}}{{{b{Dj}}}{{Bd{Dn}}}}{{{Eb{E`}}}Ef}{{{Eb{E`}}Eh}{{Bd{En}}}}``{{{b{hc}}e}{{Ah{{b{hg}}F`}}}{}Fb{}}`{{{b{hc}}i}{{Ah{gF`}}}{}{}{}{{Gb{{b{he}}}{{G`{g}}}}}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00999{{{b{hEn}}{b{{Fl{Gd}}}}}{{Fd{Af}}}}{{{b{hc}}e}{{Ah{AfF`}}}{}Gf}``````````````````````````````````````````````````````{{{b{c}}d}f{}}000{{{b{Gh}}}{{b{Dj}}}}{{{b{Gj}}}{{b{Dj}}}}{{{b{Gl}}}{{b{Dj}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Dl}}{b{Dj}}}{{Bd{{`{E`}}}}}}00{{{b{Gh}}}Gh}{{{b{Dl}}}Dl}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{c}}{b{he}}}f{}{}}000{{}Dl}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Gh}}}Aj}{c{{Ah{Dl}}}Aj}{c{{Ah{Gj}}}Aj}{c{{Ah{Gl}}}Aj}{Aff}0000{{{b{Gh}}{b{Gh}}}Al}{{{b{Dl}}{b{Dl}}}Al}{{{b{Gn}}{b{Gn}}}Al}{{{b{Gj}}{b{Gj}}}Al}{{{b{Gl}}{b{Gl}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000`{{{b{Gh}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Dl}}{b{hBf}}}Bh}{{{b{Gj}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Gl}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}0000{{{b{Dj}}}{{Ah{Gh}}}}{{{b{Dj}}}{{Ah{Gnc}}}{}}{{{b{Dj}}}{{Ah{Gj}}}}{{{b{Dj}}}{{Ah{Gl}}}}{{{b{Dj}}g}{{Bd{Dl}}}{{H`{Dj}}}{{Hb{Df}}}{{Hf{}{{Hd{{Ed{ce}}}}}}}}{{{b{Gh}}{b{hc}}}fBj}{{{b{Dl}}{b{hc}}}fBj}{{{b{Gj}}{b{hc}}}fBj}{{{b{Gl}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000`{{{b{Gh}}c}AhCd}{{{b{Dl}}c}AhCd}{{{b{Gj}}c}AhCd}{{{b{Gl}}c}AhCd}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000077777{{Dle}Dl{{Hb{Df}}}{{Hf{}{{Hd{{Ed{Ghc}}}}}}}}{{Dle}Dl{{Hb{Df}}}{{Hf{}{{Hd{{Ed{Gjc}}}}}}}}{{Dle}Dl{{Hb{Df}}}{{Hf{}{{Hd{{Ed{Glc}}}}}}}}`````````````````{{{b{c}}d}f{}}0000{{{Hh{c}}{Cb{{Eb{Hj}}}}}{{Hh{c}}}Hl}{{{Hh{{Ab{Hl}}}}{Cb{Hn}}}{{Bd{I`}}}}{{{b{h{Hh{c}}}}}{{Bd{Ib}}}Hl}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000`{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{Ij}}}Ij}{{{b{Il}}}Il}{{{b{c}}{b{he}}}f{}{}}0000``{{{b{An}}Gd{Cb{Gd}}{Cb{{b{Ij}}}}GdAl}{{Bd{Af}}}}`{{}Id}{{}If}{{}Ih}{Af{{b{c}}}{}}0000000{Af{{b{hc}}}{}}0000000{c{{Ah{Id}}}Aj}{c{{Ah{If}}}Aj}{c{{Ah{Ih}}}Aj}{c{{Ah{Ij}}}Aj}{c{{Ah{Il}}}Aj}{Aff}0000000```{{{b{Id}}{b{Id}}}Al}{{{b{If}}{b{If}}}Al}{{{b{Ih}}{b{Ih}}}Al}{{{b{Ij}}{b{Ij}}}Al}{{{b{Il}}{b{Il}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000{{{Hh{c}}}{{Bd{Bb}}}Hl}{{{b{Id}}{b{hBf}}}Bh}{{{b{If}}{b{hBf}}}Bh}{{{b{Ih}}{b{hBf}}}Bh}{{{b{Ij}}{b{hBf}}}Bh}{{{b{Il}}{b{hBf}}}Bh}{cc{}}00000{{{b{Dj}}}Ij}11{{{b{Id}}}{{Eb{If}}}}`{{{b{Id}}{b{hc}}}fBj}{{{b{If}}{b{hc}}}fBj}{{{b{Ih}}{b{hc}}}fBj}{{{b{Ij}}{b{hc}}}fBj}{{{b{Il}}{b{hc}}}fBj}```{{}Af}0000000{ce{}{}}0000000{{Idc}{{Hh{c}}}Hl}{{{b{{Fl{Gd}}}}}Al}`{{Idc}Id{{In{If}{{G`{If}}}}}}```{c{{Hh{c}}}Hl}<{DfIj}{GdIj}{{{b{hIb}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{hI`}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}`````````````{{{b{Id}}c}AhCd}{{{b{If}}c}AhCd}{{{b{Ih}}c}AhCd}{{{b{Ij}}c}AhCd}{{{b{Il}}c}AhCd}``{{{b{c}}}e{}{}}0000`{c{{Ah{e}}}{}{}}000000000000000{{Id{Cb{An}}}{{Bd{{Hh{J`}}}}}}`{{{b{c}}}Cf{}}0000000{{{b{hId}}{b{Jb}}}f}{ce{}{}}0000000{{IdAf}Id}{{Id{Cb{{Eb{{Fl{Df}}}}}}}Id}{{If{Cb{c}}}If{{Hb{Ij}}}}{{IfAl}If}{{Id{Cb{{Eb{{Dh{Jd}}}}}}}Id}{{IfIh}If}{{IfGd}If}{{IdAl}Id}0{{Id{Cb{Af}}}Id}1500{{If{Cb{Il}}}If}{{IdIf}Id}{{Id{Cb{c}}}Id{{Hb{An}}}}{{Id{Cb{{Eb{{Dh{Af}}}}}}}Id}{{If{Cb{Gd}}}If}66{{Id{Cb{j}}}Id}>{{Id{Cb{Hn}}}Id}09??<<`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{Jb}}}Jb}{{{b{c}}{b{he}}}f{}{}}{{}Jb}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{b{Jb}}{b{hBf}}}Bh}{cc{}}{{{b{Jb}}}Af}{{{b{Jb}}}Hn}{{{b{Jf}}Gd{Cb{Af}}Al{Cb{{b{Dd}}}}AfAf{Cb{{b{Ij}}}}{Cb{Gd}}Gd{Cb{{b{Il}}}}AlAl{b{h{Cb{Af}}}}Al}{{Bd{{Ed{DdAfAf}}}}}}{{}Af}{ce{}{}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}{{{b{Jf}}{b{Id}}}{{Bd{Jb}}}}1{{{b{c}}}Cf{}}4{{JbHn}Jb}`````````{{{b{c}}d}f{}}00`{{{Jh{c}}{b{Dd}}}{{Bd{{Jj{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Jl}}}Jl}{{{b{Jn}}}Jn}{{{b{K`}}}K`}{{{b{c}}{b{he}}}f{}{}}00``{{}Jl}{{}Jn}{{}K`}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Jl}}}Aj}{c{{Ah{Jn}}}Aj}{c{{Ah{K`}}}Aj}{Aff}0000{{{b{Jl}}{b{Jl}}}Al}{{{b{Jn}}{b{Jn}}}Al}{{{b{K`}}{b{K`}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000{{{b{h{Jh{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Jj{c}}}}}{{Bd{f}}}Ad}`{{{b{Jl}}{b{hBf}}}Bh}{{{b{Jn}}{b{hBf}}}Bh}{{{b{K`}}{b{hBf}}}Bh}{cc{}}0000{{{b{Jl}}{b{hc}}}fBj}{{{b{Jn}}{b{hc}}}fBj}{{{b{K`}}{b{hc}}}fBj}{{{Jh{c}}Al}{{Jh{c}}}Ad}`0`{{}Af}0000{ce{}{}}0000``{{{Jh{c}}Af}{{Jh{c}}}Ad}{c{{Jh{c}}}Ad}````{{{b{Jl}}c}AhCd}{{{b{Jn}}c}AhCd}{{{b{K`}}c}AhCd}``{{{b{c}}}e{}{}}00{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Jh{c}}Kb}{{Jh{c}}}Ad}{{{Jh{c}}{Cb{Df}}}{{Jh{c}}}Ad}0{{{Jh{c}}{Cb{Af}}}{{Jh{c}}}Ad}{{{Jh{c}}Df}{{Jh{c}}}Ad}0{{{Jh{c}}Gd}{{Jh{c}}}Ad}{{{Jh{c}}K`}{{Jh{c}}}Ad}14{{{b{h{Jj{c}}}}{b{Bb}}}{{Bd{f}}}Ad}```{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{cc{}}{{}Kd}{{}Af}{{c{Cb{{b{Dl}}}}}{{Bd{{Dh{{Eb{Kf}}}}}}}{{H`{{Fl{{Eb{Dj}}}}}}}}{ce{}{}}{c{{Ah{e}}}{}{}}0{{{b{Kf}}}{{Bd{J`}}}}0{{{b{c}}}Cf{}}{{{b{Kf}}Kd}f}{{{b{Kf}}}{{b{{Eb{Dj}}}}}}5``````````````{{{b{c}}d}f{}}000{{{b{h{Kh{c}}}}}{{Bd{Cj}}}Bl}{{{Kj{c}}{b{Dd}}}{{Bd{{Kl{c}}}}}Ad}{{{Kj{c}}{b{Dd}}}{{Bd{{`{c}}}}}{KnElL`}}{{{b{c}}}{{b{e}}}{}{}}00000000000{{{b{hc}}}{{b{he}}}{}{}}00000000000{{{b{Lb}}}Lb}{{{b{Ld}}}Ld}{{{b{Lf}}}Lf}{{{b{Lh}}}Lh}{{{b{c}}{b{he}}}f{}{}}000`{{{b{Lj}}{Cb{{b{Ll}}}}}{{Bd{Ln}}}}{{{b{M`}}c}{{Ab{A`}}}Ad}{{{b{Mb}}c}{{Ab{A`}}}Ad}{{{b{Lj}}{Cb{{b{Ll}}}}LdAl}{{Bd{Bb}}}}{{}M`}{{}Mb}{{}Ld}{{}Lf}{{}Lh}{Af{{b{c}}}{}}00000000000{Af{{b{hc}}}{}}00000000000{c{{Ah{Lb}}}Aj}{c{{Ah{Lf}}}Aj}{c{{Ah{Lh}}}Aj}{Aff}00000000000{{{b{Lb}}{b{Lb}}}Al}{{{b{Lf}}{b{Lf}}}Al}{{{b{Lh}}{b{Lh}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{M`}}}An}{{{b{Mb}}}An}{{{Md{c}}}{{Bd{Bb}}}Hl}{{{Kh{c}}}{{Bd{Bb}}}Bl}{{{b{h{Mf{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Kj{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Kl{c}}}}}{{Bd{f}}}Ad}{{{Md{c}}{Cb{{Eb{Hj}}}}Al}{{Bd{Bb}}}Hl}{{{b{Lb}}{b{hBf}}}Bh}{{{b{Lf}}{b{hBf}}}Bh}{{{b{Lh}}{b{hBf}}}Bh}{cc{}}00000000000{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{Lj}}}}{{{b{Lb}}{b{hc}}}fBj}{{{b{Lf}}{b{hc}}}fBj}{{{b{Lh}}{b{hc}}}fBj}{{}Af}00000000000{ce{}{}}00000000000``{{{Md{c}}{Cb{An}}}{{Md{c}}}Hl}{{{b{Lj}}}{{Bd{Ll}}}}{c{{Md{c}}}Hl}{c{{Kh{c}}}Bl}{c{{Mf{c}}}Ad}{{}M`}{c{{Kj{c}}}Ad}{{}Mb}{c{{Kj{c}}}{KnElL`}}{{{b{h{Md{c}}}}}{{Bd{Mh}}}Hl}{{{b{h{Kh{c}}}}}{{Bd{Dd}}}Bl}{{{b{Lb}}c}AhCd}{{{b{Lf}}c}AhCd}{{{b{Lh}}c}AhCd}{{{Md{c}}Al}{{Md{c}}}Hl}{{{Kh{c}}Al}{{Kh{c}}}Bl}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}00000000000000000000000{{{b{c}}}Cf{}}00000000000{ce{}{}}00000000000{{{Md{c}}{Cb{{Dh{Df}}}}}{{Md{c}}}Hl}{{{Kh{c}}{Cb{{Dh{Df}}}}}{{Kh{c}}}Bl}{{{Mf{c}}{Cb{Lh}}}{{Mf{c}}}{}}{{M`{Cb{Lh}}}M`}{{{Kj{c}}{Cb{Lh}}}{{Kj{c}}}Ad}{{Mb{Cb{Lh}}}Mb}{{M`An}M`}{{MbAn}Mb}{{{Md{c}}{Cb{Af}}}{{Md{c}}}Hl}{{{Kh{c}}{Cb{Af}}}{{Kh{c}}}Bl}{{{Mf{c}}Al}{{Mf{c}}}{}}{{{Kj{c}}Al}{{Kj{c}}}Ad}{{Ldc}Ld{{Hb{{Cb{{Eb{Hj}}}}}}}}{{{Md{c}}{Cb{{Dh{Af}}}}}{{Md{c}}}Hl}{{{Kh{c}}{Cb{{Dh{Af}}}}}{{Kh{c}}}Bl}{{Ld{Cb{{Eb{{Fl{Df}}}}}}}Ld}{{{Md{c}}{Cb{j}}}{{Md{c}}}Hl}{{{Kh{c}}{Cb{j}}}{{Kh{c}}}Bl}{{Ldc}Ld{{Hb{{Cb{j}}}}}}{{Ldc}Ld{{Hb{{Cb{Af}}}}}}{{{b{h{Kl{c}}}}{b{Bb}}}{{Bd{f}}}Ad}```````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Mj}}}Mj}{{{b{c}}{b{he}}}f{}{}}{{}Mj}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Mj}}}Aj}{Aff}0000{{{b{Mj}}{b{Mj}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{b{h{Ml{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{Mn{c}}}{{Bd{Bb}}}Hl}{{{b{Mj}}{b{hBf}}}Bh}{cc{}}0000{{{b{Mj}}{b{hc}}}fBj}{{{Mn{c}}{Cb{Kb}}}{{Mn{c}}}Hl}{{}Af}0000{ce{}{}}0000`{c{{Ml{c}}}Ad}{c{{N`{c}}}Ad}{c{{Mn{c}}}Hl}{{{b{Mj}}c}AhCd}{{{Mn{c}}Al}{{Mn{c}}}Hl}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Mn{c}}Kb}{{Mn{c}}}Hl}4{{{Ml{c}}Nb}{{Ml{c}}}Ad}{{{Mn{c}}Nb}{{Mn{c}}}Hl}{{{Mn{c}}{Cb{{Dh{Df}}}}}{{Mn{c}}}Hl}{{{Mn{c}}Hn}{{Mn{c}}}Hl}{{{Mn{c}}{b{Dd}}}{{Mn{c}}}Hl}{{{b{h{N`{c}}}}{b{Bb}}}{{Bd{f}}}Ad}`````{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{Jf}}}{{b{{Fl{Gd}}}}}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{b{hc}}}JfHl}{cc{}}{{}Af}{ce{}{}}{{{b{Hl}}}{{Cb{{b{{Fl{Gd}}}}}}}}{{{b{Hl}}}{{Cb{{b{J`}}}}}}{{{b{Nd}}}{{Bd{J`}}}}{c{{Ah{e}}}{}{}}0{{{b{c}}}Cf{}}5`{{{b{hc}}{Cb{Kb}}}{{Bd{Dd}}}Nf}``{{{b{c}}d}f{}}{{{b{Nh}}Af}{{Ed{NhNh}}}}{Nh{{Eb{Nj}}}}{{{b{Nh}}}{{b{Nl}}}}{{{b{hNh}}}{{b{hNl}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{Nh{{Ab{Nj}}}}{{{b{Nh}}Af}Al}{{{b{Nh}}}Nh}{{{b{c}}{b{he}}}f{}{}}{{{b{Nh}}}{{b{Nn}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{Aff}0{{{b{Nh}}{b{Nh}}}Al}{{{b{Nh}}{b{{b{Nj}}}}}Al}{{{b{Nh}}}{{b{{Fl{O`}}}}}}{{{Ob{c}}}{{Bd{Bb}}}Hl}{{{b{Nh}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}{OdNh}1{OfNh}{c{{Bd{{Ob{J`}}}}}{{Hb{An}}}}{{{b{Nn}}}{{b{{Fl{O`}}}}}}{{{Ob{c}}{Cb{Kb}}}{{Ob{c}}}Hl}{{}Af}0{ce{}{}}0{Nh{{Ed{{Dh{O`}}{Dh{{Ab{Nj}}}}{Cb{Oh}}}}}}{{{b{Nh}}}}{{{b{Nh}}}{{A@`{{Dh{{Ab{Oj}}}}OlOn}}}}{{{b{Nh}}}Af}{{{Ob{c}}Al}{{Ob{c}}}Hl}{c{{Ob{c}}}Hl}{{Nn{Dh{{Ab{Nj}}}}{Cb{Oh}}}Nh}{NnNh}{{NnAf}Nh}{{{b{hNh}}{Cb{Oh}}}f}{{{b{hNh}}AfAf}f}0{{{b{c}}AfAf}e{}{}}011{{NhAfAf}Nh}0{{{b{Nh}}Af}{{Ed{{Ab{Nj}}{Ab{Nj}}}}}}0{{{b{hNh}}}{{Cb{Oh}}}}{{{b{Nh}}}{{Ab{Nj}}}}{{{b{c}}}e{}{}}{{{b{Nh}}{b{Nh}}}Oh}{{{b{Nh}}b}Oh}00101010{c{{Ah{e}}}{}{}}000{{Nn{Dh{{Ab{Nj}}}}{Cb{Oh}}}{{Ah{NhA@b}}}}{{{b{c}}}Cf{}}0{{{b{Nh}}}{{Cb{{b{Oh}}}}}}0{{{b{Nh}}}{{b{{Fl{{Ab{Nj}}}}}}}}{{{b{Nh}}}Ol}{ce{}{}}0{{{Ob{c}}{Cb{Kb}}}{{Ob{c}}}Hl}{{{Ob{c}}Al}{{Ob{c}}}Hl}{{{Ob{c}}{Cb{Af}}}{{Ob{c}}}Hl}0{{{Ob{c}}{Cb{e}}}{{Ob{c}}}Hl{{Hb{An}}}}2{{{Ob{c}}Hn}{{Ob{c}}}Hl}{{{Ob{c}}{b{Dd}}}{{Ob{c}}}Hl}{{Nh{Cb{Oh}}}Nh}{{{b{Nh}}{Cb{Oh}}}{{Ab{Nj}}}}``````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{A@d}}}A@d}{{{b{c}}{b{he}}}f{}{}}{{{b{A@d}}Af}A@f}``{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{{{b{O`}}{b{A@h}}}{{Ah{A@jA@b}}}}`{Aff}0{{{b{A@j}}{b{A@j}}}Al}{{{b{A@j}}{b{hBf}}}{{Ah{fDb}}}}{{{b{A@d}}{b{hBf}}}{{Ah{fDb}}}}{A@lA@j}{cc{}}0{{}Af}0{ce{}{}}0{A@dA@n}{{{b{A@d}}}{{b{{Cb{{Dh{AA`}}}}}}}}``````{{{b{A@d}}}{{b{AAb}}}}`{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}0{A@n{{Ah{A@dAAd}}}}11{{{b{c}}}Cf{}}0`77`````````{{{b{c}}d}f{}}0{{{AAf{c}}Af}{{Bd{AAh}}}Hl}{{AAjAf}{{Bd{AAh}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{AAl}}}AAl}{{{b{AAn}}}AAn}{{{b{c}}{b{he}}}f{}{}}0{{}AAn}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{AAl}}}Aj}{c{{Ah{AAn}}}Aj}{Aff}0000{{{b{AAl}}{b{AAl}}}Al}{{{b{AAn}}{b{AAn}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{AAf{c}}}{{Bd{Bb}}}Hl}{AAj{{Bd{Bb}}}}{{{b{AAh}}Af}Al}{{{b{AAl}}{b{hBf}}}Bh}{{{b{AAn}}{b{hBf}}}Bh}{cc{}}0000{{{b{Dj}}{Cb{{b{Dl}}}}{Cb{Mh}}{Cb{AB`}}}{{Bd{AAj}}}}{{{b{h{AAf{c}}}}}{{Bd{{b{AB`}}}}}Hl}{{{b{hAAj}}}{{Bd{{b{AB`}}}}}}{{{b{AAl}}{b{hc}}}fBj}{{{b{AAn}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000{{{b{AAh}}}Al}`0`{{{Cb{{b{{Fl{Af}}}}}}{b{Cj}}{Cb{{b{{Fl{ABb}}}}}}{Cb{{b{j}}}}}Bb}`{c{{AAf{c}}}Hl}{{{b{hAAh}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{h{AAf{c}}}}}{{Bd{Af}}}Hl}{{{b{hAAj}}}{{Bd{Af}}}}`{{{AAf{c}}AAn}{{AAf{c}}}Hl}{{AAjAAn}AAj}{{{b{AAh}}}{{b{Mh}}}}{{{b{h{AAf{c}}}}}{{Bd{Mh}}}Hl}{{{b{hAAj}}}{{Bd{Mh}}}}{{{b{AAl}}c}AhCd}{{{b{AAn}}c}AhCd}{{{AAf{c}}Al}{{AAf{c}}}Hl}0{{AAjAl}AAj}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000043`{ce{}{}}0000{{{AAf{c}}{Cb{{Dh{Df}}}}}{{AAf{c}}}Hl}{{{AAf{c}}{Cb{{Dh{ABb}}}}}{{AAf{c}}}Hl}{{AAj{Cb{{Dh{ABb}}}}}AAj}{{{AAf{c}}{Cb{Af}}}{{AAf{c}}}Hl}{{AAj{Cb{Af}}}AAj}{{{AAf{c}}{Cb{{Eb{Hj}}}}}{{AAf{c}}}Hl}{{AAj{Cb{{Eb{Hj}}}}}AAj}{{{AAf{c}}{Cb{{Dh{Af}}}}}{{AAf{c}}}Hl}{{AAj{Cb{{Dh{Af}}}}}AAj}{{{AAf{c}}{Cb{j}}}{{AAf{c}}}Hl}{{AAj{Cb{j}}}AAj}{{{AAf{c}}{Cb{Mh}}}{{AAf{c}}}Hl}````````````````{{{b{c}}d}f{}}00000{{{ABd{c}}{b{Dd}}}{{Bd{{ABf{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000{{{b{ABh}}}ABh}{{{b{ABj}}}ABj}{{{b{ABl}}}ABl}{{{b{ABn}}}ABn}{{{b{AC`}}}AC`}{{{b{ACb}}}ACb}{{{b{c}}{b{he}}}f{}{}}00000``{{}ABh}{{}ABj}{{}ACb}{Af{{b{c}}}{}}0000000{Af{{b{hc}}}{}}0000000{c{{Ah{ABh}}}Aj}{c{{Ah{ABj}}}Aj}{c{{Ah{ABl}}}Aj}{c{{Ah{ABn}}}Aj}{c{{Ah{AC`}}}Aj}{c{{Ah{ACb}}}Aj}`{Aff}00000009{{{b{{ABf{c}}}}{b{Bb}}}{{`{{ACf{}{{Hd{{Bd{{ACd{A@b}}}}}}}}}}}Ad}{{{b{ABh}}{b{ABh}}}Al}{{{b{ABj}}{b{ABj}}}Al}{{{b{ABl}}{b{ABl}}}Al}{{{b{ABn}}{b{ABn}}}Al}{{{b{AC`}}{b{AC`}}}Al}{{{b{ACb}}{b{ACb}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000000{{{b{{ABf{c}}}}}{{Bd{Kd}}}Ad}{{{ABd{c}}{b{hBb}}}{{Bd{Kd}}}Ad}{{{b{ABh}}{b{hBf}}}Bh}{{{b{ABj}}{b{hBf}}}Bh}{{{b{ABl}}{b{hBf}}}Bh}{{{b{ABn}}{b{hBf}}}Bh}{{{b{AC`}}{b{hBf}}}Bh}{{{b{ACb}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}0000000{{}ACb}{{{b{{ABf{c}}}}}{{b{{ACj{{ACh{c}}}}}}}Ad}{{{b{ABh}}{b{hc}}}fBj}{{{b{ABj}}{b{hc}}}fBj}{{{b{ABl}}{b{hc}}}fBj}{{{b{ABn}}{b{hc}}}fBj}{{{b{AC`}}{b{hc}}}fBj}{{{b{ACb}}{b{hc}}}fBj}{{}Af}0000000{ce{}{}}0000000{{{b{ACb}}}Al}0```{c{{ABd{c}}}{AdAd}}``{{{b{ABh}}c}AhCd}{{{b{ABj}}c}AhCd}{{{b{ABl}}c}AhCd}{{{b{ABn}}c}AhCd}{{{b{AC`}}c}AhCd}{{{b{ACb}}c}AhCd}{{{ABd{c}}Al}{{ABd{c}}}Ad}`{{{b{c}}}e{}{}}00000{c{{Ah{e}}}{}{}}000000000000000{Gd{{Bd{ABl}}}}{ACl{{Bd{ABn}}}}{ACn{{Bd{AC`}}}}{{{b{c}}}Cf{}}0000000????????{{{ABd{c}}ABj}{{ABd{c}}}Ad}{{{ABd{c}}{Cb{Af}}}{{ABd{c}}}Ad}0{{{ABd{c}}ACb}{{ABd{c}}}Ad}{{{b{h{ABf{c}}}}{b{Bb}}}{{Bd{f}}}Ad}{{{b{{ABf{c}}}}{Dh{{ACd{A@b}}}}}{{Bd{f}}}Ad}`{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{AD`{c}}{b{Bb}}}{{Bd{f}}}{nL`ADb}}{cc{}}{{}Af}{ce{}{}}{{cei}{{AD`{c}}}{nL`ADb}{{Hb{An}}}{{H`{Dj}}}{{Hf{}{{Hd{g}}}}}}{c{{Ah{e}}}{}{}}0{{{b{c}}}Cf{}}3{{{AD`{c}}Al}{{AD`{c}}}{nL`ADb}}``{{{b{ADd}}c}{}ADf}{{{b{ADd}}c}{}{ADfL`}}>=<;:8{{}{{b{ADd}}}}87{{{b{ADh}}}Kd}{{{b{ADd}}c}ADj{ADfL`}}77{{ACle}{}ADf{{Gb{}{{G`{c}}}}}}7:0````{{{b{hBb}}{Cb{{b{Hj}}}}Al}{{Bd{f}}}}{{{b{Hj}}}{{Cb{{b{ADl}}}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{ADn}}}{{b{{Fl{AE`}}}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{AE`}}}Aj}{c{{Ah{ADn}}}Aj}{Aff}0{{{b{AE`}}}{{b{Jd}}}}{{{b{Hj}}{b{Bb}}}{{Bd{ABb}}}}{{{b{AE`}}{b{hBf}}}Bh}{{{b{ADn}}{b{hBf}}}Bh}{cc{}}0{ABbAE`}{AEbAE`}{{{b{AE`}}}{{Cb{{b{ABb}}}}}}00{{{b{ADn}}{b{Dj}}}{{Bd{{b{AE`}}}}}}{{}Af}0{ce{}{}}0{{AEb{Cb{ABb}}{Cb{ABb}}{Cb{ABb}}}AE`}{{Hn{Dh{AE`}}{Cb{Af}}}ADn}{{{b{AE`}}}{{Cb{Af}}}}{{{b{ADn}}}{{Cb{Af}}}}{{{b{ADn}}}{{b{Hn}}}}{{{b{AE`}}c}AhCd}{{{b{ADn}}c}AhCd}{{{b{ADl}}{b{ADn}}}{{Bd{Al}}}};;{{{b{AE`}}}{{Cb{ABb}}}}{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0;;```{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{cB`Bl}{cA`Ad}{{B`Al}B`}00`````{{{b{Cj}}{b{Cj}}{Cb{{b{{Fl{Df}}}}}}{b{Dj}}}{{Bd{f}}}}{{{b{Dd}}{b{Dd}}{Cb{{b{{Fl{Df}}}}}}{b{Dj}}}{{Bd{f}}}}0{{{b{hc}}}{{Bd{Jf}}}{BlHlAEd}}{{cAf}{{Dh{{Ed{AfAf}}}}}{{ACf{}{{Hd{Af}}}}}}{cAl{{H`{Nd}}}}{{{Cb{{b{{Fl{Df}}}}}}{b{Dd}}{Cb{{b{{Fl{ABb}}}}}}Al}{{Cb{{Dh{Af}}}}}}{{{b{Nd}}}An}","D":"CKl","p":[[1,"reference"],[5,"Private",1827],[1,"unit"],[0,"mut"],[5,"RowIndex",0,1828],[5,"HiveOptions",0,1828],[10,"WriterFactory",0,1829],[10,"SerWriter",1804,1829],[5,"Box",1830],[10,"Write",1831],[1,"usize"],[6,"Result",1832],[10,"Deserializer",1833],[1,"bool"],[5,"PathBuf",1834],[10,"SerReader",1804,1829],[5,"DataFrame",1835],[8,"PolarsResult",1836],[5,"Formatter",1837],[8,"Result",1837],[10,"Hasher",1838],[10,"Read",1831],[10,"ArrowReader",0,1829],[8,"RecordBatch",1839],[6,"Option",1840],[10,"Serializer",1841],[5,"TypeId",1842],[5,"AvroReader",81,1843],[5,"ArrowSchema",1844],[10,"Seek",1831],[6,"AvroCompression",81],[5,"AvroWriter",81,1845],[5,"Error",1837],[5,"Schema",1846],[5,"String",1847],[5,"Vec",1848],[1,"str"],[5,"CloudOptions",218],[5,"CloudLocation",147,1849],[10,"ObjectStore",1850],[5,"Arc",1851],[1,"tuple"],[5,"PolarsObjectStore",147,1852],[5,"Path",1853],[10,"AsyncWrite",1854],[10,"Unpin",1855],[5,"CloudWriter",147,1856],[5,"Error",1857],[10,"Command",1858],[8,"Result",1857],[5,"Url",1859],[5,"Bytes",1860],[5,"Range",1861],[1,"slice"],[5,"ObjectMeta",1850],[17,"Output"],[10,"FnOnce",1862],[1,"u8"],[10,"VarInt",1863],[6,"AmazonS3ConfigKey",218,1864],[6,"AzureConfigKey",218,1865],[6,"GoogleConfigKey",218,1866],[6,"CloudType",218],[10,"AsRef",1867],[10,"Into",1867],[17,"Item"],[10,"IntoIterator",1868],[5,"CsvReader",400,1869],[10,"PhysicalIoExpr",1750],[10,"MmapBytesReader",1188],[8,"SchemaRef",1846],[5,"OwnedBatchedCsvReader",400,1870],[5,"BatchedCsvReader",400,1870],[5,"CsvReadOptions",400,1871],[5,"CsvParseOptions",400,1871],[6,"CsvEncoding",400,1871],[6,"CommentPrefix",400,1871],[6,"NullValues",400,1871],[10,"Fn",1862],[5,"File",1872],[5,"SchemaInferenceResult",654],[6,"DataType",1873],[6,"ReaderBytes",1188],[5,"CsvWriter",678,1874],[5,"BatchedWriter",678,1874],[5,"CsvWriterOptions",678,1875],[5,"SerializeOptions",678,1875],[6,"QuoteStyle",678,1875],[8,"NonZeroUsize",1876],[1,"u64"],[5,"FileCacheEntry",818,1877],[5,"IpcStreamReader",839,1878],[5,"IpcWriter",839,1879],[5,"BatchedWriter",839,1879],[10,"AsyncWrite",1880],[10,"Send",1855],[5,"IpcScanOptions",839,1881],[5,"IpcReadOptions",839,1882],[5,"IpcWriterOptions",839,1879],[6,"IpcCompression",839,1879],[5,"IpcReaderAsync",839,1882],[5,"FileMetadata",1883],[1,"i64"],[5,"IpcStreamWriterOption",839,1878],[5,"IpcWriterOption",839,1879],[5,"IpcReader",839,1881],[5,"IpcStreamWriter",839,1878],[8,"ArrowSchemaRef",1844],[5,"JsonWriterOptions",1092],[5,"JsonWriter",1092],[5,"JsonReader",1092],[5,"BatchedWriter",1092],[6,"JsonFormat",1092],[5,"Path",1834],[10,"BufRead",1831],[5,"StructArray",1212,1884],[10,"Array",1885],[10,"Any",1842],[6,"ArrowDataType",1886],[5,"Field",1887],[5,"JsonLineReader",1212],[5,"GrowableStruct",1888],[5,"MutableStructArray",1889],[5,"Bitmap",1890],[10,"Scalar",1891],[5,"StructValueIter",1892],[5,"BitmapIter",1893],[6,"ZipValidity",1894],[6,"PolarsError",1836],[5,"FileMetaData",1309,1895],[6,"ColumnOrder",1896],[5,"RowGroupMetaData",1897],[5,"ParquetStatistics",1309],[5,"MutableStatistics",1898],[5,"FileMetaData",1899],[5,"KeyValue",1899],[5,"SchemaDescriptor",1900],[6,"ParquetError",1901],[5,"ParquetReader",1361,1902],[5,"BatchedParquetReader",1361,1903],[5,"ParquetAsyncReader",1361,1902],[5,"ParquetOptions",1361,1904],[6,"ParallelStrategy",1361,1904],[8,"FileMetaDataRef",1309],[5,"Series",1905],[5,"ParquetWriter",1497,1906],[5,"BatchedWriter",1497,1907],[5,"ParquetWriteOptions",1497,1908],[6,"ParquetCompression",1497,1908],[5,"GzipLevel",1497,1908],[5,"BrotliLevel",1497,1908],[5,"ZstdLevel",1497,1908],[5,"StatisticsOptions",1497,1909],[8,"RowGroupIterColumns",1497,1910],[10,"Iterator",1911],[5,"FileWriter",1912],[5,"Mutex",1913],[1,"u32"],[1,"i32"],[5,"PartitionedWriter",1713],[10,"Sync",1855],[5,"RuntimeManager",1729],[10,"Future",1914],[10,"GetSize",1729],[5,"JoinHandle",1915],[10,"StatsEvaluator",1750],[5,"BatchStats",1750],[5,"ColumnStats",1750],[5,"Field",1916],[10,"Sized",1855]],"r":[[0,1829],[1,1828],[2,1828],[3,1829],[4,1829],[5,1829],[82,1843],[83,1845],[84,1917],[147,1849],[148,1856],[149,1852],[158,1918],[186,1849],[221,1864],[226,1865],[250,1866],[402,1870],[403,1871],[404,1871],[405,1871],[406,1871],[407,1869],[411,1871],[412,1870],[452,1919],[532,654],[551,1920],[679,1874],[680,1874],[681,1875],[685,1875],[686,1875],[818,1921],[819,1922],[820,1877],[827,1921],[829,1922],[839,1879],[840,1879],[841,1882],[842,1881],[843,1882],[844,1881],[845,1878],[846,1878],[847,1878],[848,1879],[849,1879],[850,1879],[1213,1884],[1309,1895],[1326,1898],[1362,1903],[1365,1904],[1366,1902],[1367,1904],[1368,1902],[1443,1923],[1497,1907],[1499,1908],[1501,1908],[1504,1908],[1505,1908],[1506,1906],[1507,1910],[1509,1909],[1512,1908],[1804,1829],[1805,1829],[1806,0]],"b":[[1234,"impl-PartialEq-for-StructArray"],[1235,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1240,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1242,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1260,"impl-StructArray"],[1261,"impl-Array-for-StructArray"],[1264,"impl-Array-for-StructArray"],[1265,"impl-StructArray"],[1290,"impl-Array-for-StructArray"],[1291,"impl-StructArray"],[1304,"impl-StructArray"],[1305,"impl-Array-for-StructArray"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEUFqAAAAAEAAwAPABQAAAAWABMAKwACADAAAwA2AAAAOAACADwAAgBBABAAWgAAAFwAFwB3AAMAfgABAIEADQCSAAAAlwAGAKAADgCxAAIAtwADAL0AAgDFAAAAxwAAAMwADgDhAAEA7QAAAPkAAQD8AAAAEQEQACUBMQBcAQMAYQEIAG8BHACTAQQAnAEBAKABJADGATcA/wEEAAoCAAANAhEAKQIAACsCAgAyAisAXwIIAGkCBwCBAgAAjwIKAJsCAQCeAgAAoAIGAKgCAACwAhQAxwIhAOsCAgDzAgIA9wIAAPkCBQAFAwIADAMDABEDFgAzAwcAPAMCAEADAQBEAwQASgMAAE0DAABQAwAAUgMBAFYDAwBbAyEAfgM+AL4DAwDOAw8A6wMAAO0DBwD3AzgAOgQCAD8EAABCBAEARQQAAEsEIwBwBAAAdgQAAHgEBACEBBgAnwQBAKUEAQCoBAgAsgQAALQEAQC3BAYAvwQBAMIEBQDJBAsA1gQBANkEAADbBAAA3gQCAOQEAADmBAAA7gQDAPUEAQD4BA8ACQUCAA8FAQATBQUAGgUAAB8FAAAhBQYAKwUDADEFBQA5BQEARwUCAEsFAwBQBQEAUwUAAFYFAABYBQAAWwUwAJEFCQCgBQAAogUDAKcFAACpBQEArAUBAK8FAgCzBRIAyAUFAM8FAQDSBQIA1gUAANgFAADaBQEA3QUAAN8FAQDiBQAA5AUBAOcFAQDqBSIADwY7AE0GBQBbBg8AcwYBAHYGAQB5BgAAewYFAIMGKACxBgAAswYFALoGAAC8BgQAwgYCAMYGBADMBgEAzwYAANEGBQDZBgIA3QYDAOIGBwDsBgEA9gYBAP8GAgAFBwoAEQcAABMHAAAXBwQAHgcBACIHAQA="}],\
["polars_lazy",{"t":"CQCCCCPPGPPPPPPPPPPPPPFPPPPPPPPKPGPPPPGFPPPFFPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPFPPPPPPPPPGPPPGKFPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPGPPPPPPGPPPPPPPPPPGPPPPPPPPPPKPPPPPPPPFPPPPPPPPKKPPPPPPPPPPFPPPPPPPGPPPPPPFPFPPPPPGPFPPPPPPPPPPPPPPPPPPPKPPPPFPPPPFPPGGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNOONHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNHNHNONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNHNNNHNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOIFKFFKFFFFIFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNOOOONNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNOONNNOONNNNNNNMNNNNNNNNNNNNNNNNNNNNNNONNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNNONNMNNOOOONNNNNOONNNOMNNMNNCOONOONMNNOONNNNOOMNNOOONNNNNNNNONNNNNNNOONNNNNNONOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMNNMNNNNNNMNNNMNNNNNNNNNNNNNNNNNNHHCCFKNNNNNMNNNNNNNNHKFFPPPPPPPFPPPPPPGFPFPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPFKPPGFFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNOOOONONOOOOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","utils","Abs","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","BinaryExpr","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeArgs","DatetimeFunction","Day","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","Exp","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonPathMatch","KeepName","Kurtosis","Last","Len","LenBytes","LenChars","List","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","OffsetBy","Operator","Or","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Replace","ReplaceTimeZone","Reshape","Reverse","Reverse","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Round","Round","RoundSF","SearchSorted","Second","Selector","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Slice","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructNameSpace","SubPlan","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithTimeUnit","Xor","Year","ZFill","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_into_selector","_selector_add","_selector_and","_selector_sub","_selector_xor","abs","add","agg_groups","alias","all","all","all","all","all_horizontal","allow_parallel","ambiguous","and","any","any","any","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_sort","arg_sort_by","arg_unique","arg_where","args","args","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","binary","binary_expr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","bottom_k_by","business_day_count","cache","call","call","call_udf","call_udf","call_unchecked","cast","cast","cast_with_options","cat","cat","cbrt","ceil","clip","clip_max","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","contains","cos","cosh","cot","count","count_matches","count_matches","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","cumulative_eval","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","default","default","default","default","default","default","default","default","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","div","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","dt","dt","dtype_col","dtype_cols","duration","entropy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","first","first","flatten","float_type","floor","floor_div","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_exprs","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_type","fun","function_expr","function_with_options","functions","gather","gather","gather_every","gather_every","get","get","get","get_categories","get_field","get_field","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","head","hist","hour","hours","implode","index_cols","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_list_name_space","into_list_name_space","into_tree_formatter","is_between","is_column","is_column_selection","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","is_not_null","is_null","is_null","is_regex_projection","is_simple_projection","is_unique","join","join","json_encode","keep","kurtosis","last","last","last","len","len","len","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","max","max","max","max_horizontal","mean","mean","mean","mean_horizontal","median","median","median","median","meta","microsecond","microseconds","milliseconds","min","min","min","min","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","n_unique","n_unique","name","name","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","new","new","new","new","nodes","nodes_owned","not","not","nth","null_count","options","or","otherwise","otherwise","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","quantile","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","reshape","return_type","reverse","reverse","reverse","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","sample_n","search_sorted","second","seconds","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","shift","shift","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","slice","sort","sort","sort","sort_by","spearman_rank_corr","sqrt","std","std","std","str","strict","strict_cast","string","struct_","sub","suffix","suffix_fields","sum","sum","sum","sum","sum_horizontal","super_type","tail","tail","tan","tanh","ternary_expr","then","then","time_ranges","time_unit","time_unit","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_struct","to_struct","to_uppercase","top_k","top_k_by","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udf","undo_aliases","union","unique","unique","unique","unique_counts","unique_stable","unique_stable","unique_stable","upper_bound","value_counts","var","var","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","when","when","when","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","with_hms","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","options","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","descending","descending","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonPathMatch","Kurtosis","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","Nanosecond","Negate","Not","NullCount","OffsetBy","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RepeatBy","Replace","Replace","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithTimeUnit","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","ignore_nulls","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","descending","descending","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","time_unit","time_zone","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonUdfExpression","__clone_box","borrow","borrow","borrow_mut","borrow_mut","call_udf","call_udf","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","get_output","init","init","into","into","new","serialize","to_owned","try_from","try_from","try_into","try_into","try_serialize","type_id","type_id","vzip","vzip","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","OptState","PathIterator","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_collect_post_opt","_with_eager","agg","allow_parallel","allows_projection_pushdown","anonymous_scan","anti_join","apply","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","cache","cache","cache","cancel","cast","cast_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloud_options","cloud_options","cloud_options","cloud_options","cluster_with_columns","cluster_with_columns","coalesce","collect","collect_concurrently","comm_subexpr_elim","comm_subexpr_elim","comm_subplan_elim","comm_subplan_elim","concat_impl","concat_impl","concat_impl","count","cross_join","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nulls","eager","eager","explain","explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","file_caching","file_caching","fill_nan","fill_null","filter","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","first","fmt","force_parallel","from","from","from","from","from","from","from","from","from","from","from","from","full_join","get_current_optimizations","glob","glob","glob","glob","group_by","group_by_dynamic","group_by_stable","head","hive_options","how","infer_schema_length","init","init","init","init","init","init","init","init","init","init","inner_join","into","into","into","into","into","into","into","into","into","into","iter_paths","iter_paths","join","join_builder","join_nulls","last","lazy","lazy","left_join","left_on","limit","logical_plan","logical_plan","low_memory","low_memory","map","map_python","max","mean","median","melt","memory_map","merge_sorted","min","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","name","new","new","new","new_paths","new_paths","new_streaming","new_streaming","null_count","on","optimize","parallel","path","path","path","paths","paths","paths","pivot","predicate_pushdown","predicate_pushdown","profile","projection_pushdown","projection_pushdown","quantile","rechunk","rechunk","rechunk","rechunk","rechunk","rename","reverse","right_on","rolling","row_estimate","row_estimate","row_index","row_index","row_index","row_index","row_index","row_index","scan","scan_from_python_function","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","schema","schema","schema","schema_with_arenas","select","select_seq","semi_join","set_cached_arena","shift","shift_and_fill","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","slice_pushdown","slice_pushdown","sort","sort_by_exprs","std","streaming","streaming","suffix","sum","tail","tail","to_alp","to_alp_optimized","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top_k","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique","unique_stable","unnest","use_statistics","validate","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_batch_size","with_cache","with_cloud_options","with_cluster_with_columns","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_new_streaming","with_null_values","with_optimizations","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_schema","with_schema","with_schema_modify","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","executors","planner","Dummy","Executor","borrow","borrow_mut","deref","deref_mut","drop","execute","execute","from","init","into","try_from","try_into","type_id","vzip","create_physical_plan","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Decimal","Dense","Distinct","DslPlan","Duration","Duration","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","Null","OneToMany","OneToOne","Ordinal","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","cmp","coalesce","compare","compression","compression","compute_schema","data_pagesize_limit","days","days_only","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","describe","describe_tree_format","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diagonal","display","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","every","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_str","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_partitioned_ds","get_datatype","group_by_dynamic","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","how","include_bom","include_boundaries","include_header","index_column","index_column","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_asof","is_constant_duration","is_full_days","is_valid_join","is_zero","join_nulls","label","lit","lit","lit","lit","maintain_order","maintain_order","maintain_order","maintain_order","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","new","offset","offset","output_schema","parallel","parse","parsed_int","partial_cmp","period","period","predicate","rechunk","rolling","row_group_size","scan","schema","schema","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","suffix","to_alp","to_any_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_supertypes","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","weeks_only","with_coalesce","with_columns","with_suffix","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","filter","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","right_on","scan_type","schema","slice","sort_options","version","data_type","high","low"],"q":[[0,"polars_lazy"],[6,"polars_lazy::dsl"],[1469,"polars_lazy::dsl::AggExpr"],[1476,"polars_lazy::dsl::BooleanFunction"],[1479,"polars_lazy::dsl::Expr"],[1514,"polars_lazy::dsl::FunctionExpr"],[1559,"polars_lazy::dsl::StringFunction"],[1579,"polars_lazy::dsl::TemporalFunction"],[1581,"polars_lazy::dsl::binary"],[1601,"polars_lazy::dsl::cat"],[1602,"polars_lazy::dsl::dt"],[1658,"polars_lazy::dsl::function_expr"],[1865,"polars_lazy::dsl::function_expr::BooleanFunction"],[1868,"polars_lazy::dsl::function_expr::FunctionExpr"],[1913,"polars_lazy::dsl::function_expr::StringFunction"],[1933,"polars_lazy::dsl::function_expr::TemporalFunction"],[1935,"polars_lazy::dsl::function_expr::cat"],[1937,"polars_lazy::dsl::function_expr::pow"],[1941,"polars_lazy::dsl::function_expr::rolling"],[1973,"polars_lazy::dsl::function_expr::rolling_by"],[2004,"polars_lazy::dsl::function_expr::trigonometry"],[2046,"polars_lazy::dsl::functions"],[2121,"polars_lazy::dsl::python_udf"],[2166,"polars_lazy::dsl::string"],[2227,"polars_lazy::dsl::udf"],[2233,"polars_lazy::frame"],[2675,"polars_lazy::frame::pivot"],[2677,"polars_lazy::physical_plan"],[2679,"polars_lazy::physical_plan::executors"],[2695,"polars_lazy::physical_plan::planner"],[2696,"polars_lazy::prelude"],[3289,"polars_lazy::prelude::DslPlan"],[3343,"polars_lazy::prelude::LiteralValue"],[3346,"dyn_clone::sealed"],[3347,"polars_plan::dsl::meta"],[3348,"polars_plan::dsl::expr"],[3349,"polars_error"],[3350,"core::result"],[3351,"polars_plan::dsl::array"],[3352,"polars_plan::dsl::list"],[3353,"core::convert"],[3354,"polars_plan::dsl::expr_dyn_fn"],[3355,"alloc::sync"],[3356,"polars_core::series"],[3357,"core::option"],[3358,"core::ops::function"],[3359,"core::marker"],[3360,"polars_plan::logical_plan::visitor"],[3361,"polars_plan::dsl::function_expr"],[3362,"polars_core::datatypes::dtype"],[3363,"polars_core::chunked_array::ops::sort::options"],[3364,"polars_plan::dsl::function_expr::schema"],[3365,"polars_core::datatypes::field"],[3366,"core::any"],[3367,"alloc::vec"],[3368,"polars_plan::dsl::binary"],[3369,"core::clone"],[3370,"alloc::string"],[3371,"polars_plan::dsl::udf"],[3372,"polars_core::chunked_array::cast"],[3373,"polars_plan::dsl::cat"],[3374,"polars_plan::dsl::arity"],[3375,"polars_plan::dsl::function_expr::boolean"],[3376,"polars_plan::dsl::function_expr::cat"],[3377,"polars_plan::dsl::function_expr::datetime"],[3378,"polars_plan::dsl::function_expr::pow"],[3379,"polars_plan::dsl::function_expr::strings"],[3380,"polars_plan::dsl::functions::temporal"],[3381,"polars_plan::dsl::options"],[3382,"polars_core::utils"],[3383,"polars_lazy::dsl::eval"],[3384,"polars_time::windows::duration"],[3385,"polars_time::windows::group_by"],[3386,"polars_core::datatypes::time_unit"],[3387,"serde::de"],[3388,"polars_plan::logical_plan"],[3389,"polars_core::series::ops"],[3390,"polars_plan::dsl::dt"],[3391,"polars_lazy::dsl::list"],[3392,"polars_arrow::legacy::kernels::ewm"],[3393,"polars_plan::dsl::struct_"],[3394,"polars_core::chunked_array::ops"],[3395,"core::fmt"],[3396,"polars_plan::logical_plan::apply"],[3397,"polars_plan::dsl::function_expr::range"],[3398,"polars_plan::dsl::function_expr::list"],[3399,"polars_plan::dsl::function_expr::binary"],[3400,"polars_plan::dsl::function_expr::struct_"],[3401,"polars_plan::dsl::function_expr::array"],[3402,"polars_plan::dsl::function_expr::business"],[3403,"polars_plan::logical_plan::options"],[3404,"polars_core::schema"],[3405,"core::hash"],[3406,"polars_ops::series::ops::interpolation::interpolate"],[3407,"polars_ops::series::ops::is_between"],[3408,"polars_plan::dsl::name"],[3409,"polars_plan::logical_plan::lit"],[3410,"polars_plan::dsl::python_udf"],[3411,"polars_utils::idx_vec"],[3412,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3413,"polars_ops::series::ops::rank"],[3414,"polars_time::group_by::dynamic"],[3415,"polars_core::chunked_array::ops::rolling_window"],[3416,"polars_core::datatypes"],[3417,"polars_core::chunked_array"],[3418,"polars_time::chunkedarray::rolling_window"],[3419,"polars_core::chunked_array::ops::search_sorted"],[3420,"serde::ser"],[3421,"polars_core::series::series_trait"],[3422,"polars_plan::dsl::string"],[3423,"polars_ops::chunked_array::list::to_struct"],[3424,"polars_ops::series::ops::business"],[3425,"polars_arrow::legacy::kernels::time"],[3426,"polars_plan::dsl::function_expr::rolling"],[3427,"polars_plan::dsl::function_expr::rolling_by"],[3428,"polars_plan::dsl::function_expr::trigonometry"],[3429,"polars_core::frame"],[3430,"rayon::iter"],[3431,"pyo3::types::any"],[3432,"pyo3::instance"],[3433,"polars_utils::arena"],[3434,"polars_plan::logical_plan::ir"],[3435,"polars_plan::logical_plan::aexpr"],[3436,"polars_lazy::scan::ndjson"],[3437,"polars_plan::logical_plan::anonymous_scan"],[3438,"polars_lazy::scan::anonymous_scan"],[3439,"polars_utils::index"],[3440,"polars_lazy::frame::exitable"],[3441,"polars_utils::aliases"],[3442,"polars_lazy::scan::csv"],[3443,"polars_lazy::scan::ipc"],[3444,"polars_lazy::scan::parquet"],[3445,"polars_plan::frame::opt_state"],[3446,"polars_lazy::scan::file_list_reader"],[3447,"polars_io::cloud::options"],[3448,"polars_ops::frame::join::args"],[3449,"core::iter::traits::collect"],[3450,"polars_core::frame::explode"],[3451,"std::path"],[3452,"polars_io::options"],[3453,"polars_io::csv::write::options"],[3454,"polars_io::ipc::write"],[3455,"polars_io::json"],[3456,"polars_io::parquet::write::options"],[3457,"smartstring::alias"],[3458,"core::num::nonzero"],[3459,"polars_io::csv::read::options"],[3460,"polars_lazy::physical_plan::executors::executor"],[3461,"polars_expr::state::execution_state"],[3462,"alloc::boxed"],[3463,"chrono_tz::timezones"],[3464,"core::cmp"],[3465,"polars_core::frame::group_by::proxy"],[3466,"polars_core::datatypes::any_value"],[3467,"chrono::naive::datetime"],[3468,"polars_plan::dsl::functions::selectors"],[3469,"polars_plan::dsl::functions::horizontal"],[3470,"polars_plan::dsl::functions::arity"],[3471,"polars_plan::dsl"],[3472,"polars_plan::dsl::functions::range"],[3473,"polars_plan::dsl::functions::index"],[3474,"polars_plan::dsl::functions::coerce"],[3475,"polars_plan::dsl::functions::syntactic_sugar"],[3476,"polars_plan::dsl::functions::business"],[3477,"polars_plan::dsl::functions::concat"],[3478,"polars_plan::dsl::functions::correlation"],[3479,"polars_plan::dsl::functions::repeat"],[3480,"polars_lazy::physical_plan::planner::lp"]],"i":[0,0,0,0,0,0,27,5,0,36,5,55,55,40,5,55,55,27,27,27,67,27,0,27,27,27,59,59,57,5,27,0,27,0,27,5,57,27,0,0,58,27,57,0,0,27,27,5,5,57,27,59,59,59,57,27,36,59,27,27,27,27,27,27,57,57,57,0,57,57,27,40,27,27,54,5,57,0,59,27,40,40,27,27,27,27,5,0,27,5,66,0,0,0,27,59,59,59,5,0,0,27,27,5,59,36,27,40,27,5,0,0,27,5,27,58,56,0,66,40,40,27,59,59,59,27,57,36,5,27,27,0,55,55,55,55,55,55,55,57,55,55,55,55,55,57,66,0,59,59,5,27,36,5,59,59,67,27,0,0,5,27,27,40,40,27,59,40,40,36,27,36,27,36,0,57,57,57,36,27,40,57,27,40,57,57,57,40,36,54,57,27,0,55,40,40,5,27,57,0,40,57,65,59,59,27,27,27,40,27,0,27,36,57,27,27,27,27,27,27,5,0,27,59,27,57,27,59,27,65,0,27,27,57,27,27,27,57,5,0,0,27,27,27,27,27,27,5,59,5,5,0,59,59,59,58,59,36,27,0,59,59,59,59,59,59,0,27,0,5,36,27,59,27,0,5,0,57,57,59,59,59,27,57,27,27,57,57,57,57,57,57,57,27,40,57,0,27,27,27,59,0,27,36,57,57,0,5,5,0,0,57,40,57,59,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,4,4,4,4,4,5,5,5,5,0,9,10,5,0,64,60,5,9,10,5,0,5,5,0,5,5,5,0,5,0,5,5,5,5,5,5,5,9,10,5,9,10,5,5,0,5,0,32,64,5,34,36,0,0,5,0,5,0,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,5,5,0,63,44,46,34,47,46,0,5,5,0,5,5,5,5,5,5,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,0,0,0,0,0,0,9,10,5,5,5,5,9,10,0,5,0,5,5,5,0,5,70,70,5,0,0,0,0,60,61,62,5,17,17,17,60,61,63,64,65,66,5,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,36,5,54,40,17,17,17,55,56,57,58,59,27,62,63,64,65,66,67,10,5,5,5,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,5,10,5,0,5,0,0,0,5,36,5,5,54,40,17,17,55,56,57,58,59,27,62,63,64,65,66,67,5,5,5,5,54,54,54,40,40,40,55,55,55,56,56,56,57,57,57,58,58,58,59,59,59,62,62,62,63,63,63,64,64,64,65,65,65,66,66,66,67,67,67,82,82,5,5,5,5,63,5,5,5,5,5,84,84,84,5,5,5,5,0,10,5,5,17,5,5,34,47,44,88,5,5,54,40,40,17,55,55,56,56,57,57,58,58,59,59,27,27,60,61,62,63,64,65,66,67,46,0,64,63,0,5,49,9,32,10,4,108,84,50,51,52,53,36,5,5,5,5,5,5,5,5,5,5,5,5,5,5,54,40,17,17,17,17,17,17,17,17,17,17,17,17,55,56,57,58,59,27,27,27,27,27,60,61,62,63,64,65,65,66,67,46,17,46,0,5,0,10,5,10,5,9,10,5,49,76,15,32,34,88,5,5,4,36,5,5,54,40,55,56,57,58,59,27,62,63,64,65,66,67,10,5,5,60,61,5,0,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,46,0,0,5,5,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,5,105,10,4,5,4,4,5,5,5,5,5,5,5,5,0,5,0,5,4,4,5,9,10,84,108,5,0,10,5,0,10,5,5,0,5,5,5,5,5,5,5,108,5,0,5,32,32,17,17,5,17,108,17,5,0,5,5,0,32,5,32,32,32,32,0,9,10,5,0,0,10,5,0,0,9,10,5,5,60,61,61,0,9,10,5,0,62,60,61,5,60,5,9,10,5,5,46,5,5,61,5,5,5,32,32,17,60,61,46,5,5,0,5,0,5,46,5,51,53,4,5,5,5,5,5,0,5,4,5,108,108,5,0,5,5,0,5,5,5,0,5,5,84,0,5,5,32,5,46,9,10,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,64,64,17,5,10,10,5,5,60,61,36,5,54,40,17,17,17,55,56,57,58,59,27,62,63,64,65,66,67,10,10,5,10,9,10,5,5,5,5,5,5,5,5,10,5,9,10,5,5,0,5,9,10,5,5,63,5,0,5,5,108,108,0,9,10,5,0,17,10,5,5,5,0,50,52,0,60,61,60,10,5,9,108,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,5,32,5,40,55,56,57,58,59,27,9,10,108,5,5,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,32,32,5,32,34,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,0,4,10,9,10,5,5,9,10,5,5,5,9,10,5,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,61,0,51,53,62,60,60,61,32,84,61,60,61,60,61,60,61,61,60,61,60,61,32,32,60,61,60,60,61,60,5,60,201,202,203,201,202,203,201,204,205,206,207,208,209,209,210,211,207,212,213,214,215,216,212,211,214,208,217,216,218,217,217,218,209,210,214,215,216,215,216,215,213,211,218,207,213,219,220,221,222,223,224,225,226,227,228,229,230,230,222,223,219,222,223,219,223,219,231,232,224,233,234,235,235,220,234,236,237,238,239,235,219,240,241,242,243,244,245,236,233,235,246,247,248,249,250,251,246,247,252,249,250,251,253,254,255,255,252,248,253,254,256,256,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,27,55,55,55,55,27,27,27,27,27,27,27,59,59,57,27,27,0,27,57,27,0,58,27,57,27,27,57,27,59,59,59,57,27,59,27,27,27,27,27,27,57,57,57,57,57,27,27,27,57,59,27,27,27,27,27,27,27,59,59,59,27,27,59,27,27,0,27,27,58,56,27,59,59,59,27,57,27,27,55,55,55,55,55,55,55,57,55,55,55,55,55,57,59,59,27,59,59,27,27,27,27,59,27,27,57,57,57,27,57,27,57,57,57,57,27,55,27,57,57,59,59,27,27,27,27,0,27,57,27,27,27,27,27,27,27,59,27,57,27,59,27,27,27,57,27,27,27,57,27,27,27,27,27,27,59,59,59,59,58,59,27,0,59,59,59,59,59,59,27,27,59,27,0,57,57,59,59,59,27,57,27,27,57,57,57,57,57,57,57,27,57,27,27,27,59,27,57,57,57,57,59,0,0,0,0,0,204,205,206,219,220,221,222,223,224,225,226,227,228,229,230,230,222,223,219,222,223,219,223,219,231,232,224,233,234,235,235,220,234,236,237,238,239,235,219,240,241,242,243,244,245,236,233,235,246,247,248,249,250,251,246,247,252,249,250,251,253,254,255,255,252,248,253,254,256,256,0,56,58,58,0,58,130,130,130,130,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,131,131,131,131,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,61,0,0,0,0,0,60,61,0,0,0,0,0,0,0,0,0,60,61,61,0,60,61,60,61,0,0,0,0,0,0,0,60,61,0,0,0,0,60,61,60,61,60,0,0,0,0,139,111,139,111,139,111,139,139,139,111,139,111,139,139,111,139,139,139,139,139,139,111,139,139,111,111,139,111,139,111,139,139,111,139,111,139,111,111,139,111,139,0,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,0,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,154,136,147,151,156,157,149,158,159,136,136,147,148,149,136,136,147,149,148,154,136,147,151,156,157,149,158,159,148,154,136,147,151,156,157,149,158,159,136,136,157,158,154,136,136,154,136,147,151,156,157,149,158,159,154,136,147,151,156,157,149,158,159,160,160,157,158,169,159,148,136,136,169,159,169,159,160,160,156,136,136,136,151,157,158,159,148,154,136,147,151,156,157,149,158,159,148,154,136,147,151,156,157,149,158,159,136,136,136,136,148,154,154,136,136,147,151,156,157,149,158,159,136,169,159,136,136,169,159,154,136,154,169,159,136,136,136,148,160,160,156,160,156,149,136,159,148,148,154,136,136,136,147,151,156,157,149,158,159,136,136,160,160,156,158,136,136,136,147,158,148,151,148,154,136,147,151,156,157,149,158,159,136,148,154,136,147,151,156,157,149,158,159,160,160,136,136,148,136,168,136,136,148,136,136,147,149,158,136,136,136,136,136,136,157,136,136,160,156,149,151,157,158,151,148,156,149,156,149,169,159,136,148,136,158,160,156,149,160,156,149,0,169,159,136,169,159,136,160,156,149,157,158,136,136,148,136,169,159,160,156,149,151,157,158,149,136,136,136,136,136,136,149,151,136,136,136,136,136,136,136,169,159,136,136,136,136,136,136,151,136,169,159,136,136,136,169,159,148,136,136,147,136,136,136,154,136,147,151,156,157,149,158,159,136,148,154,136,147,151,156,157,149,158,159,148,154,136,147,151,156,157,149,158,159,169,159,148,154,136,147,151,156,157,149,158,159,136,136,136,158,148,136,148,154,136,147,151,156,157,149,158,159,148,149,156,156,136,136,136,136,136,136,156,136,156,156,156,156,156,156,156,149,156,149,156,156,160,156,156,149,149,136,156,136,160,156,149,160,156,149,136,136,156,156,160,156,149,136,160,136,156,156,149,149,156,149,156,156,136,156,156,136,136,156,156,136,136,0,0,0,0,0,0,189,189,189,189,189,187,189,189,189,189,189,189,189,189,0,0,0,0,165,165,192,193,193,78,165,0,78,193,193,193,192,78,0,0,193,0,78,78,193,193,193,165,78,78,78,78,165,193,193,193,193,193,0,78,0,0,0,0,165,0,0,183,183,78,192,192,0,0,193,183,183,192,0,0,78,193,0,0,0,78,78,165,193,78,78,78,193,193,193,193,193,193,193,78,0,164,116,73,176,167,165,183,177,178,192,115,179,193,194,138,78,73,73,73,150,150,150,150,176,164,116,73,174,176,167,165,183,198,177,178,192,115,179,193,194,138,78,164,116,73,174,176,167,165,183,198,177,178,192,115,179,193,194,138,78,164,116,73,176,167,165,183,177,178,192,115,179,193,194,138,78,164,116,73,176,167,165,183,177,178,192,115,179,193,194,138,78,164,116,73,167,73,177,179,78,179,73,73,164,116,176,167,183,177,178,115,179,194,138,78,164,116,73,174,176,167,165,183,198,177,178,192,115,179,193,194,138,78,164,116,73,174,176,167,165,183,198,177,178,192,115,179,193,194,138,78,115,78,78,164,116,73,176,167,165,183,177,178,192,115,179,193,194,138,78,138,78,164,116,73,174,176,167,165,183,198,177,178,192,115,179,193,194,138,78,164,116,73,176,167,165,183,177,178,192,115,179,193,194,138,164,164,164,116,116,116,73,73,73,176,176,176,167,167,167,165,165,165,183,183,183,177,177,177,178,178,178,179,179,179,194,194,194,138,138,138,164,164,116,73,73,150,176,167,165,165,183,183,177,178,192,115,179,193,194,138,194,164,116,73,174,176,167,167,165,183,198,177,178,192,115,179,193,194,138,78,138,193,196,164,116,73,176,167,165,183,177,178,192,115,179,193,194,138,167,176,164,176,164,116,164,116,73,174,176,167,165,183,198,177,178,192,115,179,193,194,138,78,164,116,73,174,176,167,165,183,198,177,178,192,115,179,193,194,138,78,165,73,73,183,73,167,164,109,73,198,193,176,177,178,179,193,115,73,73,73,174,73,183,73,73,73,167,164,116,174,138,73,73,73,164,116,174,138,196,179,150,150,174,164,116,73,176,167,165,183,177,178,192,115,179,193,194,138,78,176,167,194,167,164,179,167,167,78,193,164,116,73,176,167,165,183,177,178,192,115,179,193,194,138,78,73,165,183,138,73,73,73,73,164,116,73,174,176,167,165,183,198,177,178,192,115,179,193,193,194,138,78,164,116,73,174,176,167,165,183,198,177,178,192,115,179,193,194,138,78,164,116,73,174,176,167,165,183,198,177,178,192,115,179,193,194,138,78,167,164,116,73,174,176,167,165,183,198,177,178,192,115,179,193,194,138,78,73,73,167,174,167,257,257,258,259,260,261,262,263,264,265,266,266,262,267,260,268,260,264,257,265,269,259,270,267,261,271,272,272,258,273,257,272,270,257,263,270,274,264,257,272,265,269,273,262,266,271,268,266,272,266,262,259,259,263,275,275,275],"f":"```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}00000000000000000000000{hj}{{hj}{{n{jl}}}}000{jj}{{jj}}1{{j{b{A`}}}j}{{}j}{Abj}{Adj}{{jAf}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}``{{jc}j{{Al{j}}}}4321{{jcAf}j{{Al{j}}}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{j}}{b{C`c}}b}{{n{Cbl}}}{{Cd{{b{j}}b}{{Bf{{n{Cbl}}}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}{{ce{Bb{{B`{An}}}}Af}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}?{{jjChCj}j}{jj}0000{{jj}j}1>=1>=1{{jCl}j}{{cCn}j{{Aj{{Ah{j}}}}}}3{cj{{Al{j}}}}{{{b{D`}}}{{b{{Ah{Db}}}}}}`{jAb}{{{b{Dd}}}{{b{Df}}}}{{{b{Dh}}}{{b{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{j{Bh{Dl}}}j}`{jDn}{{jE`j}j}{{{b{c}}}{{b{e}}}{}{}}000000000000000000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}000000000000000000000000000000>{{jcg{Dj{Af}}}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{{jj{Ed{Af}}{Dj{Ef}}}j}`{{{b{Eh}}{b{A`}}}{{n{Ejl}}}}{{El{Dj{j}}}{{n{jl}}}}{{{b{Dd}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{En}}BdBd}{{n{Bdl}}}}{{El{Dj{j}}}j}{{jCj}j}0{{jCjF`}j}`{jFb}{jj}0{{jjj}j}{{jj}j}0{{{b{Fd}}}Fd}{{{b{Ff}}}Ff}{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Dh}}}Dh}{{{b{j}}}j}{{{b{Fl}}}Fl}{{{b{E`}}}E`}{{{b{{Bb{c}}}}}{{Bb{c}}}Eb}{{{b{Fn}}}Fn}{{{b{G`}}}G`}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Cf}}}Cf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{El}}}El}{{{b{c}}{b{C`e}}}f{}{}}00000000000000000000000{{{b{{Ah{j}}}}}j}{{{b{A`}}}j}{cj{{Hh{Ej}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{Abc}j{{Al{j}}}}{{Adc}j{{Al{j}}}}{jj}00021{{jjHj}j}{{jAf}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}111{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}2{{HljHnAf}j}0{{j{Dj{I`}}{Bh{{Dj{Ej}}}}AfAf}j}{{jjIbId}j}{Ghj}{{jjIbId{Bh{If}}{Bh{Ej}}}j}0```{{}j}{{}{{Bb{{B`{Ih}}}}}}{{}{{Bb{{B`{An}}}}}}{{}{{Bb{{B`{En}}}}}}{{}Gh}{{}Gj}{{}Gn}{{}H`}{{}Hb}{{}Hd}{jj}{Hn{{b{c}}}{}}00000000000000{{{b{{Bb{c}}}}}b{}}1111111111111111{Hn{{b{C`c}}}{}}000000000000000000000000000000{c{{n{Dh}}}Ij}{c{{n{j}}}Ij}{c{{n{Fl}}}Ij}{c{{n{E`}}}Ij}{c{{n{{Bb{{B`{Dd}}}}}}}Ij}{c{{n{{Bb{{B`{Il}}}}}}}Ij}{c{{n{{Bb{Bd}}}}}Ij}{c{{n{Fn}}}Ij}{c{{n{G`}}}Ij}{c{{n{Gb}}}Ij}{c{{n{Gd}}}Ij}{c{{n{Gf}}}Ij}{c{{n{Cf}}}Ij}{c{{n{Gl}}}Ij}{c{{n{Gn}}}Ij}{c{{n{H`}}}Ij}{c{{n{Hb}}}Ij}{c{{n{Hd}}}Ij}{c{{n{Hf}}}Ij}{{AdChIn}j}{{jChIn}j}{{jj}}{{jc}j{{Al{j}}}}{Hnf}000000000000000000000000000000{jj}{Adj}1`{jJ`}{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Gjj}{{jI`Af}j}{{{b{Dh}}{b{Dh}}}Af}9{{{b{j}}{b{j}}}Af}{{{b{Fl}}{b{Fl}}}Af}{{{b{E`}}{b{E`}}}Af}{{{b{{Bb{Bd}}}}{b{{Bb{Bd}}}}}Af}{{{b{{Bb{{B`{c}}}}}}{b{{Bb{{B`{c}}}}}}}AfJb}{{{b{Fn}}{b{Fn}}}Af}{{{b{G`}}{b{G`}}}Af}{{{b{Gb}}{b{Gb}}}Af}{{{b{Gd}}{b{Gd}}}Af}{{{b{Gf}}{b{Gf}}}Af}{{{b{Cf}}{b{Cf}}}Af}{{{b{Gl}}{b{Gl}}}Af}{{{b{Gn}}{b{Gn}}}Af}{{{b{H`}}{b{H`}}}Af}{{{b{Hb}}{b{Hb}}}Af}{{{b{Hd}}{b{Hd}}}Af}{{{b{Hf}}{b{Hf}}}Af}{{jc}j{{Al{j}}}}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000000000{{JdjAf}j}0{{jJf}j}{{jjIb}j}11`{{jc}j{{Hh{Ej}}}}{{jc}j{{Aj{{Ah{Cj}}}}}}{jj}0{{jjj}j}{{JhCh}j}{{Jh{b{A`}}}j}{{Jh{b{{Ah{c}}}}}j{{Aj{A`}}}};;{{jJj}j}<{{}j}{Adj}77{{}{{Bb{{B`{An}}}}}}8{{jj}j}{{{b{Dd}}{b{C`Jl}}}{{n{fJn}}}}{{{b{En}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Eh}}{b{C`Jl}}}{{n{fJn}}}}{{{b{K`}}{b{C`Jl}}}{{n{fJn}}}}{{{b{j}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Fl}}{b{C`Jl}}}{{n{fJn}}}}{{{b{E`}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{{Bb{c}}}}{b{C`Jl}}}{{n{fJn}}}{}}{{{b{Fn}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{G`}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Gb}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Gd}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Gf}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Cf}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Gh}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Gj}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Gl}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Gn}}{b{C`Jl}}}{{n{fJn}}}}{{{b{H`}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Hb}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Hd}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Hf}}{b{C`Jl}}}{{n{fJn}}}}{{{b{El}}{b{C`Jl}}}{{n{fJn}}}}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}``{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}{{j{Bh{Dl}}}j}{cc{}}00000000000{Hjj}{Kbj}2{Afj}{Kdj}{Kfj}{Khj}{Efj}{Dlj}{Chj}{Dhj}{{{b{A`}}}j}{Kjj}{I`j}=={Gf{{Bb{{B`{Dd}}}}}}{Kl{{Bb{{B`{Dd}}}}}}{Kn{{Bb{{B`{Dd}}}}}}{Cf{{Bb{{B`{Dd}}}}}}{Gb{{Bb{{B`{Dd}}}}}}{Fn{{Bb{{B`{Dd}}}}}}{L`{{Bb{{B`{Dd}}}}}}{Lb{{Bb{{B`{Dd}}}}}}{cc{}}{G`{{Bb{{B`{Dd}}}}}}{Ld{{Bb{{B`{Dd}}}}}}{Lf{{Bb{{B`{Dd}}}}}}33333{G`Cf}{GfCf}{L`Cf}{FnCf}7777777{HdHb}888{Cj{{Bb{{B`{An}}}}}}``{{jc{Bb{{B`{An}}}}Lh}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}`{{AdjAf}j}{{jc}j{{Al{j}}}}{{Adjj}j}{{jHnHn}j}{{AbjAf}j}43{Fbj}{{{b{Ih}}{b{Lj}}Ll{b{Db}}{b{Db}}}{{Bh{Db}}}}{{{b{An}}{b{Lj}}Ll{b{{Ah{Db}}}}}Db}{{{b{D`}}}Hn}{{{b{Dd}}}{{Bh{{Bb{{B`{An}}}}}}}}{{{b{K`}}{b{Lj}}}{{n{{B`{Lj}}l}}}}99{{{b{h}}}Af}{{{b{Dh}}{b{C`c}}}fLn}{{{b{j}}{b{C`c}}}fLn}{{jDlDlDlDl}j}{{{b{Fl}}{b{C`c}}}fLn}{{{b{E`}}{b{C`c}}}fLn}{{{b{Fn}}{b{C`c}}}fLn}{{{b{G`}}{b{C`c}}}fLn}{{{b{Gb}}{b{C`c}}}fLn}{{{b{Gd}}{b{C`c}}}fLn}{{{b{Gf}}{b{C`c}}}fLn}{{{b{Cf}}{b{C`c}}}fLn}{{{b{Gl}}{b{C`c}}}fLn}{{{b{Gn}}{b{C`c}}}fLn}{{{b{H`}}{b{C`c}}}fLn}{{{b{Hb}}{b{C`c}}}fLn}{{{b{Hd}}{b{C`c}}}fLn}{{{b{Hf}}{b{C`c}}}fLn}{{Adj}j}{{j{Bh{Hn}}}j}{{j{Bh{j}}{Bh{Hn}}AfAf}j}``{jj}{cj{{Aj{{Ah{Ch}}}}}}{{}Hn}000000000000000000000000000000`{{jjChCj}j}{{jjj}j}{{jM`}j}{{jj}j}{ce{}{}}000000000000000000000000000000{{{b{j}}}}{MbAd}{AdAd}{h{{n{{`{Md}}l}}}}{{jccMf}j{{Al{j}}}}{{{b{h}}}Af}{{{b{h}}Af}Af}>>>{{jc}j{{Al{j}}}}????????22?{{AbjAf}j}{{AdjAf}j}{Jhj}{Mhj}{{jAfAf}j}{{}j}{Adj}{jj}210{jAd}{cjMj}{{jI`}j}3;;3;;{{Mhc}j{{Bj{{b{A`}}}{{Bf{{n{Ejl}}}}}}BlBn}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{j{b{C`c}}{b{C`}}}{{n{jl}}}{{Cd{j{b{C`}}}{{Bf{{n{jl}}}}}}}}{{{b{D`}}{Bh{{b{Ej}}}}}{{n{Dbl}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Cj}}}{{Bf{Cj}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Cj}}}{{Bf{Cj}}}}BlBn}}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{{b{Cj}}}}}}}{{Bf{Cj}}}}BlBn}}{{jc}j{{Cd{j}{{Bf{j}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Db}}}{{Bf{Db}}}}BlBn}}{{Mh{B`{Bj}}}j}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{Db}}}}}{{Bf{Db}}}}BlBn}}:{{ce{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}2{{{b{D`}}}{{n{Dbl}}}}{{jMnAf}j}1111{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jMh}`44`{j}{{jc}j{{Al{j}}}}0;{{{b{{Ah{Db}}}}}D`}{c{{Bb{c}}}{}}{{jjj}Gh}{{}Gj}{{{b{A`}}{Dj{Db}}{Bb{{B`{An}}}}c}ElDd}{{{b{j}}{b{C`{N`{{b{j}}}}}}}f}{{j{b{C`{N`{j}}}}}f}=={Chj}>`8{{Ffc}j{{Al{j}}}}{{Fjc}j{{Al{j}}}}{{{b{h}}}{{n{{B`{A`}}l}}}}{{je}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{je{Bh{{Nb{eCl}}}}Hd}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jj}j}{jj}0{{jjHj}j}{{}j}{h{{Dj{j}}}}{{jc}j{{Al{j}}}}{{Mh{b{A`}}}j}05`{{j{Dj{I`}}{Bh{{Dj{Ej}}}}AfAfAf}j}{{jHn{Bh{{Dj{Ej}}}}AfAfAf}j}{{{b{A`}}jNd}j}{{jjNd}j}9{{jNf{Bh{Dl}}}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jAf}j}{{jj}}{{Jh{Dj{Ej}}}j}{{cj}j{{Al{j}}}};{{jcc{Bh{c}}{Bh{Cj}}}j{{Al{j}}}}{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{j{b{{Ah{Ch}}}}Hf}j}`{Abj}{Adj}{jj}00{{jNh}j}{{jjGl}j}0{{j{B`{Bj}}{Bb{{B`{An}}}}Nj}j}{{jHnc}j{{Cd{{b{C`{Nn{Nl}}}}}{{Bf{{Bh{I`}}}}}}BlBnO`}}{{jNj}j}{{jjOb}j}101010{{jNdI`Nj}j}{{jjNdI`Ob}j}{{jHnAf}j}434343{{{b{h}}}{{Dj{{B`{A`}}}}}}{{jKf}j}{{jEf}j}``{{}{{Bb{{B`{An}}}}}}{{jjAfAf{Bh{Dl}}}j}{{AdjAfAf{Bh{Dl}}}j}01{{jcOd}j{{Al{j}}}}``{{{b{Dh}}c}nOf}{{{b{j}}c}nOf}{{{b{Fl}}c}nOf}{{{b{E`}}c}nOf}{{{b{{Bb{Bd}}}}c}nOf}{{{b{{Bb{{B`{Il}}}}}}c}nOf}{{{b{{Bb{{B`{Dd}}}}}}c}nOf}{{{b{Fn}}c}nOf}{{{b{G`}}c}nOf}{{{b{Gb}}c}nOf}{{{b{Gd}}c}nOf}{{{b{Gf}}c}nOf}{{{b{Cf}}c}nOf}{{{b{Gl}}c}nOf}{{{b{Gn}}c}nOf}{{{b{H`}}c}nOf}{{{b{Hb}}c}nOf}{{{b{Hd}}c}nOf}{{{b{Hf}}c}nOf}{{Adc}j{{Al{j}}}}0{{jOh}j}1{{Abj}j}{{Adj}j}{{jj}j}{{jce}j{{Al{j}}}{{Al{j}}}}{jj}{{j{Bh{Dl}}}j}111{{jAf}j}{{Adjj}j}4{{AbCl}j}{{AdCl}j}{{jCl}j}{{jeCn}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jjHjAf}j}8{{AbHj}j}{{AdHj}j}{{jHj}j}{jOj}`{{jCj}j}`{jJh}{{jj}}{{Mh{b{A`}}}j}0{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}{{}{{Bb{{B`{An}}}}}}{{Adj}j}{{j{Bh{Hn}}}j}44{{jjj}j}{{Fdc}Ff{{Al{j}}}}{{Fhc}Fj{{Al{j}}}}{{jjIbId}j}```{{AdHn}j}{{{b{j}}{b{Lj}}Ll}{{n{Dbl}}}}<{Mhj}{{{b{c}}}e{}{}}00000000000000000000000<{{{b{D`}}}{{n{Dbl}}}}{{{b{c}}}Ej{}}0000000{{Ab{Bh{{B`{Bj}}}}}j}{{AdOl{Bh{{B`{Bj}}}}Hn}j}5{{jj}j}{{jcg{Dj{Af}}}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{c{{n{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Cj}}}{{Bf{{n{Cjl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{{Ah{{b{Cj}}}}}}}{{Bf{{n{Cjl}}}}}}}}{{jc}{{n{jl}}}{{Cd{j}{{Bf{{n{jl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Db}}}{{Bf{{n{Dbl}}}}}}}}{{{b{Dd}}{b{C`{Dj{Hj}}}}}{{n{fl}}}}{{{b{c}}}On{}}000000000000000000000000000000`{hj}{{Adc}j{{Al{j}}}}{Abj}{Adj}{jj}02100{{jAfAfEjAf}j}{{AbHj}j}{{AdHj}j}{{jHj}j}{ce{}{}}000000000000000000000000000000`{cFd{{Al{j}}}}{{Ffc}Fh{{Al{j}}}}{{Fjc}Fh{{Al{j}}}}`{{Ghj}Gh}0{{Gjj}Gj}{{{b{D`}}Cj}{{n{Dbl}}}}{{Jh{Dj{j}}}j}{{Gjjjj}Gj}{{Ghjjj}Gh}1545445454{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{{b{D`}}}{{n{Dbl}}}}76{{GhIf}Gh}{{Gh{Bh{Ej}}}Gh}89{{jc}j{{Al{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{DnAf}j}{Dnj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{Dnj}j}{Hn{{b{c}}}{}}{Hn{{b{C`c}}}{}}{Hnf}3{cc{}}87{{}Hn}{ce{}{}}6{c{{n{e}}}{}{}}0{{{b{c}}}On{}}2``{{J`j{Ed{Af}}{Dj{Ef}}A@`}j}{J`j}<;{{J`If}j}1{{J`jIf}j}{{J`Ej}j}333<;:393873333333333{{J`j}j}44{{J`{Bh{Ej}}jA@b}j}15{{J`{b{A`}}}j}65066666662998:6656````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@d}}}A@d}{{{b{c}}{b{C`e}}}f{}{}}{Hn{{b{c}}}{}}{Hn{{b{C`c}}}{}}{c{{n{A@d}}}Ij}{Hnf}{{{b{A@d}}{b{A@d}}}Af}{{{b{A@d}}{b{C`Jl}}}{{n{fJn}}}}0{cc{}}{{{b{A@d}}{b{C`c}}}fLn}{{}Hn}{ce{}{}}{{{b{A@d}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@f}}}A@f}{{{b{c}}{b{C`e}}}f{}{}}{Hn{{b{c}}}{}}{Hn{{b{C`c}}}{}}{c{{n{A@f}}}Ij}{Hnf}{{{b{A@f}}{b{A@f}}}Af}{{{b{A@f}}{b{C`Jl}}}{{n{fJn}}}}0{cc{}}{{{b{A@f}}{b{C`c}}}fLn}{{}Hn}{ce{}{}}{{{b{A@f}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@h}}}A@h}{{{b{c}}{b{C`e}}}f{}{}}{Hn{{b{c}}}{}}{Hn{{b{C`c}}}{}}{c{{n{A@h}}}Ij}{Hnf}{{{b{A@h}}{b{A@h}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{A@h}}{b{C`Jl}}}{{n{fJn}}}}0{cc{}}{{{b{A@h}}{b{C`c}}}fLn}{{}Hn}{ce{}{}}{{{b{A@h}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5``{{}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}`0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjChCj}j}{{cCn}j{{Aj{{Ah{j}}}}}}{cj{{Al{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{jCj}j}{{{b{{Ah{j}}}}}j}2{c{{A@l{{Dj{A@j}}}}}{{AAb{}{{A@n{AA`}}}}}}{cj{{Hh{Ej}}}}{{cAAd}{{A@l{AA`}}}{{Aj{{Ah{AA`}}}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}11{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{jjHj}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jjIbId}j}0{Ghj}{{jjIbId{Bh{If}}{Bh{Ej}}}j}0``{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Gjj}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}``{cj{{Aj{{Ah{Ch}}}}}}{{jjChCj}j}{{jjj}j}{jj}0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{A`}}}j}00```0````2{{jjHj}j}{{{b{A`}}jNd}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{cj}j{{Al{j}}}}{{jjGl}j}0``{{jjHjAf}j}6{{jjIbId}j}0`````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{C`c}}}{{b{C`e}}}{}{}}0{{{b{Mn}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{AAf}}A@j}{{n{A@jl}}}}{{{b{AAf}}}AAf}{{{b{c}}{b{C`e}}}f{}{}}{Hn{{b{c}}}{}}0{Hn{{b{C`c}}}{}}0{c{{n{AAf}}}Ij}{Hnf}0{{{b{AAf}}{b{AAf}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{AAf}}{b{C`Jl}}}{{n{fJn}}}}{cc{}}{{{AAj{AAh}}}AAf}1{{{b{Mn}}}{{Bh{{Bb{{B`{An}}}}}}}}{{}Hn}0{ce{}{}}0{{{AAj{AAh}}{Bh{Cj}}AfAf}Mn}{{{b{AAf}}c}nOf}{{{b{c}}}e{}{}}{c{{n{e}}}{}{}}000{{{b{Mn}}{b{C`{Dj{Hj}}}}}{{n{fl}}}}{{{b{c}}}On{}}066`{{OjAf}j}{Ojj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{OjjAf}j}{{Ojj}j}1{Hn{{b{c}}}{}}{Hn{{b{C`c}}}{}}{Hnf}3{{OjjHn}j}4{{Oj{b{A`}}}{{n{jl}}}}65{cc{}}6;:{{}Hn}{ce{}{}}{{Oj{b{A`}}Af}j}{{Oj{Bh{Cj}}{Bh{Hn}}}j}:>>{{OjHnAAl}j}0{{OjjjAf}j}0{{OjjjAfCh}j}{Ojj}{{Ojjj}j}?;;?;??????{{OjCjGnj}j}{{Ojj}j}{{OjGn}j}{{Oj{Bh{If}}{Bh{Ej}}Gnj}j}{{OjHn}j}{{OjjAf}j}7377{c{{n{e}}}{}{}}0{{{b{c}}}On{}}?6````````````````````{{{b{c}}d}f{}}00000000{{AA`c}{{A@l{A@j}}}{{Bj{AAn{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{Bf{{A@l{f}}}}}}}}{{AA`Af}AA`}{{ABfc}AA`{{Aj{{Ah{j}}}}}}{{ABhAf}ABh}{{{b{ABj}}}Af}{{{B`{ABl}}ABn}{{A@l{AA`}}}}{{AA`AA`cc}AA`{{Al{j}}}}{{ABfcAC`}AA`{{Bj{A@j}{{Bf{{A@l{A@j}}}}}}BlBn}}{{{b{ABj}}}{{b{Df}}}}{{{b{c}}}{{b{e}}}{}{}}000000000{{{b{C`c}}}{{b{C`e}}}{}{}}000000000{{AA`ACbcCn}AA`{{Aj{{Ah{j}}}}}}{AA`AA`}``{{{b{ACd}}}f}{{AA`{ACf{{b{A`}}Cj}}Af}AA`}{{AA`CjAf}AA`}{{{b{ACd}}}ACd}{{{b{AA`}}}AA`}{{{b{ABf}}}ABf}{{{b{ABn}}}ABn}{{{b{ACh}}}ACh}{{{b{ACj}}}ACj}{{{b{ABj}}}ABj}{{{b{ACl}}}ACl}{{{b{ACn}}}ACn}{{{b{c}}{b{C`e}}}f{}{}}00000000{{{b{AD`}}}{{Bh{{b{ADb}}}}}}0````{{ABhADd}ABh}{AA`{{A@l{A@j}}}}{AA`{{A@l{ACd}}}}````{{{b{AD`}}{Dj{AA`}}}{{A@l{AA`}}}}0{{{b{ACh}}{Dj{AA`}}}{{A@l{AA`}}}}{AA`AA`}{{AA`AA`{Bh{Ej}}}AA`}{{}AA`}{{}ABn}{{}ACj}{{}ACl}{{}ACn}{Hn{{b{c}}}{}}000000000{Hn{{b{C`c}}}{}}000000000{{{b{AA`}}}{{A@l{Ej}}}}000{Hnf}{{{b{C`ACd}}}f}11{{AA`e}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}}2222222{{AA`{Bh{{Dj{j}}}}}AA`}``{{{b{AA`}}Af}{{A@l{Ej}}}}{{AA`e}AA`{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}``{{{b{ACd}}}{{Bh{{A@l{A@j}}}}}}{{AA`Hn}{{A@l{A@j}}}}{{{b{ACd}}}{{A@l{A@j}}}}``{{AA`c}AA`{{Al{j}}}}0{{AA`j}AA`}{ABhAA`}{AD`{{A@l{AA`}}}}0{ACh{{A@l{AA`}}}}10{ABj{{A@l{AA`}}}}{AA`AA`}{{{b{ACn}}{b{C`Jl}}}{{n{fJn}}}}{{ABhAf}ABh}{cc{}}00{ABfAA`}{IlAA`}2222222{{AA`AA`cc}AA`{{Al{j}}}}{{{b{AA`}}}ACn}{{{b{AD`}}}Af}0{{{b{ACh}}}Af}`{{AA`e}ABf{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{AA`jcADh}ABf{{Aj{{Ah{j}}}}}}1{{ABf{Bh{Hn}}}AA`}`{{ABhADj}ABh}`{{}Hn}0000000008{ce{}{}}000000000{{{b{AD`}}}{{A@l{{Bh{ADl}}}}}}0{{AA`AA`ccADn}AA`{{Aj{{Ah{j}}}}}}{AA`ABh}{{ABhAf}ABh}{AA`AA`}{AE`AA`}1?{{ABhc}ABh{{Aj{{Ah{j}}}}}}{{AA`ACb}AA`}``{{ABjAf}ABj}`{{AA`cAEb{Bh{{B`{K`}}}}{Bh{{b{A`}}}}}AA`{{Bj{A@j}{{Bf{{A@l{A@j}}}}}}BlBn}}{{AA`AAfAEb{Bh{AC`}}Af}AA`}666{{AA`AEd}AA`}`{{AA`AA`{b{A`}}}{{A@l{AA`}}}}8{{{b{AD`}}}{{Bh{Hn}}}}{{{b{ACh}}}{{Bh{Hn}}}}{{{b{ABj}}}{{Bh{Hn}}}}````={cACh{{Aj{AEf}}}}{cABj{{Aj{AEf}}}}{{{B`{{Ah{AEh}}}}}ACh}{{{B`{{Ah{AEh}}}}}ABj}``?={{AA`{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{A@l{AAn}}}}`{{{b{AD`}}}{{b{AEf}}}}{{{b{ACh}}}{{b{AEf}}}}{{{b{ABj}}}{{b{AEf}}}}{{{b{AD`}}}{{b{{Ah{AEh}}}}}}{{{b{ACh}}}{{b{{Ah{AEh}}}}}}{{{b{ABj}}}{{b{{Ah{AEh}}}}}}```{AA`{{A@l{{Nb{A@jA@j}}}}}}``{{AA`jNd}AA`}{{{b{AD`}}}Af}{{{b{ACh}}}Af}{{{b{ABj}}}Af}``{{AA`ei}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}{{Aj{A`}}}{{ADf{}{{A@n{g}}}}}}{AA`AA`}{{ABhc}ABh{{Aj{{Ah{j}}}}}}{{AA`jcNh}ABf{{Aj{{Ah{j}}}}}}``{{{b{AD`}}}{{Bh{{b{AEj}}}}}}{{{b{ACh}}}{{Bh{{b{AEj}}}}}}{{{b{ABj}}}{{Bh{{b{AEj}}}}}}```{{{b{ABj}}AEl}{{A@l{A@j}}}}{{LjAEnAf}AA`}{{cACj}{{A@l{AA`}}}{{Aj{AEf}}}}{{{B`{{Ah{AEh}}}}ACj}{{A@l{AA`}}}}{{cACl}{{A@l{AA`}}}{{Aj{AEf}}}}{{{B`{{Ah{AEh}}}}ACl}{{A@l{AA`}}}}{{{b{C`AA`}}}{{A@l{AC`}}}}{{{b{ABj}}{Bh{Hn}}}{{A@l{AC`}}}}`{{{b{C`AA`}}{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{A@l{AC`}}}}{{AA`c}AA`{{Aj{{Ah{j}}}}}}0{{AA`AA`cc}AA`{{Al{j}}}}{{{b{AA`}}{ABb{AB`}}{ABb{ABd}}}f}{{AA`c}AA`{{Al{j}}}}{{AA`ce}AA`{{Al{j}}}{{Al{j}}}}``{{AA`AEhAF`}{{A@l{f}}}}{{AA`AEhAFb}{{A@l{f}}}}{{AA`Ej{Bh{ADb}}AFb}{{A@l{f}}}}{{AA`AEhAFd}{{A@l{f}}}}{{AA`AEhAFf}{{A@l{f}}}}{{AA`Ej{Bh{ADb}}AFf}{{A@l{f}}}}`{{AA`ChACb}AA`}``{{AA`cCn}AA`{{Hh{AFh}}}}{{AA`cCn}AA`{{Aj{{Ah{j}}}}}}{{AA`Hj}AA`}``{{ABhc}ABh{{Aj{A`}}}}{AA`AA`}{{AA`ACb}AA`}{{ABf{Bh{Hn}}}AA`}{AA`{{A@l{AFj}}}}0{{{b{AA`}}Af}{{A@l{Ej}}}}{{{b{c}}}e{}{}}00000000{{AA`ACbcCn}AA`{{Aj{{Ah{j}}}}}}{c{{n{e}}}{}{}}0000000000000000000``{{{b{c}}}On{}}000000000{{AA`{Bh{{Dj{Ej}}}}AFl}AA`}0{{AA`e}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}}`{{ABhAFn}ABh}={ce{}{}}000000000{{ABhAA`}ABh}{{ABj{Bh{AG`}}}ABj}{{AChAf}ACh}{{ACh{Bh{ADb}}}ACh}{{AA`Af}AA`}{{AA`j}AA`}{{AA`c}AA`{{Aj{{Ah{j}}}}}}022{{ACh{Bh{{b{A`}}}}}ACh}{{AA`c}AA`{{Aj{{Ah{AA`}}}}}}6{{ACh{Bh{AC`}}}ACh}{{AChAGb}ACh}{{AChHj}ACh}999{{ABjAf}ABj}{{ACh{Bh{Hn}}}ACh}{{ABj{Bh{Hn}}}ABj}<<{{AD`c}AD`{{Al{{Bh{Hn}}}}}}2{{AChc}ACh{{Al{{Bh{Hn}}}}}}{{ABjc}ABj{{Al{{Bh{Hn}}}}}}3={{ACh{Bh{AGd}}}ACh}{{AA`ACn}AA`}{{AD`AEh}AD`}{{AChAEh}ACh}{{ABjAEh}ABj}{{AD`{B`{{Ah{AEh}}}}}AD`}{{ACh{B`{{Ah{AEh}}}}}ACh}{{ABj{B`{{Ah{AEh}}}}}ABj}{{AA`Af}AA`}0{{ACh{Bh{Hj}}}ACh}{{AChAf}ACh}{{AD`Af}AD`}1{{ABjAf}ABj}4{{AD`c}AD`{{Al{{Bh{AEj}}}}}}{{AA`{b{A`}}{Bh{ACb}}}AA`}{{AChc}ACh{{Al{{Bh{AEj}}}}}}{{ACh{Bh{AEj}}}ACh}{{ABj{Bh{AEj}}}ABj}{{ABjc}ABj{{Al{{Bh{AEj}}}}}}{{ACh{Bh{AC`}}}ACh}{{ABj{Bh{AC`}}}ABj}{{AChc}{{A@l{ACh}}}{{Bj{Lj}{{Bf{{A@l{Lj}}}}}}}}{{AChHj}ACh}>{{AChHn}ACh}0??==?{AA`AA`}{{{b{A@j}}ei{Bh{m}}Af{Bh{j}}{Bh{{b{A`}}}}}{{A@l{A@j}}}{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}{{Aj{A`}}}{{ADf{}{{A@n{g}}}}}{{Aj{A`}}}{{ADf{}{{A@n{k}}}}}}0````{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{Hn{{b{c}}}{}}{Hn{{b{C`c}}}{}}{Hnf}{{{b{C`AGf}}{b{C`AGh}}}{{A@l{A@j}}}}{{{b{C`AGj}}{b{C`AGh}}}{{A@l{A@j}}}}{cc{}}{{}Hn}{ce{}{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}2{{AAn{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{A@l{{AGl{AGf}}}}}}````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000{{{b{Ib}}Ch{Bh{{b{AGn}}}}}{{n{Chl}}}}00{{{b{ABl}}}Af}00{{{b{ABl}}}{{b{Df}}}}`{{{b{c}}}{{b{e}}}{}{}}00000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}00000000000000000{{{b{ADh}}}ADh}{{{b{Nh}}}Nh}{{{b{Ib}}}Ib}{{{b{AF`}}}AF`}{{{b{ADn}}}ADn}{{{b{ADj}}}ADj}{{{b{AFn}}}AFn}{{{b{AFb}}}AFb}{{{b{AFd}}}AFd}{{{b{AH`}}}AH`}{{{b{Nf}}}Nf}{{{b{AFf}}}AFf}{{{b{AHb}}}AHb}{{{b{AHd}}}AHd}{{{b{AAd}}}AAd}{{{b{Il}}}Il}{{{b{c}}{b{C`e}}}f{}{}}000000000000000``{{{b{Ib}}{b{Ib}}}AHf}`{{{b{c}}{b{e}}}AHf{}{}}``{{{b{Il}}}{{n{{B`{Lj}}l}}}}`{{{b{Ib}}}Ch}{{{b{Ib}}}Af}{{}ADh}{{}Nh}{{}AF`}{{}ADn}{{}AFn}{{}AFb}{{}AFd}{{}Nf}{{}AFf}{{}AHd}{{}AAd}{{}Il}{Hn{{b{c}}}{}}00000000000000000{Hn{{b{C`c}}}{}}00000000000000000`{{{b{Il}}}{{n{Ejl}}}}0{c{{n{ADh}}}Ij}{c{{n{Nh}}}Ij}{c{{n{Ib}}}Ij}{c{{n{AF`}}}Ij}{c{{n{ADn}}}Ij}{c{{n{ADj}}}Ij}{c{{n{AFn}}}Ij}{c{{n{AFb}}}Ij}{c{{n{AFd}}}Ij}{c{{n{AH`}}}Ij}{c{{n{Nf}}}Ij}{c{{n{AFf}}}Ij}{c{{n{AHb}}}Ij}{c{{n{AHd}}}Ij}{c{{n{AAd}}}Ij}{c{{n{Il}}}Ij}`{{{b{Il}}}{{n{{`{Md}}l}}}}{Hnf}00000000000000000{{{b{ADh}}{b{ADh}}}Af}{{{b{Nh}}{b{Nh}}}Af}{{{b{Ib}}{b{Ib}}}Af}{{{b{AF`}}{b{AF`}}}Af}{{{b{ADn}}{b{ADn}}}Af}{{{b{ADj}}{b{ADj}}}Af}{{{b{AFn}}{b{AFn}}}Af}{{{b{AFb}}{b{AFb}}}Af}{{{b{AFd}}{b{AFd}}}Af}{{{b{AH`}}{b{AH`}}}Af}{{{b{Nf}}{b{Nf}}}Af}{{{b{AFf}}{b{AFf}}}Af}{{{b{AHb}}{b{AHb}}}Af}{{{b{AHd}}{b{AHd}}}Af}{{{b{AAd}}{b{AAd}}}Af}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000`{{{b{ADh}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Nh}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Ib}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{ABl}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AF`}}{b{C`Jl}}}{{n{fJn}}}}{{{b{ADn}}{b{C`Jl}}}{{n{fJn}}}}{{{b{ADj}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{AFn}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{AFb}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AFd}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AH`}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Nf}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AFf}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AHb}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AHd}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AAd}}{b{C`Jl}}}{{n{fJn}}}}`{cc{}}0000{ADjADn}1111111111111`{{{b{AHb}}}Cj}{{{b{AHh}}{Dj{Bd}}{b{ADh}}}{{n{{Nb{Bd{Dj{Bd}}AHj}}l}}}}{{{b{ADh}}{b{C`c}}}fLn}{{{b{Nh}}{b{C`c}}}fLn}{{{b{Ib}}{b{C`c}}}fLn}{{{b{AF`}}{b{C`c}}}fLn}{{{b{ADn}}{b{C`c}}}fLn}{{{b{ADj}}{b{C`c}}}fLn}{{{b{AFn}}{b{C`c}}}fLn}{{{b{AFb}}{b{C`c}}}fLn}{{{b{AFd}}{b{C`c}}}fLn}{{{b{AH`}}{b{C`c}}}fLn}{{{b{Nf}}{b{C`c}}}fLn}{{{b{AFf}}{b{C`c}}}fLn}{{{b{AHb}}{b{C`c}}}fLn}{{{b{AHd}}{b{C`c}}}fLn}{{{b{AAd}}{b{C`c}}}fLn}``````{{}Hn}00000000000000000{ce{}{}}00000000000000000{{{b{ADj}}}Af}{{{b{Ib}}{Bh{{b{A`}}}}}Af}{{{b{Ib}}}Af}{{{b{AFn}}{b{ADj}}}{{n{fl}}}}1``{Mjj}{Ibj}{AHlj}{AHbj}````{AHbAHb}`{{{b{Ib}}}Ch}7{{IbCh}Ib}`1{{{b{AFn}}}Af}{Ib}:{ChIb}{ADjADn}````{{{b{A`}}}Ib}`{{{b{Ib}}{b{Ib}}}{{Bh{AHf}}}}````{{{b{AHh}}{Dj{Bd}}{b{Nh}}}{{n{{Nb{Bd{Dj{Bd}}AHj}}l}}}}`{{{b{ABl}}AEl}{{n{A@jl}}}}{{{b{ABl}}{Bh{Hn}}}{{n{{B`{Lj}}l}}}}`{{{b{ADh}}c}nOf}{{{b{Nh}}c}nOf}{{{b{Ib}}c}nOf}{{{b{AF`}}c}nOf}{{{b{ADn}}c}nOf}{{{b{ADj}}c}nOf}{{{b{AFn}}c}nOf}{{{b{AFb}}c}nOf}{{{b{AFd}}c}nOf}{{{b{AH`}}c}nOf}{{{b{Nf}}c}nOf}{{{b{AFf}}c}nOf}{{{b{AHb}}c}nOf}{{{b{AHd}}c}nOf}{{{b{AAd}}c}nOf}{{{b{Il}}c}nOf}`{{{b{ADn}}}Af}````{{{b{ADn}}}{{b{A`}}}}`{Il{{n{AFjl}}}}{{{b{AHb}}}{{Bh{AHn}}}}{{{b{c}}}e{}{}}000000000000000{{{b{c}}}Ej{}}00`{{{b{Ib}}Ch{Bh{{b{AGn}}}}ceg}{{n{Chl}}}{{Bj{Ch}{{Bf{Ch}}}}}{{Bj{Ch}{{Bf{AI`}}}}}{{Bj{AI`}{{Bf{Ch}}}}}}{{{b{Ib}}Ch{Bh{{b{AGn}}}}}{{n{Chl}}}}00{c{{n{e}}}{}{}}0000000000000{AHn{{n{AHbl}}}}1111111111111111111111{{{b{c}}}On{}}00000000000000000`{ce{}{}}00000000000000000{{{b{Ib}}}Ch}{{{b{Ib}}}Af}{{ADnADd}ADn}`{{ADn{Bh{Ej}}}ADn}`````````````````````````````````````````````````````````","D":"GEl","p":[[1,"reference"],[5,"Private",3346],[1,"unit"],[5,"MetaNameSpace",6,3347],[6,"Expr",6,3348],[6,"PolarsError",3349],[6,"Result",3350],[1,"str"],[5,"ArrayNameSpace",6,3351],[5,"ListNameSpace",6,3352],[1,"bool"],[1,"slice"],[10,"AsRef",3353],[10,"Into",3353],[10,"FunctionOutputField",6,3354],[5,"Arc",3355],[5,"SpecialEq",6,3354],[5,"Series",3356],[17,"Output"],[6,"Option",3357],[10,"Fn",3358],[10,"Send",3359],[10,"Sync",3359],[0,"mut"],[6,"VisitRecursion",3360],[10,"FnMut",3358],[6,"FunctionExpr",6,3361],[1,"i64"],[6,"DataType",3362],[5,"SortOptions",3363],[5,"SortMultipleOptions",3363],[5,"FieldsMapper",6,3364],[5,"Field",3365],[10,"SeriesUdf",6,3354],[10,"Any",3366],[6,"AggExpr",6,3348],[5,"Vec",3367],[1,"u64"],[5,"BinaryNameSpace",1581,3368],[6,"Operator",6,3348],[10,"Clone",3369],[1,"array"],[1,"i32"],[10,"RenameAliasFn",6,3354],[5,"String",3370],[5,"UserDefinedFunction",6,3371],[10,"SeriesBinaryUdf",6,3354],[6,"CastOptions",3372],[5,"CategoricalNameSpace",6,3373],[5,"When",6,3374],[5,"Then",6,3374],[5,"ChainedWhen",6,3374],[5,"ChainedThen",6,3374],[6,"Excluded",6,3348],[6,"BooleanFunction",6,3375],[6,"CategoricalFunction",6,3376],[6,"TemporalFunction",6,3377],[6,"PowFunction",6,3378],[6,"StringFunction",6,3379],[5,"DatetimeArgs",6,3380],[5,"DurationArgs",6,3380],[5,"RollingCovOptions",6,3381],[5,"StrptimeOptions",6,3381],[5,"JoinOptions",6,3381],[6,"WindowType",6,3381],[6,"WindowMapping",6,3381],[6,"NestedType",6,3381],[10,"IntoVec",3382],[1,"u8"],[10,"ExprEvalExtension",6,3383],[1,"usize"],[1,"f64"],[5,"Duration",2696,3384],[6,"ClosedWindow",3385],[6,"TimeUnit",3386],[10,"BinaryUdfOutputField",6,3354],[10,"Deserializer",3387],[6,"DslPlan",2696,3388],[6,"NullBehavior",3389],[5,"DateLikeNameSpace",1602,3390],[10,"Sized",3359],[10,"ListNameSpaceExtension",6,3391],[5,"EWMOptions",3392],[5,"StructNameSpace",6,3393],[6,"FillNullStrategy",3394],[5,"Formatter",3395],[5,"Error",3395],[10,"UdfSchema",6,3396],[1,"u16"],[1,"i16"],[1,"u32"],[1,"f32"],[1,"i8"],[6,"RangeFunction",3397],[6,"ListFunction",3398],[6,"BinaryFunction",3399],[6,"StructFunction",3400],[6,"ArrayFunction",3401],[6,"BusinessFunction",3402],[5,"FunctionOptions",3403],[5,"Schema",3404],[6,"Context",3388],[10,"Hasher",3405],[6,"InterpolationMethod",3406],[10,"IntoListNameSpace",6,3391],[10,"Display",3395],[6,"ClosedInterval",3407],[5,"ExprNameNameSpace",6,3408],[10,"Literal",2696,3409],[10,"FnOnce",3358],[5,"PythonUdfExpression",2121,3410],[5,"UnitVec",3411],[1,"tuple"],[6,"QuantileInterpolOptions",3412],[5,"RankOptions",2696,3413],[5,"RollingGroupOptions",2696,3414],[5,"RollingOptionsFixedWindow",3415],[5,"Float64Type",3416],[5,"ChunkedArray",3417],[10,"Copy",3359],[5,"RollingOptionsDynamicWindow",3418],[6,"SearchSortedSide",3419],[10,"Serializer",3420],[6,"IsSorted",3421],[5,"StringNameSpace",2166,3422],[6,"ListToStructWidthStrategy",3423],[5,"TypeId",3366],[6,"Roll",3424],[6,"NonExistent",3425],[6,"RollingFunction",1941,3426],[6,"RollingFunctionBy",1973,3427],[6,"TrigonometricFunction",2004,3428],[5,"DataFrame",3429],[8,"PolarsResult",3349],[17,"Item"],[5,"LazyFrame",2233],[10,"IntoParallelIterator",3430],[5,"UnionArgs",2696,3403],[5,"PythonFunction",2121,3410],[5,"PyAny",3431],[5,"Py",3432],[1,"char"],[5,"Node",3433],[6,"IR",3434],[5,"Arena",3433],[6,"AExpr",3435],[5,"LazyGroupBy",2233],[5,"JoinBuilder",2233],[5,"LazyJsonLineReader",2233,3436],[10,"AnonymousScan",2696,3437],[5,"ScanArgsAnonymous",2233,3438],[8,"SchemaRef",3404],[8,"IdxSize",3439],[5,"InProcessQuery",2233,3440],[8,"PlHashMap",3441],[5,"LazyCsvReader",2233,3442],[5,"ScanArgsIpc",2233,3443],[5,"ScanArgsParquet",2233,3444],[5,"OptState",2233,3445],[10,"LazyFileListReader",2233,3446],[5,"CloudOptions",3447],[6,"JoinCoalesce",3448],[10,"IntoIterator",3449],[5,"DynamicGroupOptions",2696,3414],[6,"JoinType",2696,3448],[8,"PathIterator",2233,3446],[5,"JoinArgs",2696,3448],[10,"IntoLazy",2233],[8,"AllowedOptimizations",2233,3445],[5,"MeltArgs",3450],[5,"Path",3451],[5,"PathBuf",3451],[5,"RowIndex",3452],[5,"AnonymousScanArgs",2696,3437],[8,"PyObject",3432],[5,"CsvWriterOptions",2696,3453],[5,"IpcWriterOptions",2696,3454],[5,"JsonWriterOptions",2696,3455],[5,"ParquetWriteOptions",2696,3456],[8,"String",3457],[5,"IRPlan",3434],[6,"UniqueKeepStrategy",3429],[6,"JoinValidation",2696,3448],[8,"NonZeroUsize",3458],[6,"CsvEncoding",3459],[6,"NullValues",3459],[10,"Executor",2679,3460],[5,"ExecutionState",3461],[5,"Dummy",2679,3460],[5,"Box",3462],[6,"Tz",3463],[6,"RankMethod",2696,3413],[6,"LiteralValue",2696,3409],[5,"AnonymousScanOptions",2696,3403],[6,"Ordering",3464],[10,"PolarsTemporalGroupby",2696,3414],[6,"GroupsProxy",3465],[5,"Null",2696,3409],[6,"AnyValue",3466],[5,"NaiveDateTime",3467],[15,"Quantile",1469],[15,"Min",1469],[15,"Max",1469],[15,"IsBetween",1865],[15,"Any",1865],[15,"All",1865],[15,"SortBy",1479],[15,"Filter",1479],[15,"Cast",1479],[15,"Sort",1479],[15,"Gather",1479],[15,"RenameAlias",1479],[15,"Ternary",1479],[15,"Function",1479],[15,"Window",1479],[15,"AnonymousFunction",1479],[15,"Slice",1479],[15,"BinaryExpr",1479],[15,"QCut",1868],[15,"Entropy",1868],[15,"Log",1868],[15,"Hist",1868],[15,"Cut",1868],[15,"Correlation",1868],[15,"Round",1868],[15,"TopK",1868],[15,"TopKBy",1868],[15,"RoundSF",1868],[15,"EwmMeanBy",1868],[15,"Clip",1868],[15,"BackwardFill",1868],[15,"ForwardFill",1868],[15,"Random",1868],[15,"GatherEvery",1868],[15,"ValueCounts",1868],[15,"Rank",1868],[15,"EwmMean",1868],[15,"EwmStd",1868],[15,"EwmVar",1868],[15,"Replace",1868],[15,"CumCount",1868],[15,"CumSum",1868],[15,"CumProd",1868],[15,"CumMin",1868],[15,"CumMax",1868],[15,"ConcatHorizontal",1913],[15,"ConcatVertical",1913],[15,"ExtractGroups",1913],[15,"JsonDecode",1913],[15,"PadStart",1913],[15,"PadEnd",1913],[15,"SplitExact",1913],[15,"Contains",1913],[15,"Find",1913],[15,"Replace",1913],[15,"DatetimeFunction",1933],[15,"GroupBy",3289],[15,"Union",3289],[15,"Sort",3289],[15,"Cache",3289],[15,"ExtContext",3289],[15,"DataFrameScan",3289],[15,"IR",3289],[15,"Select",3289],[15,"HStack",3289],[15,"Scan",3289],[15,"MapFunction",3289],[15,"Filter",3289],[15,"Distinct",3289],[15,"Slice",3289],[15,"Sink",3289],[15,"Join",3289],[15,"HConcat",3289],[15,"PythonScan",3289],[15,"Range",3343]],"r":[[8,3348],[22,3351],[31,3354],[33,3375],[38,3376],[39,3373],[43,3374],[44,3374],[67,3380],[77,3380],[87,3348],[91,3348],[92,3383],[93,3408],[99,3364],[100,3408],[110,3361],[111,3354],[117,3354],[131,3391],[147,3381],[158,3352],[159,3391],[174,3347],[192,3381],[199,3348],[210,3378],[221,3354],[230,3381],[239,3354],[240,3354],[251,3354],[259,3379],[266,3381],[268,3393],[274,3377],[276,3374],[296,3396],[301,3371],[306,3374],[309,3381],[310,3381],[348,3468],[352,3469],[359,3469],[362,3470],[366,3471],[368,3472],[383,3473],[385,3473],[391,3474],[392,3475],[394,3471],[396,3374],[461,3476],[468,3475],[471,3471],[526,3469],[527,3468],[528,3468],[529,3477],[530,3477],[531,3477],[540,3478],[542,3469],[546,3469],[551,3472],[552,3380],[553,3472],[554,3472],[689,3471],[691,3468],[692,3468],[693,3380],[776,3471],[814,3469],[817,3477],[881,3471],[923,3468],[956,3472],[957,3472],[1006,3475],[1008,3475],[1018,3471],[1021,3471],[1025,3409],[1035,3470],[1046,3471],[1049,3471],[1056,3475],[1060,3469],[1061,3475],[1064,3469],[1065,3475],[1073,3475],[1077,3469],[1103,3475],[1105,3471],[1117,3478],[1124,3471],[1127,3475],[1131,3469],[1135,3479],[1147,3478],[1148,3478],[1220,3478],[1228,3471],[1233,3475],[1237,3469],[1243,3374],[1246,3472],[1391,3471],[1438,3374],[1581,3368],[1601,3373],[1602,3390],[1675,3375],[1679,3376],[1724,3361],[1784,3378],[1820,3379],[1831,3377],[1860,3361],[1861,3361],[1862,3361],[1863,3361],[1864,3361],[1935,3376],[1939,3378],[1945,3426],[1977,3427],[2019,3428],[2046,3380],[2047,3380],[2048,3468],[2049,3469],[2051,3469],[2052,3470],[2053,3472],[2054,3473],[2055,3473],[2056,3474],[2057,3475],[2058,3475],[2059,3469],[2060,3468],[2062,3468],[2064,3477],[2067,3477],[2068,3477],[2069,3478],[2070,3469],[2071,3469],[2072,3472],[2073,3472],[2074,3380],[2075,3472],[2076,3472],[2079,3468],[2080,3468],[2081,3380],[2082,3469],[2083,3477],[2086,3468],[2087,3472],[2088,3472],[2089,3475],[2090,3475],[2091,3470],[2092,3475],[2093,3475],[2094,3475],[2098,3475],[2103,3475],[2104,3478],[2105,3475],[2106,3469],[2107,3479],[2108,3478],[2109,3478],[2112,3478],[2113,3475],[2114,3472],[2115,3472],[2121,3410],[2122,3410],[2123,3410],[2124,3410],[2166,3422],[2227,3371],[2233,3445],[2234,3440],[2237,3442],[2238,3446],[2241,3436],[2242,3445],[2243,3446],[2244,3438],[2245,3443],[2246,3444],[2679,3460],[2680,3460],[2695,3480],[2696,3437],[2697,3437],[2698,3403],[2706,3453],[2713,3388],[2714,3384],[2716,3414],[2733,3454],[2735,3448],[2736,3448],[2737,3448],[2738,3455],[2740,3409],[2741,3409],[2747,3409],[2748,3409],[2753,3456],[2754,3414],[2757,3413],[2758,3413],[2759,3414],[2775,3403]],"b":[[559,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[560,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[561,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[636,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[637,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[638,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[696,"impl-Expr"],[697,"impl-PartialEq-for-Expr"],[700,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[701,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[787,"impl-Debug-for-Expr"],[788,"impl-Display-for-Expr"],[790,"impl-Display-for-Operator"],[791,"impl-Debug-for-Operator"],[793,"impl-Display-for-BooleanFunction"],[794,"impl-Debug-for-BooleanFunction"],[795,"impl-Display-for-CategoricalFunction"],[796,"impl-Debug-for-CategoricalFunction"],[797,"impl-Display-for-TemporalFunction"],[798,"impl-Debug-for-TemporalFunction"],[799,"impl-Debug-for-PowFunction"],[800,"impl-Display-for-PowFunction"],[801,"impl-Debug-for-StringFunction"],[802,"impl-Display-for-StringFunction"],[803,"impl-Debug-for-FunctionExpr"],[804,"impl-Display-for-FunctionExpr"],[831,"impl-From%3Cu8%3E-for-Expr"],[832,"impl-From%3Cu16%3E-for-Expr"],[834,"impl-From%3Cbool%3E-for-Expr"],[835,"impl-From%3Ci16%3E-for-Expr"],[836,"impl-From%3Cu32%3E-for-Expr"],[837,"impl-From%3Cf32%3E-for-Expr"],[838,"impl-From%3Ci32%3E-for-Expr"],[839,"impl-From%3Cu64%3E-for-Expr"],[840,"impl-From%3Ci64%3E-for-Expr"],[841,"impl-From%3CAggExpr%3E-for-Expr"],[842,"impl-From%3C%26str%3E-for-Expr"],[843,"impl-From%3Ci8%3E-for-Expr"],[844,"impl-From%3Cf64%3E-for-Expr"],[847,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[848,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[849,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[850,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[851,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[852,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[853,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[854,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[856,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[857,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[858,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[864,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[865,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[866,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[867,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[901,"impl-Hash-for-Expr"],[902,"impl-Expr"],[1185,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1186,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1187,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[1960,"impl-Debug-for-RollingFunction"],[1961,"impl-Display-for-RollingFunction"],[1991,"impl-Display-for-RollingFunctionBy"],[1992,"impl-Debug-for-RollingFunctionBy"],[2033,"impl-Debug-for-TrigonometricFunction"],[2034,"impl-Display-for-TrigonometricFunction"],[2397,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2398,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2635,"impl-LazyCsvReader"],[2636,"impl-LazyFileListReader-for-LazyCsvReader"],[2637,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2638,"impl-LazyJsonLineReader"],[2658,"impl-LazyFileListReader-for-LazyCsvReader"],[2659,"impl-LazyCsvReader"],[2660,"impl-LazyJsonLineReader"],[2661,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3020,"impl-Display-for-Duration"],[3021,"impl-Debug-for-Duration"],[3025,"impl-Debug-for-JoinType"],[3026,"impl-Display-for-JoinType"],[3027,"impl-Debug-for-JoinValidation"],[3028,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAGQJ9QAEABIAGAAPACkAAgAuABUARQAIAE8ABwBYAAIAXQAAAF8AFwB4ABoAlAACAJgABgCgAA4AsAAUAMYABADMACIA8gAJAP0ADwAOAQUAFgEXAC8BAwA0AQAANgEiAFoBAABfAQAAYgEBAGYBAABsAQAAbgEAAHkBAAB8AQAAgwEBAIYBAQCLAQAAjgE9AM4BAADQAQAA0gEBANgBAADfAS8AEgIAACwCDAA6AlEAjgIAAJACHgCwAgAAsgIAALgCAAC6AhAAzAIpAP4CAAABAwEABwMAAA0DAAAQAx4AMAMAAEADAQBDAwoAUAMHAFkDAgBhAwMAbAMAAHADAAByAwAAdwMBAHwDBQCFAwEAiAMNAJkDAQCdAx4A4AMCAOQDAAD4AwAAAAQAAA0EAAAQBAUAGQQAABwEAAAsBAAALwQCADcEAgA7BAMARAQBAEgEAgBOBAEAWgQAAFwEAQBjBAAAZQQAAG0EAQBzBAEAdgQAAHsEAgCVBAUAnAQUALoEAADBBAAAyAQAAM0EAADPBAAA0QQAANcEAADcBAAA3gQAAOAEAgDnBBgAAQUIAA4FPQBOBQAAUAUgAH0FAAB/BR8AogUBAKcFAAC0BQAAuAUBAL0FEwDUBQEA1wUBANoFAQDdBQYA5QVIAC8GAwA0BgIAOQYCAD4GAwBGBgEATwYCAFUGAABXBgAAZAYAAHMGAwB7Bi8BrAcBAK8HGgDLBwEAzgclAPUHAQD4BwYAAwgAABEIAAAeCAEAJQgBADAIAgA0CAMAPQgDAEUIHQBkCAAAZggCAGsICwB4CAMAfwgCAIUIAACKCAIAjwgBAK8IAwC7CAMAwggAAMQIDQDVCAEA2QgVAPAIAQD1CBEACQkBAA8JAAAWCQAAGQkYADYJAwA7CQYAVgkBAFkJAABeCQEAaQkCAHEJAABzCQoAjwkBAJQJAQCXCQAAmQkAAJ4JAQCkCQMAqQkFALEJAQC0CQQAwQkDAM4JBADUCQAA2AkCANwJAADeCQAA6QkAAPYJAQD5CR0AGQoJACYKAQApCgkANAoAADYKAAA+CgEATQoBAFAKAABUCgEAVwoBAGMKAABmCgAAdAoEAHoKBgCCCgAAhAoKAJIKAACVCgEAmAoAAJoKAwCgCgAAowoAAKcKAgCuCgAAsAoGALoKAgC+CgAAwQoIAMsKAgDQCgAA0goAANgKEwDvCkoAPguLAMsLEwDkCwAA8gsAAPQLEQAHDAAACgwRAC4MAQAxDAAAMwwAADYMAwA9DAUARAwBAEgMAABKDAIATgwBAFIMAgBYDBUAbwyjAA=="}],\
["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPKNNNNHNNENNNNHNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNONNEEPKPPGKKNMMMNNHHHNNHHNNNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","contains","contains_chunked","contains_chunked","ends_with","ends_with","ends_with_chunked","ends_with_chunked","list","scatter","starts_with","starts_with","starts_with_chunked","starts_with_chunked","strings","AsList","ListNameSpaceImpl","as_list","join_literal","join_literal","join_many","join_many","lst_arg_max","lst_arg_max","lst_arg_min","lst_arg_min","lst_concat","lst_concat","lst_get","lst_get","lst_join","lst_join","lst_lengths","lst_lengths","lst_max","lst_max","lst_mean","lst_mean","lst_median","lst_median","lst_min","lst_min","lst_n_unique","lst_n_unique","lst_reverse","lst_reverse","lst_shift","lst_shift","lst_slice","lst_slice","lst_sort","lst_sort","lst_std","lst_std","lst_sum","lst_sum","lst_unique","lst_unique","lst_unique_stable","lst_unique_stable","lst_var","lst_var","same_type","same_type","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","SeriesJoin","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_create_left_df_from_slice","_create_left_df_from_slice","_finish_join","_finish_left_join","_finish_left_join","_full_join_from_series","_full_join_from_series","_join_suffix_name","_left_join_from_series","_left_join_from_series","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","coalesce","coalesce","cross_join","cross_join","cross_join_dfs","cross_join_dfs","default","default","default","default_join_ids","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","full_join","hash","hash","hash","hash","hash_join_inner","hash_join_inner","hash_join_outer","hash_join_outer","how","init","init","init","init","inner_join","into","into","into","into","is_asof","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","ensure_sorted_arg","ensure_sorted_arg","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","is_sorted","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts","value_counts"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[23,"polars_ops::chunked_array::list"],[72,"polars_ops::chunked_array::strings"],[74,"polars_ops::frame"],[78,"polars_ops::frame::join"],[233,"polars_ops::prelude"],[235,"polars_ops::series"],[286,"polars_ops::chunked_array::binary"],[287,"polars_core::datatypes"],[288,"polars_ops::chunked_array::binary::namespace"],[289,"polars_ops::chunked_array::scatter"],[290,"polars_utils::index"],[291,"polars_core::series"],[292,"polars_error"],[293,"core::marker"],[294,"core::option"],[295,"core::iter::traits::collect"],[296,"polars_ops::chunked_array::list::namespace"],[297,"polars_core::datatypes::aliases"],[298,"polars_core::chunked_array::ops::sort::options"],[299,"polars_core::frame"],[300,"dyn_clone::sealed"],[301,"polars_ops::frame::join::hash_join"],[302,"polars_ops::frame::join::args"],[303,"alloc::string"],[304,"polars_ops::frame::join::cross_join"],[305,"core::fmt"],[306,"core::convert"],[307,"core::hash"],[308,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[309,"polars_arrow::array::primitive"],[310,"core::result"],[311,"core::any"],[312,"polars_ops::series::ops::arg_min_max"],[313,"polars_ops::series::ops"],[314,"polars_core::chunked_array::ops::search_sorted"],[315,"polars_ops::series::ops::various"],[316,"polars_ops::frame::join::general"],[317,"polars_ops::series::ops::clip"],[318,"polars_ops::series::ops::horizontal"],[319,"polars_ops::series::ops::index"],[320,"polars_ops::series::ops::negate"],[321,"polars_ops::series::ops::not"],[322,"polars_ops::series::ops::int_range"]],"i":[0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,0,8,4,4,4,4,0,0,0,16,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,26,0,0,0,27,0,0,36,37,0,0,37,37,0,0,0,0,36,0,0,36,37,0,38,38,38,38,0,33,36,37,38,0,31,31,0,31,31,31,31,0,31,31,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,36,33,39,39,39,39,33,36,38,0,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,33,36,36,36,37,37,37,38,38,38,33,36,37,37,38,38,33,33,36,37,38,44,33,36,37,38,47,47,47,47,33,33,36,37,38,44,33,36,37,38,37,38,44,33,44,38,33,0,33,33,33,33,33,36,37,38,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,33,0,0,54,0,54,54,0,0,0,54,52,52,53,54,54,0,0,0,54,54,0,0,54,54,54,54,55,55,54,54,54,54,54,54,54,54,54,0,55,55,0,0,0,0,0,0,0,54,54,54,54,55,55],"f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}2211```{{{d{B`}}}{{d{Bb}}}}{{{d{Bd}}{d{Bf}}Bh}{{Af{Bj}}}}0{{{d{Bd}}{d{Bj}}Bh}{{Af{Bj}}}}0{{{d{Bd}}}Bl}000{{{d{Bd}}{d{{l{Ad}}}}}{{Af{Bb}}}}0{{{d{Bd}}BnBh}{{Af{Ad}}}}03322{{{d{Bd}}}{{Af{Ad}}}}0{{{d{Bd}}}Ad}00011{{{d{Bd}}}{{Af{Bl}}}}0{{{d{Bd}}}Bb}0{{{d{Bd}}{d{Ad}}}{{Af{Bb}}}}0{{{d{Bd}}BnC`}Bb}0{{{d{Bd}}Cb}{{Af{Bb}}}}0{{{d{Bd}}j}Ad}077{{{d{Bd}}}{{Af{Bb}}}}00011{{{d{Bd}}Bb}Bb}0`{{{d{Cd}}}{{d{Bj}}}}```{{{d{Cf}}}{{d{Ch}}}}```````````````````````{{{d{c}}Cj}Cl{}}000{{Ch{d{{l{{d{Bf}}}}}}{d{{l{{d{Bf}}}}}}{Al{{d{Bf}}}}{d{Ch}}}Ch}{{{d{Cn}}{d{{l{Ab}}}}BhBh}Ch}0`{{{d{Cn}}D`{d{Ch}}Db}{{Af{Ch}}}}0{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}Db}{{Af{Ch}}}}0{{{d{Bf}}{d{Bf}}}Dd}{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}DbBh{Al{{d{{l{{d{Bf}}}}}}}}}{{Af{Ch}}}}0{{{d{c}}}{{d{e}}}{}{}}000{{{d{Dfc}}}{{d{Dfe}}}{}{}}000{{{d{Db}}}Db}{{{d{Dh}}}Dh}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{c}}{d{Dfe}}}Cl{}{}}000{{{d{Dh}}{d{Dj}}}Bh}`{{{d{Dn}}{d{Ch}}{Al{{d{Bf}}}}{Al{{E`{BnC`}}}}}{{Af{Ch}}}}0{{{d{Dn}}{d{Ch}}{Al{{E`{BnC`}}}}Bh}{{Af{{E`{ChCh}}}}}}0{{}Db}{{}Dh}{{}Dl}{{}Eb}{C`{{d{c}}}{}}000{C`{{d{Dfc}}}{}}000{C`Cl}000{{{d{Db}}{d{Db}}}Bh}{{{d{Dh}}{d{Dh}}}Bh}{{{d{Dj}}{d{Dj}}}Bh}{{{d{Dl}}{d{Dl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00000000000{{{d{Db}}{d{DfEd}}}Ef}{{{d{Dh}}{d{DfEd}}}Ef}{{{d{Dj}}{d{DfEd}}}Ef}0{{{d{Dl}}{d{DfEd}}}Ef}0{DjDb}{cc{}}000{{{d{Eh}}{d{Ch}}ee}{{Af{Ch}}}{{Ej{Bf}}}{{An{}{{Aj{c}}}}}}{{{d{Db}}{d{Dfc}}}ClEl}{{{d{Dh}}{d{Dfc}}}ClEl}{{{d{Dj}}{d{Dfc}}}ClEl}{{{d{Dl}}{d{Dfc}}}ClEl}{{{d{En}}{d{Ad}}DlBh}{{Af{{E`{F`Bh}}}}}}0{{{d{En}}{d{Ad}}DlBh}{{Af{{E`{{Fb{Ab}}{Fb{Ab}}}}}}}}0`{{}C`}0007{ce{}{}}000{{{d{Dj}}}Bh}{{{d{Dl}}{d{Dj}}}{{Af{Cl}}}}{{{d{Eh}}{d{Ch}}eeDb}{{Af{Ch}}}{{Ej{Bf}}}{{An{}{{Aj{c}}}}}}`;{{{d{Dl}}}Bh}>{{{d{Ch}}{d{Ch}}Bh}{{Af{D`}}}}{{{d{Db}}}Bh}`{{{d{Db}}}{{d{Bf}}}}`{{{d{c}}}e{}{}}000{{{d{c}}}Dd{}}0{c{{Fd{e}}}{}{}}0000000{{{d{c}}}Ff{}}000`{{DbDh}Db}{{Db{Al{Dd}}}Db}`````````{{{d{c}}Cj}Cl{}}{{{d{Fh}}}{{Al{C`}}}}0{{{d{Fj}}}{{d{Ad}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Fl}}}Fl}{{{d{c}}{d{Dfe}}}Cl{}{}}{{{d{{l{Ad}}}}}{{Af{Ad}}}}{{{d{Ad}}C`}{{Af{Bl}}}}{{}Fl}{C`{{d{c}}}{}}{C`{{d{Dfc}}}{}}{C`Cl}{{{d{Fn}}{d{Bf}}}{{Af{Cl}}}}0{{{d{Fl}}{d{Fl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00{{{d{Fl}}{d{DfEd}}}{{Fd{ClG`}}}}{cc{}}{{{d{Fl}}{d{Dfc}}}ClEl}{{}C`}{ce{}{}}{{{d{Ad}}}Bh}{{{d{Fn}}Cb}{{Af{Bh}}}}0{{{d{{l{Ad}}}}}{{Af{{Al{Ad}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{Bn{d{Bf}}}{{Af{Ad}}}}2{{{d{c}}}e{}{}}{c{{Fd{e}}}{}{}}0{{{d{c}}}Ff{}}{{{d{Fn}}BhBhDdBh}{{Af{Ch}}}}0","D":"Eh","p":[[10,"AsBinary",4,286],[1,"reference"],[8,"BinaryChunked",287],[10,"BinaryNameSpaceImpl",4,288],[1,"u8"],[1,"slice"],[8,"BooleanChunked",287],[10,"ChunkedSet",4,289],[8,"IdxSize",290],[5,"Series",291],[8,"PolarsResult",292],[10,"Copy",293],[17,"Item"],[6,"Option",294],[10,"IntoIterator",295],[10,"AsList",23],[8,"ListChunked",287],[10,"ListNameSpaceImpl",23,296],[1,"str"],[1,"bool"],[8,"StringChunked",287],[8,"IdxCa",297],[1,"i64"],[1,"usize"],[5,"SortOptions",298],[10,"AsString",72],[10,"IntoDf",74],[5,"DataFrame",299],[5,"Private",300],[1,"unit"],[10,"JoinDispatch",78,301],[8,"LeftJoinIds",78,302],[5,"JoinArgs",78,302],[5,"String",303],[0,"mut"],[6,"JoinCoalesce",78,302],[6,"JoinType",78,302],[6,"JoinValidation",78,302],[10,"CrossJoin",78,304],[1,"tuple"],[8,"ChunkJoinOptIds",78,302],[5,"Formatter",305],[8,"Result",305],[10,"DataFrameJoinOps",78],[10,"AsRef",306],[10,"Hasher",307],[10,"SeriesJoin",78,308],[8,"InnerJoinIds",78,302],[5,"PrimitiveArray",309],[6,"Result",310],[5,"TypeId",311],[10,"ArgAgg",235,312],[10,"SeriesSealed",235,313],[6,"SearchSortedSide",235,314],[10,"SeriesMethods",235,315],[5,"Error",305]],"r":[[4,286],[5,288],[6,289],[24,296],[78,302],[79,302],[82,304],[86,302],[87,302],[88,302],[89,301],[91,302],[92,302],[95,302],[100,308],[105,316],[108,316],[113,316],[141,301],[233,78],[234,74],[236,312],[239,314],[240,315],[241,313],[248,317],[249,317],[250,317],[253,318],[254,319],[270,319],[273,318],[274,318],[275,318],[276,320],[277,321],[278,322],[279,318]],"b":[[172,"impl-Debug-for-JoinType"],[173,"impl-Display-for-JoinType"],[174,"impl-Display-for-JoinValidation"],[175,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPIAEQAAAAgACwABAA8AAgAVAA8AKQA3AGUABQBtABkAiQAoALcADADJAAEAzAAAAM4AHgDuAAUA9gACAPwADgAMAQEAEgEKAA=="}],\
["polars_sql",{"t":"FNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNOONNNNNNOONONNNNOMNNNNNNNNNNNNNNNNNONNNMNNNNNONNNNOMNONNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","__clone_box","allow_group_aware","allow_rename","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_to_supertypes","changes_length","check_lengths","check_lengths","clone","clone","clone_into","clone_into","collect_groups","contains","contains","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt_str","from","from","from","get_udf","get_udf","hash","init","init","init","input_wildcard_expansion","into","into","into","is_groups_sensitive","pass_name_to_apply","register","register","returns_scalar","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","all_functions","all_keywords"],"q":[[0,"polars_sql"],[31,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_sql::context"],[111,"polars_lazy::frame"],[112,"polars_error"],[113,"alloc::string"],[114,"polars_utils::aliases"],[115,"alloc::vec"],[116,"alloc::sync"],[117,"polars_plan::dsl::expr"],[118,"core::convert"],[119,"core::result"],[120,"core::any"],[121,"polars_plan::logical_plan::options"],[122,"polars_plan::logical_plan"],[123,"core::fmt"],[124,"polars_plan::dsl::udf"],[125,"core::option"],[126,"core::hash"],[127,"polars_sql::sql_expr"]],"i":[0,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,0,5,5,5,5,5,5,5,21,0,21,0,0,0,19,21,19,19,22,19,21,22,19,21,19,19,19,19,19,21,19,21,19,13,22,19,22,19,21,22,19,21,22,19,21,19,19,19,19,19,21,19,22,19,21,13,22,19,22,19,21,19,22,19,21,19,19,13,22,19,19,21,22,19,21,22,19,21,22,19,21,22,19,21,0,0],"f":"`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{j}}}j}{{{b{c}}{b{he}}}f{}{}}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{ce{}{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{{{b{c}}}e{}{}}{c{{Bb{e}}}{}{}}0{{{b{c}}}Bd{}}{{{b{hj}}{b{n}}}f}9{{j{Al{Aj}}}j}``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00``{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{{b{c}}{b{he}}}f{}{}}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{{b{c}}{b{e}}}Bh{}{}}00{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00`{ce{}{}}00{{{b{Bf}}}Bh}`{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}`{{{b{c}}}e{}{}}0{c{{Bb{e}}}{}{}}00000{{{b{c}}}Bd{}}00666{{}{{Ah{{b{n}}}}}}0","D":"Dh","p":[[1,"reference"],[5,"Private",109],[1,"unit"],[0,"mut"],[5,"SQLContext",0,110],[1,"usize"],[1,"str"],[5,"LazyFrame",111],[8,"PolarsResult",112],[5,"String",113],[8,"PlHashMap",114],[5,"Vec",115],[10,"FunctionRegistry",31],[5,"Arc",116],[6,"Expr",117],[10,"AsRef",118],[6,"Result",119],[5,"TypeId",120],[5,"FunctionOptions",31,121],[1,"bool"],[6,"Context",31,122],[5,"DefaultFunctionRegistry",31],[5,"Formatter",123],[5,"Error",123],[5,"UserDefinedFunction",124],[6,"Option",125],[10,"Hasher",126]],"r":[[0,110],[23,127],[32,122],[35,121]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEkADAACAAgAEAAAABkAAwAeAAAAIQAAACQAAAAmABEAOgARAFAABABaAAAAXAAAAF4ADQA="}],\
["polars_time",{"t":"PGFPPKKKPFCHHOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","DataPoint","Duration","Friday","Label","Left","Left","Monday","None","Right","Right","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","days","days_only","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","ensure_duration_matches_data_type","ensure_is_constant_duration","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","new","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_impl","truncate_ms","truncate_ms","truncate_ns","truncate_ns","truncate_us","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[22,"polars_time::chunkedarray"],[24,"polars_time::chunkedarray::string"],[56,"polars_time::chunkedarray::string::infer"],[81,"polars_time::prelude"],[279,"polars_time::series"],[300,"chrono::naive::datetime"],[301,"polars_time::windows::duration"],[302,"polars_time::windows::group_by"],[303,"polars_core::datatypes::time_unit"],[304,"polars_arrow::legacy::time_zone"],[305,"core::option"],[306,"polars_core::chunked_array::logical::datetime"],[307,"polars_error"],[308,"polars_time::round"],[309,"polars_core::datatypes"],[310,"chrono::naive::time"],[311,"polars_core::chunked_array::logical::time"],[312,"polars_time::truncate"],[313,"polars_time::upsample"],[314,"polars_core::frame"],[315,"alloc::string"],[316,"polars_core::utils"],[317,"dyn_clone::sealed"],[318,"polars_time::chunkedarray::string::patterns"],[319,"core::fmt"],[320,"core::hash"],[321,"core::result"],[322,"core::any"],[323,"core::clone"],[324,"polars_time::windows::bounds"],[325,"polars_time::windows::window"],[326,"core::cmp"],[327,"polars_core::datatypes::dtype"],[328,"polars_core::frame::group_by::proxy"],[329,"alloc::vec"],[330,"core::ops::function"],[331,"polars_core::series"],[332,"polars_time::date_range"]],"i":[5,0,0,5,5,0,0,0,5,0,0,0,0,44,4,0,12,0,0,16,17,17,0,0,0,25,25,25,25,25,0,0,25,23,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,25,25,25,25,25,25,25,0,39,0,0,32,32,32,32,32,32,32,32,32,0,32,32,32,32,35,32,32,32,39,32,32,5,0,0,0,42,43,0,43,0,5,42,43,5,5,42,43,0,43,0,43,43,43,0,43,41,4,5,42,43,44,4,4,4,47,41,4,5,42,43,44,47,41,4,5,42,43,44,41,4,5,42,43,44,41,4,5,42,43,44,4,4,4,4,43,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,0,0,4,5,42,43,4,4,4,5,5,5,42,42,42,43,43,43,41,4,4,5,42,43,47,41,4,5,42,43,44,44,44,44,44,0,0,4,5,42,43,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,4,4,4,4,4,4,4,4,4,4,44,47,44,4,4,4,44,44,44,41,4,5,42,43,44,4,4,4,44,4,44,4,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,43,4,4,0,0,55,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57],"f":"```````````{{{d{b}}ffhjl{A`{{d{n}}}}}{{Ad{Ab}}}}{{{d{f}}}Af}```{{{d{Ah}}{d{Aj}}{A`{{d{n}}}}}{{Ad{Ah}}}}`{{{d{b}}AlAlhj}{{Ad{An}}}}{{{d{B`}}{A`{{d{n}}}}{d{Aj}}}{{Ad{B`}}}}{{{d{Bb}}c{d{b}}h}{{Ad{Bd}}}{{Bh{Bf}}}}0``````````{{{d{c}}Bj}Bl{}}{{{d{Bn}}}{{d{Aj}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{C`c}}}{{d{C`e}}}{}{}}{{{d{Cb}}}Cb}{{{d{c}}{d{C`e}}}Bl{}{}}{Cd{{d{c}}}{}}{Cd{{d{C`c}}}{}}{CdBl}{{{d{Cb}}{d{Cb}}}Af}{{{d{c}}{d{e}}}Af{}{}}00{{{d{Cb}}{d{C`Cf}}}Ch}{cc{}}{{{d{Cb}}{d{C`c}}}BlCj}`{{}Cd}{ce{}{}}{{{d{Cb}}{d{b}}}Af}{{{d{c}}}e{}{}}{c{{Cl{e}}}{}{}}0{{{d{c}}}Cn{}}````{{{d{c}}Bj}Bl{}}{{{d{c}}}{{d{e}}}{}{}}{{{d{C`c}}}{{d{C`e}}}{}{}}{{{d{{D`{c}}}}}{{D`{c}}}{DbDd}}{{{d{c}}{d{C`e}}}Bl{}{}}{Cd{{d{c}}}{}}{Cd{{d{C`c}}}{}}{CdBl}?{{{d{b}}}{{A`{Cb}}}}>=`{{{d{C`{D`{c}}}}{d{b}}}A`Dd}{{{d{C`Df}}{d{{Dj{Dh}}}}{A`{l}}}{{A`{c}}}{}}`=<{{c{A`{l}}}{{Ad{{Dn{}{{Dl{e}}}}}}}{}{}}=<````````````````````````;;;;;;{{{d{h}}E`{A`{{d{n}}}}}{{Ad{E`}}}}00;;;;;;;:::::::{{{d{Eb}}}Eb}{{{d{h}}}h}{{{d{j}}}j}{{{d{Ed}}}Ed}{{{d{Ef}}}Ef}{{{d{Eh}}}Eh}>>>>>>{{{d{h}}{d{h}}}Ej}{{{d{c}}{d{e}}}Ej{}{}}{{{d{h}}}E`}{{{d{h}}}Af}{{}Ef}{Cd{{d{c}}}{}}000000{Cd{{d{C`c}}}{}}000000{CdBl}000000{{h{d{El}}{d{b}}}{{Ad{Bl}}}}{{h{A`{{d{b}}}}{d{b}}}{{Ad{Bl}}}}{{{d{h}}{d{h}}}Af}{{{d{j}}{d{j}}}Af}{{{d{Ed}}{d{Ed}}}Af}{{{d{Ef}}{d{Ef}}}Af}{{{d{c}}{d{e}}}Af{}{}}00000000000{{{d{Eb}}{d{C`Cf}}}Ch}{{{d{h}}{d{C`Cf}}}Ch}0{{{d{j}}{d{C`Cf}}}Ch}{{{d{Ed}}{d{C`Cf}}}Ch}{{{d{Ef}}{d{C`Cf}}}Ch}{cc{}}000000{{{d{Eh}}E`j{A`{{d{n}}}}}{{Ad{Eb}}}}00{{{d{Eh}}Ebjl{A`{{d{n}}}}Ef}{{Ad{En}}}}{{hh{d{{Dj{E`}}}}jl{A`{n}}}{{Ad{F`}}}}{{Eh{d{{Dj{E`}}}}jl{d{{A`{Fb}}}}AfAfEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{{d{h}}{d{C`c}}}BlCj}{{{d{j}}{d{C`c}}}BlCj}{{{d{Ed}}{d{C`c}}}BlCj}{{{d{Ef}}{d{C`c}}}BlCj}{{}Cd}000000{ce{}{}}0000000{{{d{h}}{A`{{d{b}}}}}Af}{{{d{h}}}Af}0{{{d{h}}}E`}1{{hE`}h}1{hc{}}3{E`h}{{hhh}Eh}{{{d{C`En}}}{{A`{c}}}{}}`{{{d{b}}}h}`{{{d{h}}{d{h}}}{{A`{Ej}}}}{{{d{Eh}}E`{A`{{d{n}}}}}{{Ad{E`}}}}00{{{d{c}}}e{}{}}00000{{{d{c}}}Bf{}}{{{d{h}}E`{A`{{d{n}}}}ceg}{{Ad{E`}}}{{Fj{E`}{{Fh{E`}}}}}{{Fj{E`}{{Fh{f}}}}}{{Fj{f}{{Fh{E`}}}}}}{{{d{h}}E`{A`{{d{n}}}}}{{Ad{E`}}}}40404{c{{Cl{e}}}{}{}}0000000000000{{{d{c}}}Cn{}}000000{{{d{Ef}}}{{A`{Fl}}}}?{{{d{h}}}Af}``{{{d{Fn}}}{{d{G`}}}}{{{d{Gb}}}{{Ad{Gd}}}}{{{d{Gb}}}{{Ad{Gf}}}}0{{{d{Gb}}}{{Ad{Gh}}}}22112{{{d{Gb}}}{{Ad{Gj}}}}322{{{d{Gb}}{d{b}}}{{Ad{G`}}}}0334","D":"Gd","p":[[1,"str"],[1,"reference"],[5,"NaiveDateTime",300],[5,"Duration",81,301],[6,"ClosedWindow",81,302],[6,"TimeUnit",303],[6,"Tz",304],[6,"Option",305],[8,"DatetimeChunked",306],[8,"PolarsResult",307],[1,"bool"],[10,"PolarsRound",0,308],[8,"StringChunked",309],[5,"NaiveTime",310],[8,"TimeChunked",311],[10,"PolarsTruncate",0,312],[10,"PolarsUpsample",0,313],[5,"DataFrame",314],[5,"String",315],[10,"IntoVec",316],[5,"Private",317],[1,"unit"],[10,"AsString",24],[0,"mut"],[6,"Pattern",24,318],[1,"usize"],[5,"Formatter",319],[8,"Result",319],[10,"Hasher",320],[6,"Result",321],[5,"TypeId",322],[5,"DatetimeInfer",56],[10,"Clone",323],[10,"PolarsNumericType",309],[10,"StrpTimeParser",56],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",56],[1,"i64"],[5,"Bounds",81,324],[6,"Label",81,302],[6,"StartBy",81,302],[5,"Window",81,325],[6,"Ordering",326],[6,"DataType",327],[5,"BoundsIter",81,325],[8,"GroupsSlice",328],[8,"TimeZone",327],[5,"Vec",329],[1,"tuple"],[17,"Output"],[10,"Fn",330],[1,"u32"],[10,"AsSeries",279],[5,"Series",331],[10,"TemporalMethods",279],[8,"Int32Chunked",309],[8,"Int8Chunked",309],[8,"BooleanChunked",309],[8,"Int16Chunked",309]],"r":[[1,302],[2,301],[5,308],[6,312],[7,313],[9,325],[11,332],[12,332],[18,332],[22,24],[30,318],[82,324],[83,325],[84,302],[87,301],[89,302],[97,302],[99,279],[103,325],[166,301],[167,301],[201,302],[202,302]],"b":[[185,"impl-Display-for-Duration"],[186,"impl-Debug-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPIAFwAAAAkADQAFABQAAAAXABcAMAACADQAEABGAAEASQATAF4ACQBpAFUAxgAAAMgAAQDMAAoA3gABAOIAAgDmAAAA6QACAO0AAQDyAAgA/AAAAP4AAAAAARoAHwEAAA=="}],\
["polars_utils",{"t":"EECCCCCCCCCCCCCCQQQQCCCCCCCQCCCCCCCCCCQQCCRKMMRKIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHFNNNNNNNNNNNNNNNNNNNNNNKNNNNNKMHHHHFKNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHKKKRKRNNNNMMMHKNNNNMMTRKMMHHFNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","fixedringbuffer","float","floor_divmod","fmt","format_list","format_list_container","format_smartstring","format_tuple","functions","hashing","idx_vec","index","io","iter","macros","matches_any_order","mem","min_max","nulls","ord","partitioned","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","new","new","new","new","new","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","Arena","Node","add","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","compare","default","default","deref","deref","deref_mut","deref_mut","drop","drop","duplicate","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","init","into","into","is_empty","len","new","partial_cmp","pop","replace","replace_with","swap","take","to_owned","to_owned","try_from","try_from","try_into","try_into","try_replace_with","type_id","type_id","version","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","find_first_ge_index","find_first_gt_index","FastCachedFunc","FastFixedCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","from","from","get","get_mut","get_or_insert_with","init","init","insert","into","into","new","new","to_owned","try_from","try_from","try_get_or_insert_with","try_into","try_into","type_id","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","from","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","FixedRingBuffer","as_slices","borrow","borrow_mut","capacity","deref","deref_mut","drop","drop","fill_repeat","from","init","into","is_empty","is_full","len","new","pop_front","push","remaining_capacity","try_from","try_into","type_id","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","deref","deref_mut","dirty_hash","dirty_hash","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","default","deref","deref","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from_fallible_iter","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","borrow","borrow_mut","borrow_mut","check_bounds","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extract","fmt","fmt","from","from","from","get","get_unchecked","idx","init","init","inner","inner_mut","into","into","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","null","null_count","store","to_idx","to_opt","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","create_file","open_file","EnumerateIdxTrait","FallibleIterator","FromFallibleIterator","IntoIterCopied","IntoIteratorCopied","OwnedItem","enumerate_idx","enumerate_idx","enumerate_u32","enumerate_u32","from_fallible_iter","get_result","into_iter","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deref_unchecked","drop","fmt","from","from","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","equivalent","equivalent","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[42,"polars_utils::abs_diff"],[46,"polars_utils::aliases"],[62,"polars_utils::arena"],[123,"polars_utils::atomic"],[143,"polars_utils::binary_search"],[145,"polars_utils::cache"],[181,"polars_utils::cell"],[201,"polars_utils::clmul"],[205,"polars_utils::contention_pool"],[220,"polars_utils::cpuid"],[222,"polars_utils::fixedringbuffer"],[245,"polars_utils::float"],[251,"polars_utils::floor_divmod"],[253,"polars_utils::functions"],[257,"polars_utils::hashing"],[289,"polars_utils::idx_vec"],[333,"polars_utils::index"],[395,"polars_utils::io"],[397,"polars_utils::iter"],[410,"polars_utils::mem"],[411,"polars_utils::min_max"],[418,"polars_utils::nulls"],[423,"polars_utils::ord"],[425,"polars_utils::partitioned"],[444,"polars_utils::slice"],[458,"polars_utils::sort"],[460,"polars_utils::sync"],[483,"polars_utils::sys"],[497,"polars_utils::total_ord"],[547,"polars_utils::unwrap"],[549,"polars_utils::vec"],[562,"num_traits"],[563,"core::cmp"],[564,"core::marker"],[565,"core::fmt"],[566,"core::clone"],[567,"core::option"],[568,"core::hash"],[569,"core::default"],[570,"core::ops::function"],[571,"core::result"],[572,"core::any"],[573,"core::borrow"],[574,"alloc::sync"],[575,"alloc::vec"],[576,"core::convert"],[577,"core::ops::range"],[578,"core::iter::traits::collect"],[579,"polars_utils::iter::fallible"],[580,"core::slice::iter"],[581,"polars_error"],[582,"std::fs"],[583,"std::path"],[584,"polars_utils::iter::enumerate_idx"],[585,"core::error"],[586,"core::iter::traits::iterator"],[587,"hashbrown::map"],[588,"core::mem::maybe_uninit"],[589,"core::slice::index"],[590,"num_traits::cast"],[591,"rayon_core::thread_pool"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,114,0,0,0,0,0,114,10,11,115,116,114,10,11,115,116,0,0,13,15,13,15,13,13,15,13,15,13,15,15,15,13,15,13,15,13,15,13,13,15,15,15,15,15,13,15,13,13,13,13,13,13,15,15,13,15,13,13,13,13,15,13,13,13,13,13,15,13,15,13,15,13,13,15,13,13,13,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,38,35,38,35,35,35,35,38,35,38,35,38,35,38,38,35,35,35,35,38,35,35,38,35,38,35,35,38,35,35,38,35,38,35,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,47,47,47,47,47,0,48,0,0,0,0,0,0,53,53,53,53,53,53,54,53,53,53,53,53,53,53,53,53,0,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,0,0,67,0,0,0,0,65,66,65,66,0,65,66,65,66,65,66,65,66,65,66,65,65,65,65,66,65,66,65,65,66,67,67,65,65,66,65,66,65,66,69,66,65,65,69,65,66,70,66,71,65,65,66,65,66,65,66,65,66,0,0,0,0,0,79,0,79,74,74,74,74,75,60,79,0,0,81,81,81,81,81,81,68,68,0,68,68,0,0,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,0,0,0,0,87,89,89,91,0,92,92,93,93,0,0,0,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,0,0,98,98,98,98,98,98,98,98,98,98,98,98,106,0,0,0,0,106,0,101,101,0,0,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,106,101,106,94,102,94,94,103,103,94,94,102,101,101,101,101,0,107,0,0,0,109,0,0,109,109,110,111,112,111,113],"f":"````````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}``````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{An}}{Al{An}}}Bd}{{{Al{c}}{Al{e}}}Bd{}{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{An}}{Al{AhBh}}}Bj}{{{Al{{Aj{c}}}}{Al{AhBh}}}Bjl}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Bl{An}}}{{Bl{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Bn{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`C`}{{}Ab}0{ce{}{}}0{{{Al{{Aj{c}}}}}Bf{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Bn{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Cb{{Cf{c}{{Cd{c}}}}}}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCb}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{Ah{Aj{c}}}}Ane}{{Ch{B``}}}Cb{{Cj{c}{{Cd{{Ch{c`}}}}}}}}{{{Al{c}}}Cl{}}0{{{Al{{Aj{c}}}}}Cn{}}{Ab{{Aj{c}}}{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{D`}}}D`}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}D`}{{{Al{D`}}}{{Al{c}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{AhD`}}}{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{ce{}{}}{{{Al{AhD`}}}B`}{AbD`}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Al{{Db{c}}}}c}AbDd}0``{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Df{ce}}}}}{{Df{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}{{Df{ce}}}{DhDj}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Dl{ceg}}}}cBf}e{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{cc{}}0{{{Al{{Df{eg}}}}{Al{c}}}{{Bn{{Al{g}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}}{{Bn{{Al{Ahg}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{E`{c}}DhDj}{}{{Cf{{Al{e}}}{{Cd{g}}}}}}{{}Ab}0{{{Al{Ah{Df{ce}}}}ce}{{Al{Ahe}}}{DhDj}{}}{ce{}{}}0{{gAb}{{Dl{ceg}}}{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{Ab{{Df{ce}}}{DhDj}{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{Ah{Df{eg}}}}{Al{c}}k}{{Ch{{Al{Ahg}}i}}}{}{{E`{c}}DhDj}{}{}{{Cf{{Al{e}}}{{Cd{{Ch{gi}}}}}}}}11{{{Al{c}}}Cl{}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{}{{Eb{c}}}Cb}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{c{{Eb{c}}}{}}{cc{}}{Edc{}}{{{Al{{Eb{c}}}}}{}Dn}{{{Al{Ah{Eb{c}}}}}{{Al{Ahc}}}Dn}{{}Ab}{ce{}{}}{{{Eb{c}}}c{}}7{{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{EfEf}Ef}0{EfEf}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{{Al{{Eh{c}}}}}cCb}>={Ab{{Eh{c}}}Cb}{{{Al{{Eh{c}}}}c}B`Cb}<<;{{}Bf}0`{{{Al{{Ej{c}}}}}{{El{{Al{{Db{c}}}}{Al{{Db{c}}}}}}}{}}:9{{{Al{{Ej{c}}}}}Ab{}}987{{{Al{Ah{Ej{c}}}}}B`{}}{{{Al{Ah{Ej{c}}}}cAb}Abj}8{{}Ab}{ce{}{}}{{{Al{{Ej{c}}}}}Bf{}}05{Ab{{Ej{c}}}{}}{{{Al{Ah{Ej{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Ej{c}}}}c}{{Bn{B`}}}{}}8{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`<<{{{Al{En}}}Bf}=0`{{F`F`}{{El{F`F`}}}}{{{Fb{c}}e}{{Fb{c}}}Bb{{Cj{c}{{Cd{c}}}}}}{{{Al{{Db{e}}}}{Bn{Ab}}}{{Fd{c}}}Bb{{Ff{{Db{c}}}}}}{{AbAb{Fh{Ab}}}{{Fh{Ab}}}}{{{Fb{c}}g}{{Ch{{Fb{c}}e}}}Bb{}{{Cj{c}{{Cd{{Ch{ce}}}}}}}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{Fj}}}Fj}{{{Al{c}}{Al{Ahe}}}B`{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Fl}}}Ef}{{{Al{Fj}}}Ef}{AbB`}{{{Al{Fj}}{Al{Fj}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Fj}}{Al{AhBh}}}Bj}{cc{}}{{{Al{Fj}}{Al{Ahc}}}B`C`}{{EfAb}Ab}{{}Ab}{ce{}{}}{{{Al{Fj}}}Bf}{{{Bn{{Al{{Db{Fn}}}}}}Ef}Fj}2{{{Al{c}}}e{}{}}{{{Al{Fj}}}c{}};7{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Fjc{}}``{{{Al{Ah{G`{c}}}}}{{Al{Ah{Db{c}}}}}{}}0{{{Al{{G`{c}}}}}{{Al{{Db{c}}}}}{}}0{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{G`{c}}}}}Ab{}}{{{Al{{G`{c}}}}}{{G`{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}{{G`{c}}}{}}{{{Al{{G`{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{Ah{G`{c}}}}}B`{}}{{{Al{{G`{c}}}}{Al{{G`{c}}}}}BfGb}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Ah{G`{c}}}}e}B`{}{{Gf{}{{Gd{c}}}}}}{{{Al{{G`{c}}}}{Al{AhBh}}}Bjl}{cc{}}{{{Fd{c}}}{{G`{c}}}{}}{{{Al{{Db{c}}}}}{{G`{c}}}Bb}{g{{Ch{ic}}}{}{}{{Gh{c}{{Gd{e}}}}}{}}{e{{G`{c}}}{}{{Gf{}{{Gd{c}}}}}}{{}Ab}{ce{}{}}{{{Al{{G`{c}}}}}Bf{}}{{{Al{{G`{c}}}}}{{Gj{c}}}{}}{{{Al{Ah{G`{c}}}}}{{Gl{c}}}{}}{{{Al{{G`{c}}}}}Ab{}}{{}{{G`{c}}}{}}{{{Al{Ah{G`{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{G`{c}}}}c}B`{}}0{{{Al{Ah{G`{c}}}}Ab}B`{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Ab{{G`{c}}}{}}`````````{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Db{Gn}}}}Gn}{{H`{B`}}}}{{{Al{Hb}}}Hb}{{{Al{Hd}}}Hd}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Hb}}{Al{Hb}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{Hd{{El{GnGn}}}}{{{Al{Hb}}{Al{AhBh}}}Bj}{{{Al{Hd}}{Al{AhBh}}}Bj}{cc{}}{GnHb}1{{{Al{{Hf{}{{Gd{c}}}}}}Ab}cHh}0{{{Al{Hb}}}Gn}{{}Ab}0`{{{Al{AhHd}}}{{Al{AhEf}}}}{ce{}{}}0{{{Al{Hj}}}Bf}{{{Al{Hd}}}Bf}{{{Al{Hb}}}Bf}{{{Al{c}}}Bf{}}{{{Al{Hj}}}Ab}{{}Hb}{{}Hd}{{{Al{Hl}}}Ab}{{GnGn}Hd}{{HnEf}Gn}{{{Al{Hb}}}{{Bn{Gn}}}}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{c}}}Cl{}}0{c{{H`{I`}}}{{Ff{Ib}}}}0``````{Id{{`{IdGn}}}}0{Id{{`{IdCn}}}}0{g{{Ch{Ifc}}}Ih{}{{Gh{c}{{Gd{e}}}}}}{{{Al{AhGh}}}{{Ch{B`c}}}Ih}{{{In{}{{Ij{c}}{Il{e}}}}}e{}{{J`{}{{Gd{c}}}}}}{{{Al{{Db{c}}}}}{{Al{Ah{Db{c}}}}}j}`{{JbJb}Jb}000{{{Al{Jb}}{Al{Jb}}}Bf}0```{{{Al{{Hh{}{{Jd{c}}}}}}}Bf{}}{{{Hh{}{{Jd{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hEn}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Jf{ceg}}}}}{{Al{{Db{{Jh{ceg}}}}}}}{}{}{}}{{{Al{Ah{Jf{ceg}}}}}{{Al{Ah{Fd{{Jh{ceg}}}}}}}{}{}{}}{ce{}{}}{{{Fd{{Jh{ceg}}}}}{{Jf{ceg}}}{}{}{}}{{{Al{{Jf{ceg}}}}Ef}{{Jj{ceg}}}{}{}{}}{{{Al{{Jf{ceg}}}}Ef}{{El{{Jj{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jf{ceg}}}}Ef}{{El{{Jl{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jf{ceg}}}}Ef}{{Jl{ceg}}}{}{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`````{{{Al{Jn}}}{{Al{{Db{{K`{c}}}}}}}{}}{{{Al{Kb}}e}Al{}{{Kd{{Db{c}}}}}}{{{Al{AhKb}}e}{{Al{Ah}}}{}{{Kd{{Db{c}}}}}}{{{Al{Kf}}}Bf}{{{Al{{Db{Fn}}}}}Ef}{{{Al{Kh}}}{{Bn{{Al{c}}}}}{}}0{{{Al{Kj}}{Fh{Ab}}}Kj}0{{e{Al{Ah{Fd{Fn}}}}Ab}{{Al{Ah{Db{g}}}}}{Klj}{{Gf{}{{Gd{c}}}}}{Knj}}{{{Al{L`}}{Al{{Db{{El{GnGn}}}}}}{Al{Ah{Fd{Gn}}}}}B`}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Lb{c}}}}}{{Lb{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Lb{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{Lb{c}}}}{Al{AhBh}}}Bjl}{cc{}}{{}{{Lb{c}}}{}}0{{{Al{{Lb{c}}}}}{}{}}{{}Ab}{ce{}{}}{{{Al{{Lb{c}}}}}Bf{}}44{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}?><{{{Al{Ld}}}Ef};87443```````21{LfLf}{LhLh}{{{Al{{Lj{c}}}}}{{Lj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{{Lj{c}}}}{Al{{Lj{c}}}}}BdKl}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Lj{c}}}}}EfFl}{AbB`}{{{Al{{Lj{c}}}}{Al{{Lj{c}}}}}BfLl}{{{Al{c}}{Al{e}}}Bf{}{}}00{cc{}}{{{Al{{Lj{c}}}}{Al{{Lj{c}}}}}BfKl}0{{{Al{{Lj{c}}}}{Al{Ahe}}}B`LnC`}{{}Ab}{ce{}{}}{{{Al{{Lj{c}}}}}BfHh}447{{{Al{{Lj{c}}}}{Al{{Lj{c}}}}}{{Bn{Bd}}}Kl}2{{{Al{c}}}e{}{}}{{{Al{{Md{}{{M`{c}}{Mb{e}}}}}}}c{}{}}{{{Al{Kl}}{Al{Kl}}}Bd}{{{Al{Ll}}{Al{Ll}}}Bf}{{{Al{Kl}}{Al{Kl}}}Bf}0{{{Al{Ln}}{Al{Ahc}}}B`C`}{{{Al{{Db{Ln}}}}{Al{Ahc}}}B`C`}223{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Lj{c}}}eHh{}}`{Mfc{}}``````{{{Al{{Mj{}{{Mh{c}}}}}}g}{{Fd{e}}}{}{}{{Cj{{Al{c}}}{{Cd{e}}}}}}{{{Mj{}{{Mh{c}}}}g}{{Fd{e}}}{}{}{{Cj{c}{{Cd{e}}}}}}{{{Al{AhMl}}Abc}B`j}{Mn{{El{AbAb}}}}{{{Al{AhN`}}c}B`{}}{{{Al{Mn}}}{{El{AbAb}}}}{{AbLh}Nb}","D":"Jb","p":[[17,"Abs"],[10,"AbsDiff",42],[10,"Num",562],[10,"PartialOrd",563],[10,"Copy",564],[10,"Debug",565],[10,"Send",564],[10,"Sync",564],[1,"usize"],[8,"PlHashMap",46],[8,"PlHashSet",46],[0,"mut"],[5,"Arena",62],[1,"reference"],[5,"Node",62],[1,"unit"],[10,"Clone",566],[6,"Ordering",563],[1,"bool"],[5,"Formatter",565],[8,"Result",565],[1,"array"],[6,"Option",567],[10,"Hasher",568],[10,"Default",569],[17,"Output"],[10,"FnOnce",570],[6,"Result",571],[10,"FnMut",570],[5,"TypeId",572],[1,"u32"],[5,"SyncCounter",123],[1,"slice"],[10,"Ord",563],[5,"FastFixedCache",145],[10,"Hash",568],[10,"Eq",563],[5,"FastCachedFunc",145],[10,"Sized",564],[10,"Borrow",573],[5,"SyncUnsafeCell",181],[1,"never"],[1,"u64"],[5,"LowContentionPool",205],[5,"FixedRingBuffer",222],[1,"tuple"],[10,"IsFloat",245],[10,"FloorDivMod",251],[5,"Arc",574],[5,"Vec",575],[10,"AsRef",576],[5,"Range",577],[5,"BytesHash",257],[10,"DirtyHash",257],[1,"u8"],[5,"UnitVec",289],[10,"PartialEq",563],[17,"Item"],[10,"IntoIterator",578],[10,"FallibleIterator",397,579],[5,"Iter",580],[5,"IterMut",580],[8,"IdxSize",333],[8,"PolarsResult",581],[5,"NullableIdxSize",333],[5,"ChunkId",333],[10,"Indexable",333],[10,"IsNull",418],[10,"Bounded",333],[10,"NullCount",333],[10,"ToIdx",333],[5,"File",582],[5,"Path",583],[10,"EnumerateIdxTrait",397,584],[10,"FromFallibleIterator",397,579],[10,"Error",585],[17,"OwnedItem"],[17,"IntoIterCopied"],[10,"IntoIteratorCopied",397],[10,"Iterator",586],[10,"MinMax",411],[17,"Inner"],[5,"PartitionedHashMap",425],[5,"HashMap",587],[5,"RawEntryBuilder",587],[5,"RawEntryBuilderMut",587],[10,"Slice2Uninit",444],[20,"MaybeUninit",588],[10,"GetSaferUnchecked",444],[10,"SliceIndex",589],[10,"SortedSlice",444],[10,"Extrema",444],[10,"SliceAble",444],[10,"TotalOrd",497],[10,"FromPrimitive",590],[5,"ThreadPool",591],[5,"SyncPtr",460],[5,"MemInfo",483],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",497],[10,"TotalEq",497],[10,"TotalHash",497],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",497],[10,"UnwrapUncheckedRelease",547],[17,"ItemIn"],[10,"ConvertVec",549],[10,"ResizeFaster",549],[10,"IntoRawParts",549],[10,"PushUnchecked",549],[10,"CapacityByFactor",549],[10,"InitHashMaps",46],[8,"PlIndexMap",46],[8,"PlIndexSet",46]],"r":[[0,333],[1,333],[397,584],[398,579],[399,579]],"b":[[313,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[314,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOEBOgAAAAgACgBRAF4AAABgAAEAYwACAGgAEwB9AAkAiAAAAIsABACTAA4ApAAFAKwACQC3AAEAugACAL8AAADCAAAAxwAMANUAAQDYAAYA4QAGAOoAAADsAAMA8gADAPcACgADAQ4AEwECABcBCwAkARQAOgEEAEABBgBIASQAbgEAAHABAAByAQQAeQEXAJIBAACUAQYAnAELAKoBBQCxAQIAtQENAMUBBADLAQAAzgEFANUBAQDYAQMA3QEAAN8BBQDmAQQA7QEAAO8BAwD3AQMA/QELAAoCAwAPAhUAJgIEACwCAwAxAgEA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
